{"version":3,"sources":["../node_modules/@material-ui/icons/utils/createSvgIcon.js","../node_modules/@material-ui/icons/Delete.js","../node_modules/@material-ui/icons/Edit.js","app/services/account.service.js","../node_modules/@material-ui/core/esm/SvgIcon/index.js","app/pages/home/account/components/RegisterComponent.js","app/pages/home/account/components/AccountInput.js","app/pages/home/account/components/ViewComponent.js","app/pages/home/account/Accounts.js"],"names":["_interopRequireDefault","Object","defineProperty","exports","value","default","path","displayName","Component","_react","memo","forwardRef","props","ref","createElement","_SvgIcon","_extends2","muiName","_default","d","ROOT_URL","process","getAccountList","axios","get","registerAccount","accounts","post","updateAccount","patch","deleteAccount","id","delete","getIndustry","getAccountType","getParentAccount","industryIdVal","injectIntl","intl","useStyles","makeStyles","theme","formControl","marginTop","marginBottom","minWidth","selectIndustryHandleChange","event","target","setIndustry","selectParentAccountHandleChange","setParentAccount","selectCountryHandleChange","setCountry","selectCityHandleChange","setCity","selectStateHandleChange","setState","selectAccountTypeHandleChange","setAccountType","React","useState","industryId","country","city","state","parentAccountId","accountType","classes","className","initialValues","accountName","phone","website","addressLine","zipCode","validate","values","errors","formatMessage","onSubmit","setStatus","setSubmitting","then","accessToken","data","register","catch","status","touched","handleChange","handleBlur","handleSubmit","isSubmitting","noValidate","autoComplete","role","TextField","margin","label","name","onBlur","onChange","helperText","error","Boolean","FormControl","InputLabel","Select","labelId","MenuItem","disabled","acceptTerms","AccountInput","Container","Row","Col","xs","InputGroup","type","variant","InputLabelProps","shrink","size","fullWidth","required","style","width","industryName","industry","map","key","parentName","parent","firstName","lastName","street","Button","color","ViewComponent","userData","useSelector","auth","user","initialInput","profile","description","notify","success","toast","message","isModalOpen","setIsModalOpen","isUpdate","setIsUpdate","input","setInput","reRender","setRerender","useEffect","a","response","acctype","Promise","all","promise","columns","title","field","render","onClick","upAccount","delAccount","accountTypes","parentAccount","fetchData","handleSubmitBusiness","e","preventDefault","businessId","mainRole","business","open","handleClose","Accounts","exact","from","to","component","CreateAccount","viewAccount"],"mappings":"kGAEA,IAAIA,EAAyB,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,QAQR,SAAuBC,EAAMC,GAC3B,IAAIC,EAAYC,EAAOJ,QAAQK,KAAKD,EAAOJ,QAAQM,YAAW,SAAUC,EAAOC,GAC7E,OAAOJ,EAAOJ,QAAQS,cAAcC,EAASV,SAAS,EAAIW,EAAUX,SAAS,CAC3EQ,IAAKA,GACJD,GAAQN,OAGT,EAKJ,OADAE,EAAUS,QAAUF,EAASV,QAAQY,QAC9BT,GAlBT,IAAIQ,EAAYhB,EAAuB,EAAQ,KAE3CS,EAAST,EAAuB,EAAQ,IAExCe,EAAWf,EAAuB,EAAQ,O,kCCX9C,IAAIA,EAAyB,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAII,EAAST,EAAuB,EAAQ,IAIxCkB,GAAW,EAFMlB,EAAuB,EAAQ,OAElBK,SAASI,EAAOJ,QAAQS,cAAc,OAAQ,CAC9EK,EAAG,kFACD,UAEJhB,EAAQE,QAAUa,G,kCCflB,IAAIlB,EAAyB,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAII,EAAST,EAAuB,EAAQ,IAIxCkB,GAAW,EAFMlB,EAAuB,EAAQ,OAElBK,SAASI,EAAOJ,QAAQS,cAAc,OAAQ,CAC9EK,EAAG,wJACD,QAEJhB,EAAQE,QAAUa,G,kCCjBlB,mQAEaE,EAAWC,8DAMjB,SAASC,IACd,OAAOC,IAAMC,IAAN,UAAaJ,EAAb,YANkB,gBASpB,SAASK,EAAgBC,GAC9B,OAAOH,IAAMI,KAAN,UAAcP,EAAd,YAVkB,eAUuBM,GAG3C,SAASE,EAAcF,GAC5B,OAAOH,IAAMM,MAAN,UAAeT,EAAf,YAdkB,eAcwBM,GAG5C,SAASI,EAAcC,GAC5B,OAAOR,IAAMS,OAAN,UAAgBZ,EAAhB,YAlBkB,cAkBlB,YAA2CW,IAG7C,SAASE,IACd,OAAOV,IAAMC,IAAN,UAAaJ,EAAb,YArBuB,wBAwBzB,SAASc,IACd,OAAOX,IAAMC,IAAN,UAAaJ,EAAb,YAzBuB,wBA4BzB,SAASe,EAAiBJ,GAC/B,OAAOR,IAAMC,IAAN,UAAaJ,EAAb,YA3BqB,8BA2BrB,YAA2CW,M,iCCjCpD,+D,gKCgBIK,EAAgB,GA8YLC,mBA7Yf,SAA2BzB,GAAQ,IACzB0B,EAAS1B,EAAT0B,KAEFC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,YAAa,CACXC,UAAW,GACXC,aAAc,EACdC,SAAU,YAIRC,EAA6B,SAAAC,GACjCX,EAAgBW,EAAMC,OAAO5C,MAC7B6C,EAAYF,EAAMC,OAAO5C,QAGrB8C,EAAkC,SAAAH,GACtCI,EAAiBJ,EAAMC,OAAO5C,QAG1BgD,EAA4B,SAAAL,GAChCM,EAAWN,EAAMC,OAAO5C,QAGpBkD,EAAyB,SAAAP,GAC7BQ,EAAQR,EAAMC,OAAO5C,QAGjBoD,EAA0B,SAAAT,GAC9BU,EAASV,EAAMC,OAAO5C,QAGlBsD,EAAgC,SAAAX,GACpCY,EAAeZ,EAAMC,OAAO5C,QAjCE,EAoCEwD,IAAMC,SAAS,IApCjB,mBAoCzBC,EApCyB,KAoCbb,EApCa,OAqCFW,IAAMC,SAAS,IArCb,mBAqCzBE,EArCyB,KAqChBV,EArCgB,OAsCRO,IAAMC,SAAS,IAtCP,mBAsCzBG,EAtCyB,KAsCnBT,EAtCmB,OAuCNK,IAAMC,SAAS,IAvCT,mBAuCzBI,EAvCyB,KAuClBR,EAvCkB,OAwCYG,IAAMC,SAAS,IAxC3B,mBAwCzBK,EAxCyB,KAwCRf,EAxCQ,OAyCMS,IAAMC,SAAS,IAzCrB,mBAyCzBM,EAzCyB,KAyCZR,EAzCY,KA2C1BS,EAAU7B,IAEhB,OACE,yBAAK8B,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,yEACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,0BACb,wBAAIA,UAAU,0BAAd,qBAIJ,kBAAC,IAAD,CACEC,cAAe,CACbC,YAAa,GACbC,MAAO,GACPC,QAAS,GACTC,YAAa,GACbC,QAAS,GACTb,WAAY,IAEdc,SAAU,SAAAC,GACR,IAAMC,EAAS,GAqCf,OAnCKD,EAAON,cACVO,EAAOP,YAAcjC,EAAKyC,cAAc,CACtChD,GAAI,oCAIHK,IACH0C,EAAOhB,WAAaxB,EAAKyC,cAAc,CACrChD,GAAI,oCAIH8C,EAAOL,QACVM,EAAON,MAAQlC,EAAKyC,cAAc,CAChChD,GAAI,oCAIH8C,EAAOJ,UACVK,EAAOL,QAAUnC,EAAKyC,cAAc,CAClChD,GAAI,oCAIH8C,EAAOH,cACVI,EAAOJ,YAAcpC,EAAKyC,cAAc,CACtChD,GAAI,oCAIH8C,EAAOF,UACVG,EAAOH,QAAUrC,EAAKyC,cAAc,CAClChD,GAAI,oCAGD+C,GAETE,SAAU,SAACH,EAAD,GAA2C,IAAhCI,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,cAC9BzD,YAAgB,IAOb0D,MAAK,YAAgC,IAArBC,EAAoB,EAA5BC,KAAQD,YACfxE,EAAM0E,SAASF,MAEhBG,OAAM,WACLL,GAAc,GACdD,EAAU,8BAIf,gBACCJ,EADD,EACCA,OACAW,EAFD,EAECA,OACAV,EAHD,EAGCA,OACAW,EAJD,EAICA,QACAC,EALD,EAKCA,aACAC,EAND,EAMCA,WACAC,EAPD,EAOCA,aACAC,EARD,EAQCA,aARD,OAUC,0BACExB,UAAU,+BACVW,SAAUY,EACVE,YAAU,EACVC,aAAa,OAEb,yBAAK1B,UAAU,aACb,yBAAKA,UAAU,oBACZmB,GACC,yBAAKnB,UAAU,8BACb,yBAAKA,UAAU,wBAAwB2B,KAAK,SAC1C,yBAAK3B,UAAU,cACb,uBAAGA,UAAU,oCAEf,yBAAKA,UAAU,cAAcmB,KAInC,yBAAKnB,UAAU,oBACb,yBAAKA,UAAU,0BACb,wBAAIA,UAAU,0BAAd,kBAKJ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,mBACb,kBAAC4B,EAAA,EAAD,CACEC,OAAO,SACPC,MAAM,eACN9B,UAAU,gBACV+B,KAAK,cACLC,OAAQV,EACRW,SAAUZ,EACVtF,MAAOyE,EAAON,YACdgC,WACEd,EAAQlB,aAAeO,EAAOP,YAEhCiC,MAAOC,QACLhB,EAAQlB,aAAeO,EAAOP,gBAKpC,yBAAKF,UAAU,mBACb,kBAAC4B,EAAA,EAAD,CACEC,OAAO,SACPC,MAAM,eACN9B,UAAU,gBACV+B,KAAK,QACLC,OAAQV,EACRW,SAAUZ,EACVtF,MAAOyE,EAAOL,MACd+B,WAAYd,EAAQjB,OAASM,EAAON,MACpCgC,MAAOC,QAAQhB,EAAQjB,OAASM,EAAON,UAI3C,yBAAKH,UAAU,mBACb,kBAAC4B,EAAA,EAAD,CACEC,OAAO,SACPC,MAAM,UACN9B,UAAU,gBACV+B,KAAK,UACLC,OAAQV,EACRW,SAAUZ,EACVtF,MAAOyE,EAAOJ,QACd8B,WAAYd,EAAQhB,SAAWK,EAAOL,QACtC+B,MAAOC,QAAQhB,EAAQhB,SAAWK,EAAOL,aAK/C,yBAAKJ,UAAU,YACb,yBAAKA,UAAU,mBACb,kBAACqC,EAAA,EAAD,CAAarC,UAAWD,EAAQ1B,aAC9B,kBAACiE,EAAA,EAAD,CACE5E,GAAG,gBACHsE,OAAQV,EACRa,MAAOC,QACLhB,EAAQ3B,YAAcgB,EAAOhB,aAJjC,YASA,kBAAC8C,EAAA,EAAD,CACEC,QAAQ,gBACRT,KAAK,aACLhG,MAAO0D,EACPwC,SAAUxD,EACVuD,OAAQV,EACRa,MAAOC,QACLhB,EAAQ3B,YAAcgB,EAAOhB,aAG/B,kBAACgD,EAAA,EAAD,CAAU1G,MAAM,IACd,sDAEF,kBAAC0G,EAAA,EAAD,CAAU1G,MAAM,YAAhB,YACA,kBAAC0G,EAAA,EAAD,CAAU1G,MAAM,SAAhB,SACA,kBAAC0G,EAAA,EAAD,CAAU1G,MAAM,WAAhB,WACA,kBAAC0G,EAAA,EAAD,CAAU1G,MAAM,SAAhB,SACA,kBAAC0G,EAAA,EAAD,CAAU1G,MAAM,YAAhB,YACA,kBAAC0G,EAAA,EAAD,CAAU1G,MAAM,YAAhB,eAKN,yBAAKiE,UAAU,mBACb,kBAACqC,EAAA,EAAD,CAAarC,UAAWD,EAAQ1B,aAC9B,kBAACiE,EAAA,EAAD,CAAY5E,GAAG,sBAAf,kBAGA,kBAAC6E,EAAA,EAAD,CACEC,QAAQ,qBACRT,KAAK,kBACLhG,MAAO8D,EACPoC,SAAUpD,GAEV,kBAAC4D,EAAA,EAAD,CAAU1G,MAAM,IACd,mDAMR,yBAAKiE,UAAU,mBACb,kBAACqC,EAAA,EAAD,CAAarC,UAAWD,EAAQ1B,aAC9B,kBAACiE,EAAA,EAAD,CAAY5E,GAAG,oBAAf,gBAGA,kBAAC6E,EAAA,EAAD,CACEC,QAAQ,mBACRzG,MAAO+D,EACPmC,SAAU5C,GAEV,kBAACoD,EAAA,EAAD,CAAU1G,MAAM,IACd,oDAEF,kBAAC0G,EAAA,EAAD,CAAU1G,MAAM,WAAhB,WACA,kBAAC0G,EAAA,EAAD,CAAU1G,MAAM,cAAhB,cAGA,kBAAC0G,EAAA,EAAD,CAAU1G,MAAM,YAAhB,YACA,kBAAC0G,EAAA,EAAD,CAAU1G,MAAM,cAAhB,cAGA,kBAAC0G,EAAA,EAAD,CAAU1G,MAAM,cAAhB,mBASV,yBAAKiE,UAAU,oBACb,yBAAKA,UAAU,0BACb,wBAAIA,UAAU,0BAAd,kBAKJ,yBAAKA,UAAU,mBACb,kBAAC4B,EAAA,EAAD,CACEC,OAAO,SACPC,MAAM,eACN9B,UAAU,gBACV+B,KAAK,cACLC,OAAQV,EACRW,SAAUZ,EACVtF,MAAOyE,EAAOH,YACd6B,WAAYd,EAAQf,aAAeI,EAAOJ,YAC1C8B,MAAOC,QACLhB,EAAQf,aAAeI,EAAOJ,gBAIpC,yBAAKL,UAAU,OACb,yBAAKA,UAAU,YACb,kBAACqC,EAAA,EAAD,CAAarC,UAAWD,EAAQ1B,aAC9B,kBAACiE,EAAA,EAAD,CAAY5E,GAAG,gBAAf,WACA,kBAAC6E,EAAA,EAAD,CACEC,QAAQ,eACRT,KAAK,UACLhG,MAAO2D,EACPuC,SAAUlD,GAEV,kBAAC0D,EAAA,EAAD,CAAU1G,MAAM,IACd,iDAKN,kBAACsG,EAAA,EAAD,CAAarC,UAAWD,EAAQ1B,aAC9B,kBAACiE,EAAA,EAAD,CAAY5E,GAAG,cAAf,SACA,kBAAC6E,EAAA,EAAD,CACEC,QAAQ,aACRT,KAAK,QACLhG,MAAO6D,EACPqC,SAAU9C,GAEV,kBAACsD,EAAA,EAAD,CAAU1G,MAAM,IACd,gDAMR,yBAAKiE,UAAU,YACb,yBAAKA,UAAU,mBACb,kBAACqC,EAAA,EAAD,CAAarC,UAAWD,EAAQ1B,aAC9B,kBAACiE,EAAA,EAAD,CAAY5E,GAAG,aAAf,QACA,kBAAC6E,EAAA,EAAD,CACEC,QAAQ,YACRT,KAAK,OACLhG,MAAO4D,EACPsC,SAAUhD,GAEV,kBAACwD,EAAA,EAAD,CAAU1G,MAAM,IACd,+CAMR,yBAAKiE,UAAU,mBACb,kBAAC4B,EAAA,EAAD,CACEC,OAAO,SACPC,MAAM,WACN9B,UAAU,gBACV+B,KAAK,UACLC,OAAQV,EACRW,SAAUZ,EACVtF,MAAOyE,EAAOF,QACd4B,WAAYd,EAAQd,SAAWG,EAAOH,QACtC6B,MAAOC,QAAQhB,EAAQd,SAAWG,EAAOH,eAOnD,yBAAKN,UAAU,oBACb,yBAAKA,UAAU,gBACb,4BACE0C,SAAUlB,IAAiBhB,EAAOmC,YAClC3C,UAAU,+BAFZ,0B,sHC5BT4C,EApWM,SAACrG,GAAW,IAAD,MAC9B,OACE,0BAAMoE,SAAUpE,EAAMgF,cACpB,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACC,EAAA,EAAD,CAAYjD,UAAU,QACpB,kBAAC4B,EAAA,EAAD,CACEK,SAAU1F,EAAM8E,aAChB3D,GAAG,cACHwF,KAAK,cACLpB,MAAM,eACN9B,UAAU,GACVjE,MAAOQ,EAAMyE,KAAKd,YAClBiD,QAAQ,WACRC,gBAAiB,CACfC,QAAQ,GAEVC,KAAK,QACLC,WAAW,EACXC,UAAQ,MAId,kBAACT,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACX,EAAA,EAAD,CACER,OAAO,QACPsB,QAAQ,WACRM,MAAO,CAAEC,MAAO,OAAQ7B,OAAQ,IAEhC,kBAACS,EAAA,EAAD,CAAY5E,GAAG,mBAAf,YACA,kBAAC6E,EAAA,EAAD,CACExG,MAAOQ,EAAMyE,KAAK2C,aAClB1B,SAAU1F,EAAM8E,aAChBS,MAAM,WACNC,KAAK,gBAEL,kBAACU,EAAA,EAAD,CAAU1G,MAAM,KACd,gDAPJ,UAaGQ,EAAMqH,gBAbT,aAaG,EAAgBC,KAAI,SAAC9H,GAAD,OACnB,kBAAC0G,EAAA,EAAD,CAAUqB,IAAK/H,EAAM2B,GAAI3B,MAAOA,EAAM2B,IACnC3B,EAAM4H,oBAsBjB,kBAACZ,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACX,EAAA,EAAD,CACER,OAAO,QACPsB,QAAQ,WACRM,MAAO,CAAEC,MAAO,OAAQ7B,OAAQ,IAEhC,kBAACS,EAAA,EAAD,CAAY5E,GAAG,mBAAf,kBACA,kBAAC6E,EAAA,EAAD,CACExG,MAAOQ,EAAMyE,KAAK+C,WAClB9B,SAAU1F,EAAM8E,aAChBS,MAAM,iBACNC,KAAK,cAEL,kBAACU,EAAA,EAAD,CAAU1G,MAAM,KACd,8CAPJ,UAYGQ,EAAMyH,cAZT,aAYG,EAAcH,KAAI,SAAC9H,GAAD,OACjB,kBAAC0G,EAAA,EAAD,CAAUqB,IAAK/H,EAAM2B,GAAI3B,MAAOA,EAAM2B,IACnC3B,EAAMkI,UADT,IACqBlI,EAAMmI,gBAqBnC,kBAACnB,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACC,EAAA,EAAD,CAAYjD,UAAU,QACpB,kBAAC4B,EAAA,EAAD,CACEK,SAAU1F,EAAM8E,aAChB3D,GAAG,QACHoE,MAAM,QACN9B,UAAU,GACVjE,MAAOQ,EAAMyE,KAAKb,MAClBgD,QAAQ,WACRI,WAAW,EACXH,gBAAiB,CACfC,QAAQ,GAEVC,KAAK,YAIX,kBAACP,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACX,EAAA,EAAD,CACER,OAAO,QACPsB,QAAQ,WACRM,MAAO,CAAEC,MAAO,OAAQ7B,OAAQ,IAEhC,kBAACS,EAAA,EAAD,CAAY5E,GAAG,mBAAf,gBACA,kBAAC6E,EAAA,EAAD,CACExG,MAAOQ,EAAMyE,KAAKlB,YAClBmC,SAAU1F,EAAM8E,aAChBS,MAAM,eACNC,KAAK,eAEL,kBAACU,EAAA,EAAD,CAAU1G,MAAM,KACd,gDAPJ,UAYGQ,EAAMuD,mBAZT,aAYG,EAAmB+D,KAAI,SAAC9H,GAAD,OACtB,kBAAC0G,EAAA,EAAD,CAAUqB,IAAK/H,EAAM2B,GAAI3B,MAAOA,EAAM2B,IACnC3B,EAAM4H,oBAqBjB,kBAACZ,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACC,EAAA,EAAD,CAAYjD,UAAU,QACpB,kBAAC4B,EAAA,EAAD,CACEK,SAAU1F,EAAM8E,aAChB3D,GAAG,UACHoE,MAAM,UACN9B,UAAU,GACVjE,MAAOQ,EAAMyE,KAAKZ,QAClB+C,QAAQ,WACRI,WAAW,EACXH,gBAAiB,CACfC,QAAQ,GAEVC,KAAK,YAIX,kBAACP,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACC,EAAA,EAAD,CAAYjD,UAAU,QACpB,kBAAC4B,EAAA,EAAD,CACEK,SAAU1F,EAAM8E,aAChB3D,GAAG,SACHoE,MAAM,SACN9B,UAAU,GACVjE,MAAOQ,EAAMyE,KAAKmD,OAClBhB,QAAQ,WACRI,WAAW,EACXH,gBAAiB,CACfC,QAAQ,GAEVC,KAAK,YAIX,kBAACP,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACC,EAAA,EAAD,CAAYjD,UAAU,QACpB,kBAAC4B,EAAA,EAAD,CACEK,SAAU1F,EAAM8E,aAChB3D,GAAG,UACHoE,MAAM,UACN9B,UAAU,GACVjE,MAAOQ,EAAMyE,KAAKtB,QAClByD,QAAQ,WACRI,WAAW,EACXH,gBAAiB,CACfC,QAAQ,GAEVC,KAAK,YAIX,kBAACP,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACC,EAAA,EAAD,CAAYjD,UAAU,QACpB,kBAAC4B,EAAA,EAAD,CACEK,SAAU1F,EAAM8E,aAChB3D,GAAG,QACHoE,MAAM,QACN9B,UAAU,GACVjE,MAAOQ,EAAMyE,KAAKpB,MAClBuD,QAAQ,WACRI,WAAW,EACXH,gBAAiB,CACfC,QAAQ,GAEVC,KAAK,YAIX,kBAACP,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACC,EAAA,EAAD,CAAYjD,UAAU,QACpB,kBAAC4B,EAAA,EAAD,CACEK,SAAU1F,EAAM8E,aAChB3D,GAAG,OACHoE,MAAM,OACN9B,UAAU,GACVjE,MAAOQ,EAAMyE,KAAKrB,KAClBwD,QAAQ,WACRI,WAAW,EACXH,gBAAiB,CACfC,QAAQ,GAEVC,KAAK,YAIX,kBAACP,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACC,EAAA,EAAD,CAAYjD,UAAU,QACpB,kBAAC4B,EAAA,EAAD,CACEK,SAAU1F,EAAM8E,aAChB3D,GAAG,UACHoE,MAAM,WACN9B,UAAU,GACVjE,MAAOQ,EAAMyE,KAAKV,QAClB6C,QAAQ,WACRI,WAAW,EACXH,gBAAiB,CACfC,QAAQ,GAEVC,KAAK,YAIX,kBAACP,EAAA,EAAD,CAAKC,GAAI,IACP,kBAACC,EAAA,EAAD,KACE,kBAACmB,EAAA,EAAD,CACElB,KAAK,SACLI,KAAK,QACLtD,UAAU,cACVmD,QAAQ,YACRkB,MAAM,aALR,iB,gECpECC,EAnMO,WACpB,IAAMC,EAAWC,aAAY,SAAA5E,GAAK,OAAIA,EAAM6E,KAAKC,QAE3CC,EAAe,CACnBjH,GAAI,GACJkH,QAAS,GACT1E,YAAa,GACbC,MAAO,GACPC,QAAS,GACTV,QAAS,GACTE,MAAO,GACPD,KAAM,GACNW,QAAS,GACTqD,aAAc,GACdI,WAAY,GACZjE,YAAa,GACbO,YAAa,GACb8D,OAAQ,GACRU,YAAa,IAGTC,EAAS,SAAA9D,GACTA,EAAK+D,QACPC,IAAMD,QAAQ/D,EAAKiE,SAEnBD,IAAM7C,MAAMnB,EAAKiE,UAzBK,EA8BAzF,mBAAS,GA9BT,mBA8BnBI,EA9BmB,KA8BZR,EA9BY,OA+BYI,oBAAS,GA/BrB,mBA+BnB0F,EA/BmB,KA+BNC,EA/BM,OAgCM3F,oBAAS,GAhCf,mBAgCnB4F,EAhCmB,KAgCTC,EAhCS,OAiCA7F,mBAASmF,GAjCT,mBAiCnBW,EAjCmB,KAiCZC,EAjCY,OAkCM/F,oBAAS,GAlCf,mBAkCnBgG,EAlCmB,KAkCTC,EAlCS,KAoC1BC,qBAAU,YACO,uCAAG,oCAAAC,EAAA,sEACO1I,cADP,cACV2I,EADU,OAGVhC,EAAWhG,cACXiI,EAAUhI,cACVmG,EAASlG,YAAiB,gBALhB,SAOMgI,QAAQC,IAAI,CAACnC,EAAUiC,EAAS7B,IAPtC,OAOVgC,EAPU,OAYhB5G,EAAS,CACP6G,QAAS,CACP,CAAEC,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,eAAgBC,MAAO,eAChC,CAAED,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,UAAWC,MAAO,eAC3B,CACED,MAAO,SACPC,MAAO,UACPzC,MAAO,IACP0C,OAAQ,SAAApF,GACN,OACE,kBAAC8B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACqB,EAAA,EAAD,CACEjB,QAAQ,YACRkB,MAAM,YACN6B,MAAOlF,EAAKtD,GACZ2I,QAAS,WACPC,EAAUtF,GACVqE,GAAY,KAGd,kBAAC,IAAD,QAGJ,kBAACtC,EAAA,EAAD,KACE,kBAACqB,EAAA,EAAD,CACEjB,QAAQ,YACRkD,QAAS,kBAAME,EAAWvF,EAAKtD,MAE/B,kBAAC,IAAD,YAQdsD,KAAM4E,EAAS5E,KACf4C,SAAUoC,EAAQ,GAAGhF,KACrBwF,aAAcR,EAAQ,GAAGhF,KACzByF,cAAeT,EAAQ,GAAGhF,OAvDZ,4CAAH,qDA0Df0F,KACC,CAAClB,IAEJ,IAIMc,EAAY,SAAAtF,GAChBuE,EAAS,CACP7H,GAAIsD,EAAKtD,GACTkH,QAAS5D,EAAK4D,QACd1E,YAAac,EAAKd,YAClBC,MAAOa,EAAKb,MACZC,QAASY,EAAKZ,QACdC,YAAaW,EAAKX,YAClBX,QAASsB,EAAKtB,QACdE,MAAOoB,EAAKpB,MACZD,KAAMqB,EAAKrB,KACXW,QAASU,EAAKV,QACdqD,aAAc3C,EAAK2C,aACnBI,WAAY/C,EAAK+C,WACjBjE,YAAakB,EAAKlB,YAClB+E,YAAa7D,EAAK6D,cAEpBM,GAAe,GACfM,GAAaD,IAUTmB,EAAoB,uCAAG,WAAMC,GAAN,SAAAjB,EAAA,yDAC3BiB,EAAEC,iBACFvB,EAAMwB,WAAavC,EAASwC,SAASC,SAAStJ,IAC1C0H,EAHuB,0CAKjB7H,YAAc+H,GALG,OAMvBR,EAAO,CAAEC,SAAS,EAAME,QAAS,8BANV,2DAStBG,EATsB,4CAWjBhI,YAAgBkI,GAXC,QAYvBR,EAAO,CAAEC,SAAS,EAAME,QAAS,4BAZV,2DAe3BE,GAAe,GACfM,GAAaD,GAhBc,iEAAH,sDAmBpBe,EAAU,uCAAG,WAAM7I,GAAN,SAAAiI,EAAA,sEACXlI,YAAcC,GADH,OAEjB+H,GAAaD,GAFI,2CAAH,sDAKhB,OACE,oCACE,kBAAC,IAAD,MACA,kBAAC,IAAD,CACEtC,KAAK,UACLgD,MAAM,UACNe,KAAM/B,EACNgC,YA/Da,WACjB/B,GAAe,KAgEX,kBAAC,EAAD,CACEnE,KAAMsE,EACNjE,aA1Ca,SAAAuF,GACnBrB,EAAS,eACJD,EADG,eAELsB,EAAEjI,OAAOjB,IAAMkJ,EAAEjI,OAAOoD,KAAO6E,EAAEjI,OAAO5C,UAwCrCwF,aAAcoF,EACd/C,SAAUhE,EAAMgE,SAChB9D,YAAaF,EAAM4G,aACnBxC,OAAQpE,EAAM6G,iBAIlB,kBAACrC,EAAA,EAAD,CACEpE,UAAU,OACVmD,QAAQ,YACRkB,MAAM,YACNf,KAAK,QACL+C,QAAS,WACPlB,GAAe,GACfE,GAAY,GACZE,EAASZ,KARb,OAaA,kBAAC,IAAD,CACEuB,MAAM,WACND,QAASrG,EAAMqG,QACfjF,KAAMpB,EAAMoB,SC9ML,SAASmG,IACpB,OACI,kBAAC,IAAD,KAEI,kBAAC,IAAD,CAAUC,OAAO,EAAMC,KAAK,IAAIC,GAAG,aACnC,kBAAC,IAAD,CAAOrL,KAAK,oBAAoBsL,UAAWC,IAC3C,kBAAC,IAAD,CAAOvL,KAAK,YAAYsL,UAAWE,KAV/C","file":"static/js/12.3b2bc076.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createSvgIcon;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _SvgIcon = _interopRequireDefault(require(\"@material-ui/core/SvgIcon\"));\n\nfunction createSvgIcon(path, displayName) {\n  var Component = _react.default.memo(_react.default.forwardRef(function (props, ref) {\n    return _react.default.createElement(_SvgIcon.default, (0, _extends2.default)({\n      ref: ref\n    }, props), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = _SvgIcon.default.muiName;\n  return Component;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","import axios from 'axios';\r\n\r\nexport const ROOT_URL = process.env.REACT_APP_API_URL;\r\nexport const ACCOUNT_URL = 'api/account';\r\nexport const ACCOUNT_INDUSTRY = 'api/config/industry';\r\nexport const ACCOUNT_TYPE = 'api/config/accounttype';\r\nexport const ACCOUNT_PARENT = 'api/Lead/TableView/Business';\r\n\r\nexport function getAccountList() {\r\n  return axios.get(`${ROOT_URL}/${ACCOUNT_URL}`);\r\n}\r\n\r\nexport function registerAccount(accounts) {\r\n  return axios.post(`${ROOT_URL}/${ACCOUNT_URL}`, accounts);\r\n}\r\n\r\nexport function updateAccount(accounts) {\r\n  return axios.patch(`${ROOT_URL}/${ACCOUNT_URL}`, accounts);\r\n}\r\n\r\nexport function deleteAccount(id) {\r\n  return axios.delete(`${ROOT_URL}/${ACCOUNT_URL}/${id}`);\r\n}\r\n\r\nexport function getIndustry() {\r\n  return axios.get(`${ROOT_URL}/${ACCOUNT_INDUSTRY}`);\r\n}\r\n\r\nexport function getAccountType() {\r\n  return axios.get(`${ROOT_URL}/${ACCOUNT_INDUSTRY}`);\r\n}\r\n\r\nexport function getParentAccount(id) {\r\n  return axios.get(`${ROOT_URL}/${ACCOUNT_PARENT}/${id}`);\r\n}\r\n","export { default } from './SvgIcon';","import React from 'react';\r\nimport { Formik } from 'formik';\r\n// import { connect } from \"react-redux\";\r\n// import { Link } from \"react-router-dom\";\r\nimport { injectIntl } from 'react-intl';\r\nimport {\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n//import * as auth from \"../../../../store/ducks/auth.duck\";\r\nimport { registerAccount } from '../../../../services/account.service';\r\n\r\nvar industryIdVal = '';\r\nfunction RegisterComponent(props) {\r\n  const { intl } = props;\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n      marginTop: 16,\r\n      marginBottom: 8,\r\n      minWidth: '100%'\r\n    }\r\n  }));\r\n\r\n  const selectIndustryHandleChange = event => {\r\n    industryIdVal = event.target.value;\r\n    setIndustry(event.target.value);\r\n  };\r\n\r\n  const selectParentAccountHandleChange = event => {\r\n    setParentAccount(event.target.value);\r\n  };\r\n\r\n  const selectCountryHandleChange = event => {\r\n    setCountry(event.target.value);\r\n  };\r\n\r\n  const selectCityHandleChange = event => {\r\n    setCity(event.target.value);\r\n  };\r\n\r\n  const selectStateHandleChange = event => {\r\n    setState(event.target.value);\r\n  };\r\n\r\n  const selectAccountTypeHandleChange = event => {\r\n    setAccountType(event.target.value);\r\n  };\r\n\r\n  const [industryId, setIndustry] = React.useState('');\r\n  const [country, setCountry] = React.useState('');\r\n  const [city, setCity] = React.useState('');\r\n  const [state, setState] = React.useState('');\r\n  const [parentAccountId, setParentAccount] = React.useState('');\r\n  const [accountType, setAccountType] = React.useState('');\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-md-6'>\r\n        <div className='kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid'>\r\n          <div className='kt-portlet'>\r\n            <div className='kt-portlet__head'>\r\n              <div className='kt-portlet__head-label'>\r\n                <h3 className='kt-portlet__head-title'>Account Details</h3>\r\n              </div>\r\n            </div>\r\n\r\n            <Formik\r\n              initialValues={{\r\n                accountName: '',\r\n                phone: '',\r\n                website: '',\r\n                addressLine: '',\r\n                zipCode: '',\r\n                industryId: ''\r\n              }}\r\n              validate={values => {\r\n                const errors = {};\r\n\r\n                if (!values.accountName) {\r\n                  errors.accountName = intl.formatMessage({\r\n                    id: 'AUTH.VALIDATION.REQUIRED_FIELD'\r\n                  });\r\n                }\r\n\r\n                if (!industryIdVal) {\r\n                  errors.industryId = intl.formatMessage({\r\n                    id: 'AUTH.VALIDATION.REQUIRED_FIELD'\r\n                  });\r\n                }\r\n\r\n                if (!values.phone) {\r\n                  errors.phone = intl.formatMessage({\r\n                    id: 'AUTH.VALIDATION.REQUIRED_FIELD'\r\n                  });\r\n                }\r\n\r\n                if (!values.website) {\r\n                  errors.website = intl.formatMessage({\r\n                    id: 'AUTH.VALIDATION.REQUIRED_FIELD'\r\n                  });\r\n                }\r\n\r\n                if (!values.addressLine) {\r\n                  errors.addressLine = intl.formatMessage({\r\n                    id: 'AUTH.VALIDATION.REQUIRED_FIELD'\r\n                  });\r\n                }\r\n\r\n                if (!values.zipCode) {\r\n                  errors.zipCode = intl.formatMessage({\r\n                    id: 'AUTH.VALIDATION.REQUIRED_FIELD'\r\n                  });\r\n                }\r\n                return errors;\r\n              }}\r\n              onSubmit={(values, { setStatus, setSubmitting }) => {\r\n                registerAccount({\r\n                  /*values.email,\r\n                  values.fullname,\r\n                  values.businessName,\r\n                  values.username,\r\n                  values.password*/\r\n                })\r\n                  .then(({ data: { accessToken } }) => {\r\n                    props.register(accessToken);\r\n                  })\r\n                  .catch(() => {\r\n                    setSubmitting(false);\r\n                    setStatus('Invalid Registration');\r\n                  });\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                status,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                isSubmitting\r\n              }) => (\r\n                <form\r\n                  className='kt-form kt-form--label-right'\r\n                  onSubmit={handleSubmit}\r\n                  noValidate\r\n                  autoComplete='off'\r\n                >\r\n                  <div className='form-body'>\r\n                    <div className='kt-portlet__body'>\r\n                      {status && (\r\n                        <div className='form-group form-group-last'>\r\n                          <div className='alert alert-secondary' role='alert'>\r\n                            <div className='alert-icon'>\r\n                              <i className='flaticon-warning kt-font-brand'></i>\r\n                            </div>\r\n                            <div className='alert-text'>{status}</div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      <div className='kt-portlet__head'>\r\n                        <div className='kt-portlet__head-label'>\r\n                          <h3 className='kt-portlet__head-title'>\r\n                            Account Info\r\n                          </h3>\r\n                        </div>\r\n                      </div>\r\n                      <div className='row'>\r\n                        <div className='col-md-6'>\r\n                          <div className='form-group mb-0'>\r\n                            <TextField\r\n                              margin='normal'\r\n                              label='Account Name'\r\n                              className='kt-width-full'\r\n                              name='accountName'\r\n                              onBlur={handleBlur}\r\n                              onChange={handleChange}\r\n                              value={values.accountName}\r\n                              helperText={\r\n                                touched.accountName && errors.accountName\r\n                              }\r\n                              error={Boolean(\r\n                                touched.accountName && errors.accountName\r\n                              )}\r\n                            />\r\n                          </div>\r\n\r\n                          <div className='form-group mb-0'>\r\n                            <TextField\r\n                              margin='normal'\r\n                              label='Phone Number'\r\n                              className='kt-width-full'\r\n                              name='phone'\r\n                              onBlur={handleBlur}\r\n                              onChange={handleChange}\r\n                              value={values.phone}\r\n                              helperText={touched.phone && errors.phone}\r\n                              error={Boolean(touched.phone && errors.phone)}\r\n                            />\r\n                          </div>\r\n\r\n                          <div className='form-group mb-0'>\r\n                            <TextField\r\n                              margin='normal'\r\n                              label='Website'\r\n                              className='kt-width-full'\r\n                              name='website'\r\n                              onBlur={handleBlur}\r\n                              onChange={handleChange}\r\n                              value={values.website}\r\n                              helperText={touched.website && errors.website}\r\n                              error={Boolean(touched.website && errors.website)}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className='col-md-6'>\r\n                          <div className='form-group mb-0'>\r\n                            <FormControl className={classes.formControl}>\r\n                              <InputLabel\r\n                                id='labelIndustry'\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(\r\n                                  touched.industryId && errors.industryId\r\n                                )}\r\n                              >\r\n                                Industry\r\n                              </InputLabel>\r\n                              <Select\r\n                                labelId='labelIndustry'\r\n                                name='industryId'\r\n                                value={industryId}\r\n                                onChange={selectIndustryHandleChange}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(\r\n                                  touched.industryId && errors.industryId\r\n                                )}\r\n                              >\r\n                                <MenuItem value=''>\r\n                                  <em>Select Parent Account</em>\r\n                                </MenuItem>\r\n                                <MenuItem value='investor'>Investor</MenuItem>\r\n                                <MenuItem value='other'>Other</MenuItem>\r\n                                <MenuItem value='partner'>Partner</MenuItem>\r\n                                <MenuItem value='press'>Press</MenuItem>\r\n                                <MenuItem value='prospect'>Prospect</MenuItem>\r\n                                <MenuItem value='reseller'>Reseller</MenuItem>\r\n                              </Select>\r\n                            </FormControl>\r\n                          </div>\r\n\r\n                          <div className='form-group mb-0'>\r\n                            <FormControl className={classes.formControl}>\r\n                              <InputLabel id='labelParentAccount'>\r\n                                Parent Account\r\n                              </InputLabel>\r\n                              <Select\r\n                                labelId='labelParentAccount'\r\n                                name='parentAccountId'\r\n                                value={parentAccountId}\r\n                                onChange={selectParentAccountHandleChange}\r\n                              >\r\n                                <MenuItem value=''>\r\n                                  <em>Select Industry</em>\r\n                                </MenuItem>\r\n                              </Select>\r\n                            </FormControl>\r\n                          </div>\r\n\r\n                          <div className='form-group mb-0'>\r\n                            <FormControl className={classes.formControl}>\r\n                              <InputLabel id='labelAccountType'>\r\n                                Account Type\r\n                              </InputLabel>\r\n                              <Select\r\n                                labelId='labelAccountType'\r\n                                value={accountType}\r\n                                onChange={selectAccountTypeHandleChange}\r\n                              >\r\n                                <MenuItem value=''>\r\n                                  <em>Select Account Type</em>\r\n                                </MenuItem>\r\n                                <MenuItem value='analyst'>Analyst</MenuItem>\r\n                                <MenuItem value='competitor'>\r\n                                  Competitor\r\n                                </MenuItem>\r\n                                <MenuItem value='customer'>Customer</MenuItem>\r\n                                <MenuItem value='distribtor'>\r\n                                  Distribtor\r\n                                </MenuItem>\r\n                                <MenuItem value='integrator'>\r\n                                  Integrator\r\n                                </MenuItem>\r\n                              </Select>\r\n                            </FormControl>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className='kt-portlet__head'>\r\n                        <div className='kt-portlet__head-label'>\r\n                          <h3 className='kt-portlet__head-title'>\r\n                            Address Info\r\n                          </h3>\r\n                        </div>\r\n                      </div>\r\n                      <div className='form-group mb-0'>\r\n                        <TextField\r\n                          margin='normal'\r\n                          label='Address Line'\r\n                          className='kt-width-full'\r\n                          name='addressLine'\r\n                          onBlur={handleBlur}\r\n                          onChange={handleChange}\r\n                          value={values.addressLine}\r\n                          helperText={touched.addressLine && errors.addressLine}\r\n                          error={Boolean(\r\n                            touched.addressLine && errors.addressLine\r\n                          )}\r\n                        />\r\n                      </div>\r\n                      <div className='row'>\r\n                        <div className='col-md-6'>\r\n                          <FormControl className={classes.formControl}>\r\n                            <InputLabel id='labelCountry'>Country</InputLabel>\r\n                            <Select\r\n                              labelId='labelCountry'\r\n                              name='country'\r\n                              value={country}\r\n                              onChange={selectCountryHandleChange}\r\n                            >\r\n                              <MenuItem value=''>\r\n                                <em>Select Country</em>\r\n                              </MenuItem>\r\n                            </Select>\r\n                          </FormControl>\r\n\r\n                          <FormControl className={classes.formControl}>\r\n                            <InputLabel id='labelState'>State</InputLabel>\r\n                            <Select\r\n                              labelId='labelState'\r\n                              name='state'\r\n                              value={state}\r\n                              onChange={selectStateHandleChange}\r\n                            >\r\n                              <MenuItem value=''>\r\n                                <em>Select State</em>\r\n                              </MenuItem>\r\n                            </Select>\r\n                          </FormControl>\r\n                        </div>\r\n\r\n                        <div className='col-md-6'>\r\n                          <div className='form-group mb-0'>\r\n                            <FormControl className={classes.formControl}>\r\n                              <InputLabel id='labelCity'>City</InputLabel>\r\n                              <Select\r\n                                labelId='labelCity'\r\n                                name='city'\r\n                                value={city}\r\n                                onChange={selectCityHandleChange}\r\n                              >\r\n                                <MenuItem value=''>\r\n                                  <em>Select City</em>\r\n                                </MenuItem>\r\n                              </Select>\r\n                            </FormControl>\r\n                          </div>\r\n\r\n                          <div className='form-group mb-0'>\r\n                            <TextField\r\n                              margin='normal'\r\n                              label='Zip Code'\r\n                              className='kt-width-full'\r\n                              name='zipCode'\r\n                              onBlur={handleBlur}\r\n                              onChange={handleChange}\r\n                              value={values.zipCode}\r\n                              helperText={touched.zipCode && errors.zipCode}\r\n                              error={Boolean(touched.zipCode && errors.zipCode)}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className='kt-portlet__body'>\r\n                      <div className='form-actions'>\r\n                        <button\r\n                          disabled={isSubmitting || !values.acceptTerms}\r\n                          className='btn btn-primary btn-elevate'\r\n                        >\r\n                          Register\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default injectIntl(RegisterComponent);\r\n","import React from 'react';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n} from '@material-ui/core';\r\nimport { Container, InputGroup, Row, Col } from 'react-bootstrap';\r\n\r\nconst AccountInput = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Container>\r\n        <Row>\r\n          <Col xs={6}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={props.handleChange}\r\n                id='accountName'\r\n                type='accountName'\r\n                label='Account Name'\r\n                className=''\r\n                value={props.data.accountName}\r\n                variant='outlined'\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                size='small'\r\n                fullWidth={true}\r\n                required\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs={6}>\r\n            <FormControl\r\n              margin='dense'\r\n              variant='outlined'\r\n              style={{ width: '100%', margin: 2 }}\r\n            >\r\n              <InputLabel id='labelLeadStatus'>Industry</InputLabel>\r\n              <Select\r\n                value={props.data.industryName}\r\n                onChange={props.handleChange}\r\n                label='Industry'\r\n                name='industryName'\r\n              >\r\n                <MenuItem value='0'>\r\n                  <em>\r\n                    Select Industry\r\n                    {/* {!this.state?.leadStatusList ? 'Loading' : 'Select Lead Status'} */}\r\n                  </em>\r\n                </MenuItem>\r\n\r\n                {props.industry?.map((value) => (\r\n                  <MenuItem key={value.id} value={value.id}>\r\n                    {value.industryName}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            {/* <InputGroup className='mb-4'>\r\n\r\n              <TextField\r\n                onChange={props.handleChange}\r\n                id='industryName'\r\n                label='Industry'\r\n                className=''\r\n                value={props.data.industryName}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                size='small'\r\n              />\r\n            </InputGroup> */}\r\n          </Col>\r\n          <Col xs={6}>\r\n            <FormControl\r\n              margin='dense'\r\n              variant='outlined'\r\n              style={{ width: '100%', margin: 2 }}\r\n            >\r\n              <InputLabel id='labelLeadStatus'>Parent Account</InputLabel>\r\n              <Select\r\n                value={props.data.parentName}\r\n                onChange={props.handleChange}\r\n                label='Parent Account'\r\n                name='parentName'\r\n              >\r\n                <MenuItem value='0'>\r\n                  <em>\r\n                    Select Parent\r\n                    {/* {!this.state?.leadStatusList ? 'Loading' : 'Select Lead Status'} */}\r\n                  </em>\r\n                </MenuItem>\r\n                {props.parent?.map((value) => (\r\n                  <MenuItem key={value.id} value={value.id}>\r\n                    {value.firstName} {value.lastName}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            {/* <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={props.handleChange}\r\n                id='parentName'\r\n                label='Parent Account'\r\n                className=''\r\n                value={props.data.parentName}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                size='small'\r\n              />\r\n            </InputGroup> */}\r\n          </Col>\r\n          <Col xs={6}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={props.handleChange}\r\n                id='phone'\r\n                label='Phone'\r\n                className=''\r\n                value={props.data.phone}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                size='small'\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs={6}>\r\n            <FormControl\r\n              margin='dense'\r\n              variant='outlined'\r\n              style={{ width: '100%', margin: 2 }}\r\n            >\r\n              <InputLabel id='labelLeadStatus'>Account Type</InputLabel>\r\n              <Select\r\n                value={props.data.accountType}\r\n                onChange={props.handleChange}\r\n                label='Account Type'\r\n                name='accountType'\r\n              >\r\n                <MenuItem value='0'>\r\n                  <em>\r\n                    Select Industry\r\n                    {/* {!this.state?.leadStatusList ? 'Loading' : 'Select Lead Status'} */}\r\n                  </em>\r\n                </MenuItem>\r\n                {props.accountType?.map((value) => (\r\n                  <MenuItem key={value.id} value={value.id}>\r\n                    {value.industryName}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            {/* <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={props.handleChange}\r\n                id='accountType'\r\n                label='Account Type'\r\n                className=''\r\n                value={props.data.accountType}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                size='small'\r\n              />\r\n            </InputGroup> */}\r\n          </Col>\r\n          <Col xs={6}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={props.handleChange}\r\n                id='website'\r\n                label='Website'\r\n                className=''\r\n                value={props.data.website}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                size='small'\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs={6}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={props.handleChange}\r\n                id='street'\r\n                label='Street'\r\n                className=''\r\n                value={props.data.street}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                size='small'\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs={6}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={props.handleChange}\r\n                id='country'\r\n                label='Country'\r\n                className=''\r\n                value={props.data.country}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                size='small'\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs={6}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={props.handleChange}\r\n                id='state'\r\n                label='State'\r\n                className=''\r\n                value={props.data.state}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                size='small'\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs={6}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={props.handleChange}\r\n                id='city'\r\n                label='City'\r\n                className=''\r\n                value={props.data.city}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                size='small'\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs={6}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={props.handleChange}\r\n                id='zipCode'\r\n                label='Zip Code'\r\n                className=''\r\n                value={props.data.zipCode}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                size='small'\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs={12}>\r\n            <InputGroup>\r\n              <Button\r\n                type='submit'\r\n                size='large'\r\n                className='float-right'\r\n                variant='contained'\r\n                color='secondary'\r\n              >\r\n                Confirm\r\n              </Button>\r\n            </InputGroup>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* id: '',\r\n    profile: '',\r\n    accountName: '',\r\n    phone: '',\r\n    website: '',\r\n    country: '',\r\n    state: '',\r\n    city: '',\r\n    zipCode: '',\r\n    industryName: '',\r\n    parentName: '',\r\n    accountType: '',\r\n    website: '',\r\n    addressLine: '',\r\n    street: '',\r\n    country: '',\r\n    state: '',\r\n    city: '',\r\n    zipCode:'' */}\r\n\r\n        {/* \r\n\r\n        <InputGroup className='mb-4'>\r\n          <TextField\r\n            onChange={props.handleChange}\r\n            id='lastName'\r\n            label='Last name'\r\n            className=''\r\n            value={props.data.lastName}\r\n            variant='outlined'\r\n            fullWidth={true}\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n            size='small'\r\n            required\r\n          />\r\n        </InputGroup>\r\n        <InputGroup className='mb-4'>\r\n          <TextField\r\n            onChange={props.handleChange}\r\n            id='businessName'\r\n            label='Business'\r\n            className=''\r\n            value={props.data.businessName}\r\n            variant='outlined'\r\n            fullWidth={true}\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n            size='small'\r\n            required\r\n          />\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <Button\r\n            type='submit'\r\n            size='large'\r\n            className='float-right'\r\n            variant='contained'\r\n            color='primary'\r\n          >\r\n            confirm\r\n          </Button>\r\n        </InputGroup> */}\r\n      </Container>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AccountInput;\r\n","import React, { useState, useEffect } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport {\r\n  getAccountList,\r\n  registerAccount,\r\n  updateAccount,\r\n  deleteAccount,\r\n  getIndustry,\r\n  getAccountType,\r\n  getParentAccount\r\n} from '../../../../services/account.service';\r\nimport TableModal from '../../../shared/Modal';\r\nimport { Button } from '@material-ui/core';\r\nimport AccountInput from './AccountInput';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { useSelector } from 'react-redux';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst ViewComponent = () => {\r\n  const userData = useSelector(state => state.auth.user);\r\n\r\n  const initialInput = {\r\n    id: '',\r\n    profile: '',\r\n    accountName: '',\r\n    phone: '',\r\n    website: '',\r\n    country: '',\r\n    state: '',\r\n    city: '',\r\n    zipCode: '',\r\n    industryName: '',\r\n    parentName: '',\r\n    accountType: '',\r\n    addressLine: '',\r\n    street: '',\r\n    description: ''\r\n  };\r\n\r\n  const notify = data => {\r\n    if (data.success) {\r\n      toast.success(data.message);\r\n    } else {\r\n      toast.error(data.message);\r\n    }\r\n  };\r\n  // const [industry, setIndustry] = useState([]);\r\n  // const [accountTypes, setAccountTypes] = useState([]);\r\n  const [state, setState] = useState(0);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isUpdate, setIsUpdate] = useState(false);\r\n  const [input, setInput] = useState(initialInput);\r\n  const [reRender, setRerender] = useState(false); // Re render table after updating\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await getAccountList();\r\n\r\n      const industry = getIndustry();\r\n      const acctype = getAccountType();\r\n      const parent = getParentAccount('R2PPfBhpaLA.');\r\n\r\n      const promise = await Promise.all([industry, acctype, parent]);\r\n\r\n      // setIndustry(promise[0].data);\r\n      // setAccountTypes(promise[1].data);\r\n\r\n      setState({\r\n        columns: [\r\n          { title: 'Profile', field: 'profile' },\r\n          { title: 'Account Name', field: 'accountName' },\r\n          { title: 'Phone', field: 'phone' },\r\n          { title: 'Website', field: 'website' },\r\n          { title: 'Address', field: 'addressLine' },\r\n          {\r\n            title: 'Action',\r\n            field: 'actions',\r\n            width: 200,\r\n            render: data => {\r\n              return (\r\n                <Row>\r\n                  <Col>\r\n                    <Button\r\n                      variant='contained'\r\n                      color='secondary'\r\n                      title={data.id}\r\n                      onClick={() => {\r\n                        upAccount(data);\r\n                        setIsUpdate(true);\r\n                      }}\r\n                    >\r\n                      <EditIcon />\r\n                    </Button>\r\n                  </Col>\r\n                  <Col>\r\n                    <Button\r\n                      variant='contained'\r\n                      onClick={() => delAccount(data.id)}\r\n                    >\r\n                      <DeleteIcon />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              );\r\n            }\r\n          }\r\n        ],\r\n        data: response.data,\r\n        industry: promise[0].data,\r\n        accountTypes: promise[1].data,\r\n        parentAccount: promise[2].data\r\n      });\r\n    };\r\n    fetchData();\r\n  }, [reRender]);\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const upAccount = data => {\r\n    setInput({\r\n      id: data.id,\r\n      profile: data.profile,\r\n      accountName: data.accountName,\r\n      phone: data.phone,\r\n      website: data.website,\r\n      addressLine: data.addressLine,\r\n      country: data.country,\r\n      state: data.state,\r\n      city: data.city,\r\n      zipCode: data.zipCode,\r\n      industryName: data.industryName,\r\n      parentName: data.parentName,\r\n      accountType: data.accountType,\r\n      description: data.description\r\n    });\r\n    setIsModalOpen(true);\r\n    setRerender(!reRender);\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setInput({\r\n      ...input,\r\n      [e.target.id || e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmitBusiness = async e => {\r\n    e.preventDefault();\r\n    input.businessId = userData.mainRole.business.id;\r\n    if (isUpdate) {\r\n      try {\r\n        await updateAccount(input);\r\n        notify({ success: true, message: 'Success updating account.' });\r\n      } catch (error) {}\r\n    }\r\n    if (!isUpdate) {\r\n      try {\r\n        await registerAccount(input);\r\n        notify({ success: true, message: 'Success adding account.' });\r\n      } catch (error) {}\r\n    }\r\n    setIsModalOpen(false);\r\n    setRerender(!reRender);\r\n  };\r\n\r\n  const delAccount = async id => {\r\n    await deleteAccount(id);\r\n    setRerender(!reRender);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <TableModal\r\n        type='Account'\r\n        title='Account'\r\n        open={isModalOpen}\r\n        handleClose={closeModal}\r\n      >\r\n        <AccountInput\r\n          data={input}\r\n          handleChange={handleChange}\r\n          handleSubmit={handleSubmitBusiness}\r\n          industry={state.industry}\r\n          accountType={state.accountTypes}\r\n          parent={state.parentAccount}\r\n        />\r\n      </TableModal>\r\n\r\n      <Button\r\n        className='mb-2'\r\n        variant='contained'\r\n        color='secondary'\r\n        size='large'\r\n        onClick={() => {\r\n          setIsModalOpen(true);\r\n          setIsUpdate(false);\r\n          setInput(initialInput);\r\n        }}\r\n      >\r\n        Add\r\n      </Button>\r\n      <MaterialTable\r\n        title='Accounts'\r\n        columns={state.columns}\r\n        data={state.data}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewComponent;\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport CreateAccount from './components/RegisterComponent';\r\nimport viewAccount from './components/ViewComponent';\r\nexport default function Accounts() {\r\n    return (\r\n        <Switch>\r\n\r\n            <Redirect exact={true} from=\"/\" to=\"/account\"/>\r\n            <Route path=\"/account/register\" component={CreateAccount} />\r\n            <Route path=\"/account/\" component={viewAccount} />\r\n\r\n        </Switch>\r\n    )\r\n}"],"sourceRoot":""}