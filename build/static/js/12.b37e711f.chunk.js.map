{"version":3,"sources":["app/services/account.service.js","app/services/leadSource.service.js","app/services/leadStatus.service.js","app/partials/shared/LeadSourceDropDown.js","app/services/leads.service.js","app/partials/shared/LeadStatusDropDown.js","app/pages/home/leads/components/InputFieldsContainer.js","app/pages/home/leads/components/RegisterComponent.js","app/partials/shared/ModalContainer.js","app/partials/shared/CrudButtonOptions.js","app/pages/home/leads/components/ViewComponent.js","app/pages/home/leads/Leads.js"],"names":["ROOT_URL","process","getAccountList","axios","get","registerAccount","accounts","post","updateAccount","patch","deleteAccount","id","delete","getIndustry","getAccountType","getParentAccount","getLeadSourceList","addLeadSource","data","updateLeadSource","deleteLeadSource","assignLeadSource","getLeadSourceUsers","getLeadStatus","businessId","addLeadStatus","updateLeadStatus","deleteLeadStatus","LeadSourceDropDown","props","handleSelectLeadSource","bind","state","leadData","leadSourceId","currentLeadSource","this","getLeadsSource","setState","then","results","catch","err","console","log","event","target","value","getSelectedLeadSource","margin","variant","style","width","labelId","onChange","label","name","map","key","leadSourceName","React","Component","getLeadsList","getLeadsDetails","leadId","registerLead","lead","updateLead","deleteLead","LeadStatusDropDown","getLeadStatusList","a","leadStatus","leadStatusList","handleSelectLeadStatus","leadStatusId","currentLeadStatus","listStatusList","getSelectedLeadStatus","FormControl","InputLabel","Select","MenuItem","leadStatusName","InputFieldsContainer","defaultReceiveDate","Date","firstName","companyName","ssn","equiment","email","phone","description","lastName","receivedDate","estimatedtBilling","isdcode","mobile","note","toISOString","handleChange","handleReceivedDate","leadsourceId","modalType","keyName","getFormData","autoComplete","className","TextField","fullWidth","InputLabelProps","shrink","size","paddingTop","paddingBottom","multiline","rows","marginBottom","utils","DateFnsUtils","format","KeyboardButtonProps","type","number","injectIntl","connect","auth","intl","useStyles","makeStyles","theme","formControl","marginTop","minWidth","selectIndustryHandleChange","setIndustry","selectParentAccountHandleChange","setParentAccount","selectCountryHandleChange","setCountry","selectCityHandleChange","setCity","selectStateHandleChange","selectAccountTypeHandleChange","setAccountType","useState","industryId","country","city","parentAccountId","accountType","classes","initialValues","fullname","username","businessName","password","acceptTerms","confirmPassword","validate","values","errors","accountName","formatMessage","website","addressLine","zipCode","onSubmit","setStatus","setSubmitting","accessToken","register","status","touched","handleBlur","handleSubmit","isSubmitting","noValidate","role","onBlur","helperText","error","Boolean","disabled","ModalContainer","Modal","dialogClassName","show","handleOpen","onHide","handleClose","modalSize","centered","Header","closeButton","Title","modalTitle","Body","modalBody","modalFooter","CrudButtonOPtions","handleButton1","handleButton2","button1","buttonDisplayType","button2","displayButton1","labelButton1","labelButton2","showButton1","onClick","display","formData","ViewComponent","setLeadSource","userData","useSelector","user","setShow","setModalTitle","setModalBody","setModalFooter","setModalSize","reRender","setRerender","notify","success","toast","message","useEffect","response","mainRole","business","leadSourceList","columns","title","field","render","rowData","Row","Col","Button","color","showUpdateModal","fetchData","handleSave","result","handleUpdate","newData","align","CircularProgress","Leads","exact","from","to","path","component","CreateComponent"],"mappings":"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","file":"static/js/12.b37e711f.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const ROOT_URL = process.env.REACT_APP_API_URL;\r\nexport const ACCOUNT_URL = 'api/account';\r\nexport const ACCOUNT_INDUSTRY = 'api/config/industry';\r\nexport const ACCOUNT_TYPE = 'api/config/accounttype';\r\nexport const ACCOUNT_PARENT = 'api/Lead/TableView/Business';\r\n\r\nexport function getAccountList() {\r\n  return axios.get(`${ROOT_URL}/${ACCOUNT_URL}`);\r\n}\r\n\r\nexport function registerAccount(accounts) {\r\n  return axios.post(`${ROOT_URL}/${ACCOUNT_URL}`, accounts);\r\n}\r\n\r\nexport function updateAccount(accounts) {\r\n  return axios.patch(`${ROOT_URL}/${ACCOUNT_URL}`, accounts);\r\n}\r\n\r\nexport function deleteAccount(id) {\r\n  return axios.delete(`${ROOT_URL}/${ACCOUNT_URL}/${id}`);\r\n}\r\n\r\nexport function getIndustry() {\r\n  return axios.get(`${ROOT_URL}/${ACCOUNT_INDUSTRY}`);\r\n}\r\n\r\nexport function getAccountType() {\r\n  return axios.get(`${ROOT_URL}/${ACCOUNT_INDUSTRY}`);\r\n}\r\n\r\nexport function getParentAccount(id) {\r\n  return axios.get(`${ROOT_URL}/${ACCOUNT_PARENT}/${id}`);\r\n}\r\n","import axios from 'axios';\r\n\r\nexport const ROOT_URL = process.env.REACT_APP_API_URL;\r\nexport const LEAD_SOURCE_URL = 'api/config/leadsource';\r\nexport const ASSIGN_LEAD_SOURCE_URL = 'api/config/leadsource/assign';\r\nexport const LEAD_SOURCE_USER_URL = 'api/config/leadsource/users';\r\n\r\nexport function getLeadSourceList() {\r\n  return axios.get(`${ROOT_URL}/${LEAD_SOURCE_URL}`);\r\n}\r\n\r\nexport function addLeadSource(data) {\r\n  return axios.post(`${ROOT_URL}/${LEAD_SOURCE_URL}`, data);\r\n}\r\n\r\nexport function updateLeadSource(data) {\r\n  return axios.patch(`${ROOT_URL}/${LEAD_SOURCE_URL}`, data);\r\n}\r\n\r\nexport function deleteLeadSource(id) {\r\n  return axios.delete(`${ROOT_URL}/${LEAD_SOURCE_URL}/${id}`);\r\n}\r\n\r\nexport function assignLeadSource(data) {\r\n  return axios.post(`${ROOT_URL}/${ASSIGN_LEAD_SOURCE_URL}`, data);\r\n}\r\n\r\nexport function getLeadSourceUsers(id) {\r\n  return axios.get(`${ROOT_URL}/${LEAD_SOURCE_USER_URL}/${id}`);\r\n}\r\n","import axios from 'axios';\r\n\r\nexport const ROOT_URL = process.env.REACT_APP_API_URL;\r\nexport const LEAD_STATUS_URL = 'api/config/leadstatus';\r\n\r\nexport function getLeadStatus(businessId) {\r\n  return axios.get(`${ROOT_URL}/${LEAD_STATUS_URL}/${businessId}`);\r\n}\r\n\r\nexport function addLeadStatus(data) {\r\n  return axios.post(`${ROOT_URL}/${LEAD_STATUS_URL}`, data);\r\n}\r\n\r\nexport function updateLeadStatus(data) {\r\n  return axios.patch(`${ROOT_URL}/${LEAD_STATUS_URL}`, data);\r\n}\r\n\r\nexport function deleteLeadStatus(id) {\r\n  return axios.delete(`${ROOT_URL}/${LEAD_STATUS_URL}/${id}`);\r\n}\r\n","import React from 'react';\r\nimport { Select, MenuItem, InputLabel, FormControl } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { getLeadSourceList } from '../../services/leadSource.service';\r\n\r\nclass LeadSourceDropDown extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSelectLeadSource = this.handleSelectLeadSource.bind(this);\r\n    this.state = {\r\n      leadData: [],\r\n      leadSourceId: this.props.currentLeadSource.leadSourceId,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getLeadsSource();\r\n    this.setState({ leadSourceId: this.props.currentLeadSource.leadSourceId });\r\n  }\r\n\r\n  getLeadsSource() {\r\n    getLeadSourceList()\r\n      .then((results) => this.setState({ leadData: results.data }))\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  handleSelectLeadSource(event) {\r\n    this.setState({ leadSourceId: event.target.value });\r\n    this.props.getSelectedLeadSource(event.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <FormControl margin='dense' variant='outlined' style={{ width: '100%' }}>\r\n        <InputLabel id='labelLeadSource'>Lead Source</InputLabel>\r\n        <Select\r\n          labelId='labelLeadSource'\r\n          value={this.props.currentLeadSource.leadSourceId}\r\n          onChange={this.handleSelectLeadSource.bind(this)}\r\n          label='Lead Source'\r\n          name='leadSourceId'\r\n        >\r\n          <MenuItem>\r\n            <em>Select Lead Source</em>\r\n          </MenuItem>\r\n          {console.log(this.state.leadData)}\r\n          {this.state.leadData.map((value) => (\r\n            <MenuItem key={value.id} value={value.id}>\r\n              {value.leadSourceName}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LeadSourceDropDown;\r\n","import axios from \"axios\";\r\n\r\nexport const ROOT_URL = process.env.REACT_APP_API_URL;\r\nexport const LEAD_URL = \"api/lead\";\r\nexport const GET_LEAD_TABL_VIEW_URL = \"api/lead/tableview\";\r\n\r\nexport function getLeadsList() {\r\n  return axios.get(`${ROOT_URL}/${GET_LEAD_TABL_VIEW_URL}`);\r\n}\r\n\r\nexport function getLeadsDetails(leadId) {\r\n  return axios.get(`${ROOT_URL}/${LEAD_URL}/${leadId}`);\r\n}\r\n\r\n\r\nexport function registerLead (lead) {\r\n  return axios.post(`${ROOT_URL}/${LEAD_URL}`, lead);\r\n}\r\n\r\nexport function updateLead(lead) {\r\n  return axios.patch(`${ROOT_URL}/${LEAD_URL}`, lead);\r\n}\r\n\r\nexport function deleteLead(id){\r\n  return axios.delete(`${ROOT_URL}/${LEAD_URL}/${id}`);\r\n}\r\n","import React from 'react';\r\nimport { Select, MenuItem, InputLabel, FormControl } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { getLeadStatus } from '../../services/leadStatus.service';\r\n\r\nclass LeadStatusDropDown extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSelectLeadStatus = this.handleSelectLeadStatus.bind(this);\r\n    this.state = {\r\n      leadData: [],\r\n      leadStatusId: this.props.currentLeadStatus.leadStatusId,\r\n      listStatusList: [],\r\n    };\r\n  }\r\n\r\n  getLeadStatusList = async () => {\r\n    const leadStatus = await getLeadStatus(this.props.businessId);\r\n    this.setState({\r\n      leadStatusList: leadStatus.data,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // this.getLeadsSource();\r\n    this.setState({ leadStatusId: this.props.currentLeadStatus.leadStatusId });\r\n    this.getLeadStatusList();\r\n  }\r\n\r\n  // getLeadsSource() {\r\n  //     getLeadSourceList()\r\n  //         .then(results => this.setState({leadData : results.data}))\r\n  //         .catch(err => console.log(err))\r\n  // }\r\n\r\n  handleSelectLeadStatus(event) {\r\n    this.setState({ leadStatusId: event.target.value });\r\n    this.props.getSelectedLeadStatus(event.target.value);\r\n  }\r\n  render() {\r\n    return (\r\n      <FormControl margin='dense' variant='outlined' style={{ width: '100%' }}>\r\n        <InputLabel id='labelLeadStatus'>Lead Status</InputLabel>\r\n        <Select\r\n          labelId='labelLeadSource'\r\n          value={this.props.currentLeadStatus.leadStatusId}\r\n          onChange={this.handleSelectLeadStatus.bind(this)}\r\n          label='Lead Status'\r\n          name='leadStatusId'\r\n        >\r\n          <MenuItem value='0'>\r\n            <em>\r\n              Select Lead Status\r\n              {/* {!this.state?.leadStatusList ? 'Loading' : 'Select Lead Status'} */}\r\n            </em>\r\n          </MenuItem>\r\n\r\n          {this.state?.leadStatusList?.map((value) => (\r\n            <MenuItem key={value.id} value={value.id}>\r\n              {value.leadStatusName}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LeadStatusDropDown;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Switch,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl\r\n} from '@material-ui/core';\r\nimport LeadSourceDropdown from '../../../../partials/shared/LeadSourceDropDown';\r\nimport LeadStatusDropDown from '../../../../partials/shared/LeadStatusDropDown';\r\nimport { getLeadsDetails } from '../../../../services/leads.service';\r\n\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker\r\n} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nclass InputFieldsContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let defaultReceiveDate = new Date();\r\n    this.state = {\r\n      firstName: '',\r\n      leadSourceId: '4PDvakaYzWg.',\r\n      companyName: '',\r\n      ssn: '',\r\n      equiment: '',\r\n      email: '',\r\n      phone: '',\r\n      description: '',\r\n      lastName: '',\r\n      receivedDate: '',\r\n      leadStatusId: 'JR1zcprJkUs.',\r\n      estimatedtBilling: '',\r\n      isdcode: '',\r\n      mobile: '',\r\n      note: '',\r\n      receivedDate: defaultReceiveDate.toISOString()\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleReceivedDate = this.handleReceivedDate.bind(this);\r\n    this.handleSelectLeadSource = this.handleSelectLeadSource.bind(this);\r\n    this.handleSelectLeadStatus = this.handleSelectLeadStatus.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let leadId = this.props.leadsourceId;\r\n\r\n    if (typeof(leadId) !== 'undefined') {\r\n      getLeadsDetails(leadId)\r\n        .then(results => {\r\n          let leadData = results.data;\r\n          this.setState(leadData);\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    if (this.props.modalType !== 'details') {\r\n      let keyName = event.target.name;\r\n      let data = this.state;\r\n      data[keyName] = event.target.value;\r\n\r\n      this.setState(data);\r\n      this.props.getFormData(data);\r\n    }\r\n  }\r\n\r\n  handleReceivedDate(receivedDate) {\r\n    if (this.props.modalType !== 'details') {\r\n      let data = this.state;\r\n      data.receivedDate = receivedDate.toISOString();\r\n      this.setState(data);\r\n      this.props.getFormData(data);\r\n    }\r\n  }\r\n\r\n  handleSelectLeadSource(leadSourceId) {\r\n    if (this.props.modalType !== 'details') {\r\n      let data = this.state;\r\n      data.leadSourceId = leadSourceId;\r\n      this.setState(data);\r\n      this.props.getFormData(data);\r\n    }\r\n  }\r\n\r\n  handleSelectLeadStatus(leadStatusId) {\r\n    if (this.props.modalType !== 'details') {\r\n      let data = this.state;\r\n      //data.leadStatusId = leadStatusId;\r\n      this.setState(data);\r\n      this.props.getFormData(data);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      //   <div className='kt-container  kt-container--fluid  kt-grid__item kt-grid__item'>\r\n      //     <div className='kt-portlet'>\r\n      <form autoComplete='off'>\r\n        {/* <div className='kt-portlet__body'> */}\r\n        <div className='row'>\r\n          <div className='col-md-6'>\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='First name'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='firstName'\r\n                value={this.state.firstName}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div\r\n              className='form-group mb-0'\r\n              style={{ paddingTop: '16px', paddingBottom: '8px' }}\r\n            >\r\n              <LeadSourceDropdown\r\n                currentLeadSource={{\r\n                  leadSourceId: this.state.leadSourceId\r\n                }}\r\n                getSelectedLeadSource={this.handleSelectLeadSource}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-1'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Company Name'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='companyName'\r\n                value={this.state.companyName}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='SSN'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='ssn'\r\n                value={this.state.ssn}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Equiment'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='equiment'\r\n                value={this.state.equiment}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Email'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='email'\r\n                value={this.state.email}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Phone'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='phone'\r\n                value={this.state.phone}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Description'\r\n                variant='outlined'\r\n                multiline\r\n                rows='4'\r\n                className='kt-width-full'\r\n                name='description'\r\n                value={this.state.description}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className='col-md-6'>\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Last name'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='lastName'\r\n                value={this.state.lastName}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <FormControl margin='dense' style={{ width: '100%' }}>\r\n              <div\r\n                className='form-group mb-0'\r\n                style={{\r\n                  paddingTop: '0px',\r\n                  paddingBottom: '0px',\r\n                  marginBottom: '0px'\r\n                }}\r\n              >\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    margin='normal'\r\n                    id='receivedDate'\r\n                    name='receivedDate'\r\n                    label='Lead Receive Date'\r\n                    format='MM-dd-yyyy'\r\n                    value={this.state.receivedDate}\r\n                    onChange={this.handleReceivedDate}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date'\r\n                    }}\r\n                    style={{ paddingTop: '0px', paddingBottom: '0 px' }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </div>\r\n            </FormControl>\r\n\r\n            <div\r\n              className='form-group mb-0'\r\n              style={{ paddingTop: '0px', paddingBottom: '8px' }}\r\n            >\r\n              <LeadStatusDropDown\r\n                currentLeadStatus={{\r\n                  leadStatusId: this.state.leadStatusId\r\n                }}\r\n                getSelectedLeadStatus={this.handleSelectLeadStatus}\r\n                businessId={this.props.businessId}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Number of location'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='noOfLocation'\r\n                type='number'\r\n                value={this.state.number}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Estimated Billing'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='estimatedtBilling'\r\n                value={this.state.estimatedtBilling}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='ISD Code'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='isdcode'\r\n                value={this.state.isdcode}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='ISD Code'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='mobile'\r\n                value={this.state.mobile}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Notes'\r\n                variant='outlined'\r\n                multiline\r\n                rows='4'\r\n                className='kt-width-full'\r\n                name='note'\r\n                value={this.state.note}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* </div> */}\r\n      </form>\r\n      //     </div>\r\n      //   </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputFieldsContainer;\r\n","\r\nimport React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Checkbox, FormControlLabel, TextField, Select, MenuItem, InputLabel, FormControl } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport * as auth from \"../../../../store/ducks/auth.duck\";\r\nimport { registerAccount } from \"../../../../services/account.service\";\r\n\r\n\r\nfunction RegisterComponent(props) {\r\n  const { intl } = props;\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n      marginTop: 16,\r\n      marginBottom: 8,\r\n      minWidth: '100%',\r\n    },\r\n  }));\r\n\r\n\r\n  const selectIndustryHandleChange = event => {\r\n    setIndustry(event.target.value);\r\n  };\r\n\r\n   const selectParentAccountHandleChange = event => {\r\n    setParentAccount(event.target.value);\r\n  };\r\n\r\n  const selectCountryHandleChange = event => {\r\n    setCountry(event.target.value);\r\n  };\r\n\r\n  const selectCityHandleChange = event => {\r\n    setCity(event.target.value);\r\n  };\r\n\r\n  const selectStateHandleChange = event => {\r\n    setState(event.target.value);\r\n  };\r\n\r\n  const selectAccountTypeHandleChange = event => {\r\n    setAccountType(event.target.value);\r\n  };\r\n\r\n  const [industryId, setIndustry] = React.useState('');\r\n  const [country, setCountry] = React.useState('');\r\n  const [city, setCity] = React.useState('');\r\n  const [state, setState] = React.useState('');\r\n  const [parentAccountId, setParentAccount] = React.useState('');\r\n  const [accountType, setAccountType] = React.useState('');\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-6\">\r\n        <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n          <div className=\"kt-portlet\">\r\n            <div className=\"kt-portlet__head\">\r\n              <div className=\"kt-portlet__head-label\">\r\n                <h3 className=\"kt-portlet__head-title\">\r\n                  Account Details\r\n                </h3>\r\n              </div>\r\n            </div>\r\n\r\n            <Formik\r\n              initialValues={{\r\n                email: \"\",\r\n                fullname: \"\",\r\n                username: \"\",\r\n                businessName: \"\",\r\n                password: \"\",\r\n                acceptTerms: true,\r\n                confirmPassword: \"\"\r\n              }}\r\n              validate={values => {\r\n                const errors = {};\r\n\r\n                if (!values.accountName) {\r\n                  errors.accountName = intl.formatMessage({\r\n                    id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n                  });\r\n                }\r\n\r\n                if (!values.phone) {\r\n                  errors.phone = intl.formatMessage({\r\n                    id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n                  });\r\n                }\r\n\r\n                if (!values.website) {\r\n                  errors.website = intl.formatMessage({\r\n                    id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n                  });\r\n                }\r\n\r\n                if (!values.addressLine) {\r\n                  errors.addressLine = intl.formatMessage({\r\n                    id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n                  });\r\n                }\r\n\r\n                if (!values.zipCode) {\r\n                  errors.zipCode = intl.formatMessage({\r\n                    id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n                  });\r\n                }\r\n                return errors;\r\n              }}\r\n              onSubmit={(values, { setStatus, setSubmitting }) => {\r\n                registerAccount(\r\n                  {/*values.email,\r\n                  values.fullname,\r\n                  values.businessName,\r\n                  values.username,\r\n                  values.password*/}\r\n                )\r\n                  .then(({ data: { accessToken } }) => {\r\n                    props.register(accessToken);\r\n                  })\r\n                  .catch(() => {\r\n                    setSubmitting(false);\r\n                    setStatus(\r\n                        \"Invalid Registration\"\r\n                    );\r\n                  });\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                status,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                isSubmitting\r\n              }) => (\r\n                <form className=\"kt-form kt-form--label-right\" onSubmit={handleSubmit} noValidate autoComplete=\"off\">\r\n                  <div className=\"form-body\">\r\n\r\n                    <div className=\"kt-portlet__body\">\r\n                      {status && (\r\n                        <div className=\"form-group form-group-last\">\r\n                          <div className=\"alert alert-secondary\" role=\"alert\">\r\n                            <div className=\"alert-icon\"><i className=\"flaticon-warning kt-font-brand\"></i></div>\r\n                            <div className=\"alert-text\">{status}</div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    <div className=\"kt-portlet__head\">\r\n                      <div className=\"kt-portlet__head-label\">\r\n                        <h3 className=\"kt-portlet__head-title\">\r\n                          Account Info\r\n                        </h3>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6\">\r\n                        <div className=\"form-group mb-0\">\r\n                          <TextField\r\n                            margin=\"normal\"\r\n                            label=\"Account Name\"\r\n                            className=\"kt-width-full\"\r\n                            name=\"accountName\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            value={values.accountName}\r\n                            helperText={touched.accountName && errors.accountName}\r\n                            error={Boolean(touched.accountName && errors.accountName)}\r\n                          />\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-0\">\r\n                          <TextField\r\n                            margin=\"normal\"\r\n                            label=\"Phone Number\"\r\n                            className=\"kt-width-full\"\r\n                            name=\"phone\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            value={values.phone}\r\n                            helperText={touched.phone && errors.phone}\r\n                            error={Boolean(touched.phone && errors.phone)}\r\n                          />\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-0\">\r\n                          <TextField\r\n                            margin=\"normal\"\r\n                            label=\"Website\"\r\n                            className=\"kt-width-full\"\r\n                            name=\"website\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            value={values.website}\r\n                            helperText={touched.website && errors.website}\r\n                            error={Boolean(touched.website && errors.website)}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"col-md-6\">\r\n                        <div className=\"form-group mb-0\">\r\n                          <FormControl className={classes.formControl}>\r\n                            <InputLabel id=\"labelIndustry\">Industry</InputLabel>\r\n                            <Select\r\n                              labelId=\"labelIndustry\"\r\n                              name=\"industryId\"\r\n                              value={industryId}\r\n                              onChange={selectIndustryHandleChange}\r\n                            >\r\n                              <MenuItem value=\"\">\r\n                                <em>Select Parent Account</em>\r\n                              </MenuItem>\r\n                              <MenuItem value='investor'>Investor</MenuItem>\r\n                              <MenuItem value='other'>Other</MenuItem>\r\n                              <MenuItem value='partner'>Partner</MenuItem>\r\n                              <MenuItem value='press'>Press</MenuItem>\r\n                              <MenuItem value='prospect'>Prospect</MenuItem>\r\n                              <MenuItem value='reseller'>Reseller</MenuItem>\r\n                              \r\n                            </Select>\r\n                          </FormControl>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-0\">\r\n                          <FormControl className={classes.formControl}>\r\n                            <InputLabel id=\"labelParentAccount\">Parent Account</InputLabel>\r\n                            <Select\r\n                              labelId=\"labelParentAccount\"\r\n                              name=\"parentAccountId\"\r\n                              value={parentAccountId}\r\n                              onChange={selectParentAccountHandleChange}\r\n                            >\r\n                              <MenuItem value=\"\">\r\n                                <em>Select Industry</em>\r\n                              </MenuItem>\r\n                              \r\n                            </Select>\r\n                          </FormControl>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-0\">\r\n                          <FormControl className={classes.formControl}>\r\n                            <InputLabel id=\"labelAccountType\">Account Type</InputLabel>\r\n                            <Select\r\n                              labelId=\"labelAccountType\"\r\n                              value={accountType}\r\n                              onChange={selectAccountTypeHandleChange}\r\n                            >\r\n                              <MenuItem value=\"\">\r\n                                <em>Select Account Type</em>\r\n                              </MenuItem>\r\n                              <MenuItem value='analyst'>Analyst</MenuItem>\r\n                              <MenuItem value='competitor'>Competitor</MenuItem>\r\n                              <MenuItem value='customer'>Customer</MenuItem>\r\n                              <MenuItem value='distribtor'>Distribtor</MenuItem>\r\n                              <MenuItem value='integrator'>Integrator</MenuItem>\r\n                            </Select>\r\n                          </FormControl>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"kt-portlet__head\">\r\n                      <div className=\"kt-portlet__head-label\">\r\n                        <h3 className=\"kt-portlet__head-title\">\r\n                          Address Info\r\n                        </h3>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-group mb-0\">\r\n                      <TextField\r\n                        margin=\"normal\"\r\n                        label=\"Address Line\"\r\n                        className=\"kt-width-full\"\r\n                        name=\"addressLine\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.addressLine}\r\n                        helperText={touched.addressLine && errors.addressLine}\r\n                        error={Boolean(touched.addressLine && errors.addressLine)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6\">\r\n                        \r\n                        <FormControl className={classes.formControl}>\r\n                          <InputLabel id=\"labelCountry\">Country</InputLabel>\r\n                          <Select\r\n                            labelId=\"labelCountry\"\r\n                            name=\"country\"\r\n                            value={country}\r\n                            onChange={selectCountryHandleChange}\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>Select Country</em>\r\n                            </MenuItem>\r\n                            \r\n                          </Select>\r\n                        </FormControl>\r\n\r\n                        <FormControl className={classes.formControl}>\r\n                          <InputLabel id=\"labelState\">State</InputLabel>\r\n                          <Select\r\n                            labelId=\"labelState\"\r\n                            name=\"state\"\r\n                            value={state}\r\n                            onChange={selectStateHandleChange}\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>Select State</em>\r\n                            </MenuItem>\r\n                            \r\n                          </Select>\r\n                        </FormControl>\r\n                      </div>\r\n\r\n                      <div className=\"col-md-6\">\r\n                        <div className=\"form-group mb-0\">\r\n                          <FormControl className={classes.formControl}>\r\n                            <InputLabel id=\"labelCity\">City</InputLabel>\r\n                            <Select\r\n                              labelId=\"labelCity\"\r\n                              name=\"city\"\r\n                              value={city}\r\n                              onChange={selectCityHandleChange}\r\n                            >\r\n                              <MenuItem value=\"\">\r\n                                <em>Select City</em>\r\n                              </MenuItem>\r\n                              \r\n                            </Select>\r\n                          </FormControl>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-0\">\r\n                          <TextField\r\n                            margin=\"normal\"\r\n                            label=\"Zip Code\"\r\n                            className=\"kt-width-full\"\r\n                            name=\"zipCode\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            value={values.zipCode}\r\n                            helperText={touched.zipCode && errors.zipCode}\r\n                            error={Boolean(touched.zipCode && errors.zipCode)}\r\n                          />\r\n                        </div>\r\n\r\n                        \r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"kt-portlet__body\">\r\n                    <div className=\"form-actions\">\r\n                      <button\r\n                        disabled={isSubmitting || !values.acceptTerms}\r\n                        className=\"btn btn-primary btn-elevate\"\r\n                      >\r\n                        Register\r\n                      </button>\r\n                    </div>\r\n                      \r\n                  </div>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default injectIntl(\r\n  connect(\r\n    null,\r\n    auth.actions\r\n  )(RegisterComponent)\r\n);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nconst ModalContainer = props => {\r\n  return (\r\n    <div>\r\n      <Modal\r\n        dialogClassName='modal-90w'\r\n        show={props.handleOpen}\r\n        onHide={props.handleClose}\r\n        size={props.modalSize}\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{props.modalTitle}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {props.modalBody}\r\n          {props.modalFooter}\r\n        </Modal.Body>\r\n        {/* <Modal.Footer></Modal.Footer> */}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalContainer;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Modal } from 'react-bootstrap';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass CrudButtonOPtions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleButton1 = this.handleButton1.bind(this);\r\n    this.handleButton2 = this.handleButton2.bind(this);\r\n    let button1 = this.props.buttonDisplayType;\r\n    let button2 = 'CLOSE';\r\n    let displayButton1 = 'block';\r\n    if (this.props.buttonDisplayType === 'DELETE') {\r\n      button1 = 'YES';\r\n      button2 = 'NO';\r\n    }\r\n\r\n    if (this.props.buttonDisplayType === 'DETAILS') {\r\n      displayButton1 = 'none';\r\n    }\r\n\r\n    this.state = {\r\n      labelButton1: button1,\r\n      labelButton2: button2,\r\n      showButton1: displayButton1\r\n    };\r\n  }\r\n\r\n  handleButton1(event) {\r\n    this.props.handleButton1();\r\n  }\r\n\r\n  handleButton2() {\r\n    this.props.handleButton2();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <button\r\n          className='btn btn-primary btn-elevate'\r\n          onClick={this.handleButton1.bind(this)}\r\n          style={{ display: this.state.showButton1 }}\r\n        >\r\n          {this.state.labelButton1}\r\n        </button>\r\n        {/* <button className=\"btn btn-danger btn-elevate\" \r\n                onClick={this.handleButton2   .bind(this)}\r\n        >\r\n          {this.state.labelButton2}\r\n        </button> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CrudButtonOPtions;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport LeadSourceDropdown from '../../../../partials/shared/LeadSourceDropDown';\r\nimport {\r\n  getLeadsList,\r\n  registerLead,\r\n  updateLead,\r\n  deleteLead,\r\n} from '../../../../services/leads.service';\r\nimport { getLeadSourceList } from '../../../../services/leadSource.service';\r\nimport { Button, CircularProgress } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ModalContainer from '../../../../partials/shared/ModalContainer';\r\nimport InputfieldsContainer from './InputFieldsContainer';\r\nimport CrudButtonOPtions from '../../../../partials/shared/CrudButtonOptions';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n// var selectedLeadSource = {};\r\nvar formData = {};\r\nconst ViewComponent = () => {\r\n  const [state, setState] = useState(0);\r\n  const [leadSource, setLeadSource] = useState(0);\r\n\r\n  const userData = useSelector((state) => state.auth.user);\r\n\r\n  // const handleSelectLeadSource = (leadSource) => {\r\n  //   setLeadSource({leadSourceId : leadSource.leadSourceId})\r\n  //   selectedLeadSource = leadSource;\r\n  // }\r\n  // for modal\r\n  const [show, setShow] = useState(false);\r\n  const [modalTitle, setModalTitle] = useState('');\r\n  const [modalBody, setModalBody] = useState('');\r\n  const [modalFooter, setModalFooter] = useState('');\r\n  const [modalSize, setModalSize] = useState('s');\r\n  const [deleteId, setDeleteId] = useState(0);\r\n  const handleClose = () => setShow(false);\r\n\r\n  const [reRender, setRerender] = useState(false);\r\n\r\n  const notify = (data) => {\r\n    if (data.success) {\r\n      toast.success(data.message);\r\n    } else {\r\n      toast.error(data.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await getLeadsList();\r\n      const leadSourceList = await getLeadSourceList(userData.mainRole.business.id);\r\n      setLeadSource(leadSourceList.data);\r\n      setState({\r\n        columns: [\r\n          { title: 'Company name', field: 'companyName' },\r\n          { title: 'First name', field: 'firstName' },\r\n          { title: 'Last name', field: 'lastName' },\r\n          { title: 'Phone', field: 'phoneNumber' },\r\n          {\r\n            title: 'Action',\r\n            field: 'actions',\r\n            width: 200,\r\n            render: (rowData) => {\r\n              return (\r\n                <Row>\r\n                  <Col>\r\n                    <Button\r\n                      variant='contained'\r\n                      color='secondary'\r\n                      title={rowData.id}\r\n                      onClick={() => showUpdateModal(rowData.id)}\r\n                    >\r\n                      UPDATE\r\n                    </Button>\r\n                  </Col>\r\n                  <Col>\r\n                    <Button\r\n                      variant='contained'\r\n                      onClick={() => {\r\n                        deleteLead(rowData.id);\r\n                        setRerender(!reRender);\r\n                      }}\r\n                    >\r\n                      DELETE\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              );\r\n            },\r\n          },\r\n        ],\r\n        data: response.data,\r\n      });\r\n    };\r\n    fetchData();\r\n  }, [reRender]);\r\n\r\n  const handleSave = () => {\r\n    if (formData != {}) {\r\n      formData.businessId = userData.mainRole.business.id;\r\n\r\n      registerLead(formData)\r\n        .then((result) => {\r\n          setRerender(!reRender);\r\n          setShow(false);\r\n          notify({ success: true, message: 'Success adding leads.' });\r\n        })\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      setShow(false);\r\n    }\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    if (formData != {}) {\r\n      updateLead(formData)\r\n        .then((result) => {\r\n          setRerender(!reRender);\r\n          setShow(false);\r\n          notify({ success: true, message: 'Success updating leads.' });\r\n        })\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      setShow(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    console.log(deleteId);\r\n    deleteLead(deleteId).then((result) => {\r\n      setRerender(!reRender);\r\n      setShow(false);\r\n      notify({ success: true, message: 'Success deleting leads.' });\r\n    });\r\n  };\r\n\r\n  const handleChange = (newData) => {\r\n    formData = newData;\r\n  };\r\n\r\n  const showAddModal = () => {\r\n    formData = {};\r\n    setShow(true);\r\n    setModalSize('lg');\r\n    setModalTitle('Add Lead');\r\n    setModalBody(\r\n      <InputfieldsContainer\r\n        modalType='add'\r\n        getFormData={handleChange}\r\n        businessId={userData.mainRole.business.id}\r\n      />\r\n    );\r\n    setModalFooter(\r\n      <CrudButtonOPtions\r\n        buttonDisplayType='CONFIRM'\r\n        handleButton1={handleSave}\r\n        handleButton2={handleClose}\r\n      />\r\n    );\r\n  };\r\n\r\n  const showUpdateModal = (leadsourceId) => {\r\n    formData = {};\r\n    setShow(true);\r\n    setModalSize('lg');\r\n    setModalTitle('Update Lead');\r\n    setModalBody(\r\n      <InputfieldsContainer\r\n        modalType='add'\r\n        getFormData={handleChange}\r\n        leadsourceId={leadsourceId}\r\n      />\r\n    );\r\n    setModalFooter(\r\n      <CrudButtonOPtions\r\n        buttonDisplayType='UPDATE'\r\n        handleButton1={handleUpdate}\r\n        handleButton2={handleClose}\r\n      />\r\n    );\r\n  };\r\n\r\n  const showLeadDetailModal = (leadsourceId) => {\r\n    formData = {};\r\n    setShow(true);\r\n    setModalSize('lg');\r\n    setModalTitle('Details Lead');\r\n    setModalBody(\r\n      <InputfieldsContainer\r\n        modalType='details'\r\n        getFormData={handleChange}\r\n        leadsourceId={leadsourceId}\r\n      />\r\n    );\r\n    setModalFooter(\r\n      <CrudButtonOPtions\r\n        buttonDisplayType='DETAILS'\r\n        handleButton1={''}\r\n        handleButton2={handleClose}\r\n      />\r\n    );\r\n  };\r\n\r\n  const showDeleteModal = () => {\r\n    setShow(true);\r\n    setModalSize('lg');\r\n    setModalTitle('Delete Lead');\r\n\r\n    setModalBody(\r\n      <Alert severity='warning'>\r\n        <AlertTitle>Warning</AlertTitle>\r\n        Are you sure do you want do delete?\r\n      </Alert>\r\n    );\r\n    setModalFooter(\r\n      <CrudButtonOPtions\r\n        buttonDisplayType='DELETE'\r\n        handleButton1={handleDelete}\r\n        handleButton2={handleClose}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      {state.data ? (\r\n        <>\r\n          <Button\r\n            className='mb-2'\r\n            variant='contained'\r\n            color='secondary'\r\n            size='large'\r\n            onClick={showAddModal}\r\n          >\r\n            Add\r\n          </Button>\r\n          <MaterialTable\r\n            title='Leads'\r\n            columns={state.columns}\r\n            data={state.data}\r\n          />\r\n          <ModalContainer\r\n            handleClose={handleClose}\r\n            handleOpen={show}\r\n            modalSize={modalSize}\r\n            modalTitle={modalTitle}\r\n            modalBody={modalBody}\r\n            modalFooter={modalFooter}\r\n          />\r\n        </>\r\n      ) : (\r\n        <div align='center'>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewComponent;\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport CreateComponent from './components/RegisterComponent';\r\nimport ViewComponent from './components/ViewComponent';\r\n\r\nexport default function Leads() {\r\n    return (\r\n        <Switch>\r\n            <Redirect exact={true} from=\"/\" to=\"/leads\"/>\r\n            <Route path=\"/leads/register\" component={CreateComponent} />\r\n            <Route path=\"/leads\" component={ViewComponent} />\r\n        </Switch>\r\n    )\r\n}"],"sourceRoot":""}