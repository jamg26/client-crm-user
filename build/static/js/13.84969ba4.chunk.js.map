{"version":3,"sources":["app/services/account.service.js","app/services/leadSource.service.js","app/services/leadStatus.service.js","app/services/leads.service.js","app/partials/shared/LeadSourceDropDown.js","app/partials/shared/LeadStatusDropDown.js","app/pages/home/leads/components/InputFieldsContainer.js","app/pages/home/leads/components/RegisterComponent.js","app/partials/shared/ModalContainer.js","app/partials/shared/CrudButtonOptions.js","app/pages/home/leads/components/ViewComponent.js","app/pages/home/leads/Leads.js"],"names":["ROOT_URL","process","getAccountList","axios","get","registerAccount","accounts","post","updateAccount","patch","deleteAccount","id","delete","getIndustry","getAccountType","getParentAccount","getLeadSourceList","addLeadSource","data","updateLeadSource","deleteLeadSource","assignLeadSource","getLeadSourceUsers","getLeadStatus","businessId","addLeadStatus","updateLeadStatus","deleteLeadStatus","getLeadsList","getLeadsDetails","leadId","registerLead","lead","updateLead","deleteLead","LeadSourceDropDown","props","handleSelectLeadSource","bind","state","leadData","leadSourceId","currentLeadSource","this","getLeadsSource","setState","console","log","then","results","catch","err","event","target","value","getSelectedLeadSource","FormControl","margin","variant","style","width","InputLabel","Select","labelId","onChange","label","name","MenuItem","map","key","leadSourceName","React","Component","connect","auth","user","mainRole","business","LeadStatusDropDown","getLeadStatusList","a","leadStatus","leadStatusList","handleSelectLeadStatus","leadStatusId","currentLeadStatus","listStatusList","getSelectedLeadStatus","leadStatusName","InputFieldsContainer","defaultReceiveDate","Date","firstName","companyName","ssn","equiment","email","phone","description","lastName","estimatedtBilling","isdcode","mobile","note","receivedDate","toISOString","handleChange","handleReceivedDate","leadsourceId","modalType","keyName","getFormData","autoComplete","className","TextField","fullWidth","InputLabelProps","shrink","size","paddingTop","paddingBottom","leadSource","multiline","rows","marginBottom","utils","DateFnsUtils","format","KeyboardButtonProps","type","number","injectIntl","intl","useStyles","makeStyles","theme","formControl","marginTop","minWidth","selectIndustryHandleChange","setIndustry","selectParentAccountHandleChange","setParentAccount","selectCountryHandleChange","setCountry","selectCityHandleChange","setCity","selectStateHandleChange","selectAccountTypeHandleChange","setAccountType","useState","industryId","country","city","parentAccountId","accountType","classes","initialValues","fullname","username","businessName","password","acceptTerms","confirmPassword","validate","values","errors","accountName","formatMessage","website","addressLine","zipCode","onSubmit","setStatus","setSubmitting","accessToken","register","status","touched","handleBlur","handleSubmit","isSubmitting","noValidate","role","onBlur","helperText","error","Boolean","disabled","ModalContainer","Modal","dialogClassName","show","handleOpen","onHide","handleClose","modalSize","centered","Header","closeButton","Title","modalTitle","Body","modalBody","modalFooter","CrudButtonOPtions","handleButton1","handleButton2","button1","buttonDisplayType","button2","displayButton1","labelButton1","labelButton2","showButton1","onClick","display","formData","ViewComponent","setLeadSource","userData","useSelector","setShow","setModalTitle","setModalBody","setModalFooter","setModalSize","reRender","setRerender","notify","success","toast","message","useEffect","response","leadSourceList","columns","title","field","render","rowData","Row","Col","Button","color","showUpdateModal","fetchData","handleSave","result","handleUpdate","newData","align","CircularProgress","Leads","exact","from","to","path","component","CreateComponent"],"mappings":"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","file":"static/js/13.84969ba4.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const ROOT_URL = process.env.REACT_APP_API_URL;\r\nexport const ACCOUNT_URL = 'api/account';\r\nexport const ACCOUNT_INDUSTRY = 'api/config/industry';\r\nexport const ACCOUNT_TYPE = 'api/config/accounttype';\r\nexport const ACCOUNT_PARENT = 'api/Lead/TableView/Business';\r\n\r\nexport function getAccountList() {\r\n  return axios.get(`${ROOT_URL}/${ACCOUNT_URL}`);\r\n}\r\n\r\nexport function registerAccount(accounts) {\r\n  return axios.post(`${ROOT_URL}/${ACCOUNT_URL}`, accounts);\r\n}\r\n\r\nexport function updateAccount(accounts) {\r\n  return axios.patch(`${ROOT_URL}/${ACCOUNT_URL}`, accounts);\r\n}\r\n\r\nexport function deleteAccount(id) {\r\n  return axios.delete(`${ROOT_URL}/${ACCOUNT_URL}/${id}`);\r\n}\r\n\r\nexport function getIndustry() {\r\n  return axios.get(`${ROOT_URL}/${ACCOUNT_INDUSTRY}`);\r\n}\r\n\r\nexport function getAccountType() {\r\n  return axios.get(`${ROOT_URL}/${ACCOUNT_INDUSTRY}`);\r\n}\r\n\r\nexport function getParentAccount(id) {\r\n  return axios.get(`${ROOT_URL}/${ACCOUNT_PARENT}/${id}`);\r\n}\r\n","import axios from 'axios';\r\n\r\nexport const ROOT_URL = process.env.REACT_APP_API_URL;\r\nexport const LEAD_SOURCE_URL = 'api/config/leadsource';\r\nexport const ASSIGN_LEAD_SOURCE_URL = 'api/config/leadsource/assign';\r\nexport const LEAD_SOURCE_USER_URL = 'api/config/leadsource/users';\r\n\r\nexport function getLeadSourceList(id) {\r\n  return axios.get(`${ROOT_URL}/${LEAD_SOURCE_URL}/${id}`);\r\n}\r\n\r\nexport function addLeadSource(data) {\r\n  return axios.post(`${ROOT_URL}/${LEAD_SOURCE_URL}`, data);\r\n}\r\n\r\nexport function updateLeadSource(data) {\r\n  return axios.patch(`${ROOT_URL}/${LEAD_SOURCE_URL}`, data);\r\n}\r\n\r\nexport function deleteLeadSource(id) {\r\n  return axios.delete(`${ROOT_URL}/${LEAD_SOURCE_URL}/${id}`);\r\n}\r\n\r\nexport function assignLeadSource(data) {\r\n  return axios.post(`${ROOT_URL}/${ASSIGN_LEAD_SOURCE_URL}`, data);\r\n}\r\n\r\nexport function getLeadSourceUsers(id) {\r\n  return axios.get(`${ROOT_URL}/${LEAD_SOURCE_USER_URL}/${id}`);\r\n}\r\n","import axios from 'axios';\r\n\r\nexport const ROOT_URL = process.env.REACT_APP_API_URL;\r\nexport const LEAD_STATUS_URL = 'api/config/leadstatus';\r\n\r\nexport function getLeadStatus(businessId) {\r\n  return axios.get(`${ROOT_URL}/${LEAD_STATUS_URL}/${businessId}`);\r\n}\r\n\r\nexport function addLeadStatus(data) {\r\n  return axios.post(`${ROOT_URL}/${LEAD_STATUS_URL}`, data);\r\n}\r\n\r\nexport function updateLeadStatus(data) {\r\n  return axios.patch(`${ROOT_URL}/${LEAD_STATUS_URL}`, data);\r\n}\r\n\r\nexport function deleteLeadStatus(id) {\r\n  return axios.delete(`${ROOT_URL}/${LEAD_STATUS_URL}/${id}`);\r\n}\r\n","import axios from 'axios';\r\n\r\nexport const ROOT_URL = process.env.REACT_APP_API_URL;\r\nexport const LEAD_URL = 'api/lead';\r\nexport const GET_LEAD_TABL_VIEW_URL = 'api/lead/tableview';\r\n\r\nexport function getLeadsList() {\r\n  return axios.get(`${ROOT_URL}/${GET_LEAD_TABL_VIEW_URL}`);\r\n}\r\n\r\nexport function getLeadsDetails(leadId) {\r\n  return axios.get(`${ROOT_URL}/${LEAD_URL}/${leadId}`);\r\n}\r\n\r\nexport function registerLead(lead) {\r\n  return axios.post(`${ROOT_URL}/${LEAD_URL}`, lead);\r\n}\r\n\r\nexport function updateLead(lead) {\r\n  return axios.patch(`${ROOT_URL}/${LEAD_URL}`, lead);\r\n}\r\n\r\nexport function deleteLead(id) {\r\n  return axios.delete(`${ROOT_URL}/${LEAD_URL}/${id}`);\r\n}\r\n","import React from 'react';\r\nimport { Select, MenuItem, InputLabel, FormControl } from '@material-ui/core';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport { getLeadSourceList } from '../../services/leadSource.service';\r\nimport { connect } from 'react-redux';\r\n\r\nclass LeadSourceDropDown extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSelectLeadSource = this.handleSelectLeadSource.bind(this);\r\n    this.state = {\r\n      leadData: [],\r\n      leadSourceId: this.props.currentLeadSource.leadSourceId\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getLeadsSource();\r\n    this.setState({ leadSourceId: this.props.currentLeadSource.leadSourceId });\r\n    console.log(this.props.businessId);\r\n  }\r\n\r\n  getLeadsSource() {\r\n    getLeadSourceList(this.props.businessId)\r\n      .then(results => this.setState({ leadData: results.data }))\r\n      .catch(err => console.log('err', err));\r\n  }\r\n\r\n  handleSelectLeadSource(event) {\r\n    this.setState({ leadSourceId: event.target.value });\r\n    this.props.getSelectedLeadSource(event.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <FormControl margin='dense' variant='outlined' style={{ width: '100%' }}>\r\n        <InputLabel id='labelLeadSource'>Lead Source</InputLabel>\r\n        <Select\r\n          labelId='labelLeadSource'\r\n          //value={this.props.currentLeadSource.leadSourceId}\r\n          onChange={this.handleSelectLeadSource.bind(this)}\r\n          label='Lead Source'\r\n          name='leadSourceId'\r\n        >\r\n          <MenuItem>\r\n            <em>Select Lead Source</em>\r\n          </MenuItem>\r\n          {this.state.leadData.map(value => (\r\n            <MenuItem key={value.id} value={value.id}>\r\n              {value.leadSourceName}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    businessId: state.auth.user.mainRole.business.id\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(LeadSourceDropDown);\r\n","import React from 'react';\r\nimport { Select, MenuItem, InputLabel, FormControl } from '@material-ui/core';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport { getLeadStatus } from '../../services/leadStatus.service';\r\n\r\nclass LeadStatusDropDown extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSelectLeadStatus = this.handleSelectLeadStatus.bind(this);\r\n    this.state = {\r\n      leadData: [],\r\n      leadStatusId: this.props.currentLeadStatus.leadStatusId,\r\n      listStatusList: []\r\n    };\r\n  }\r\n\r\n  getLeadStatusList = async () => {\r\n    const leadStatus = await getLeadStatus(this.props.businessId);\r\n    this.setState({\r\n      leadStatusList: leadStatus.data\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // this.getLeadsSource();\r\n    this.setState({ leadStatusId: this.props.currentLeadStatus.leadStatusId });\r\n    this.getLeadStatusList();\r\n  }\r\n\r\n  // getLeadsSource() {\r\n  //     getLeadSourceList()\r\n  //         .then(results => this.setState({leadData : results.data}))\r\n  //         .catch(err => console.log(err))\r\n  // }\r\n\r\n  handleSelectLeadStatus(event) {\r\n    this.setState({ leadStatusId: event.target.value });\r\n    this.props.getSelectedLeadStatus(event.target.value);\r\n  }\r\n  render() {\r\n    return (\r\n      <FormControl margin='dense' variant='outlined' style={{ width: '100%' }}>\r\n        <InputLabel id='labelLeadStatus'>Lead Status</InputLabel>\r\n        <Select\r\n          labelId='labelLeadSource'\r\n          //value={this.props.currentLeadStatus.leadStatusId}\r\n          onChange={this.handleSelectLeadStatus.bind(this)}\r\n          label='Lead Status'\r\n          name='leadStatusId'\r\n        >\r\n          <MenuItem value='0'>\r\n            <em>\r\n              Select Lead Status\r\n              {/* {!this.state?.leadStatusList ? 'Loading' : 'Select Lead Status'} */}\r\n            </em>\r\n          </MenuItem>\r\n\r\n          {this.state?.leadStatusList?.map(value => {\r\n            console.log(value);\r\n            return (\r\n              <MenuItem key={value.id} value={value.id}>\r\n                {value.leadStatusName}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </Select>\r\n      </FormControl>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LeadStatusDropDown;\r\n","import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  // Checkbox,\r\n  // FormControlLabel,\r\n  // Switch,\r\n  TextField,\r\n  // Select,\r\n  // MenuItem,\r\n  // InputLabel,\r\n  FormControl\r\n} from '@material-ui/core';\r\nimport LeadSourceDropdown from '../../../../partials/shared/LeadSourceDropDown';\r\nimport LeadStatusDropDown from '../../../../partials/shared/LeadStatusDropDown';\r\nimport {\r\n  getLeadsDetails\r\n  //getLeadsList,\r\n} from '../../../../services/leads.service';\r\n\r\n// import { getLeadSourceList } from '../../../../services/leadSource.service';\r\n\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  //KeyboardTimePicker,\r\n  KeyboardDatePicker\r\n} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nclass InputFieldsContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let defaultReceiveDate = new Date();\r\n    this.state = {\r\n      firstName: '',\r\n      leadSourceId: '4PDvakaYzWg.',\r\n      companyName: '',\r\n      ssn: '',\r\n      equiment: '',\r\n      email: '',\r\n      phone: '',\r\n      description: '',\r\n      lastName: '',\r\n      leadStatusId: 'JR1zcprJkUs.',\r\n      estimatedtBilling: '',\r\n      isdcode: '',\r\n      mobile: '',\r\n      note: '',\r\n      receivedDate: defaultReceiveDate.toISOString()\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleReceivedDate = this.handleReceivedDate.bind(this);\r\n    this.handleSelectLeadSource = this.handleSelectLeadSource.bind(this);\r\n    this.handleSelectLeadStatus = this.handleSelectLeadStatus.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let leadId = this.props.leadsourceId;\r\n\r\n    if (typeof leadId !== 'undefined') {\r\n      getLeadsDetails(leadId)\r\n        .then(results => {\r\n          let leadData = results.data;\r\n          this.setState(leadData);\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    // getLeadSourceList()\r\n    //   .then((results) => {\r\n    //     this.setState(results.data);\r\n    //   })\r\n    //   .catch((err) => console.log(err));\r\n  }\r\n\r\n  handleChange(event) {\r\n    if (this.props.modalType !== 'details') {\r\n      let keyName = event.target.name;\r\n      let data = this.state;\r\n      data[keyName] = event.target.value;\r\n\r\n      this.setState(data);\r\n      this.props.getFormData(data);\r\n    }\r\n  }\r\n\r\n  handleReceivedDate(receivedDate) {\r\n    if (this.props.modalType !== 'details') {\r\n      let data = this.state;\r\n      data.receivedDate = receivedDate.toISOString();\r\n      this.setState(data);\r\n      this.props.getFormData(data);\r\n    }\r\n  }\r\n\r\n  handleSelectLeadSource(leadSourceId) {\r\n    if (this.props.modalType !== 'details') {\r\n      let data = this.state;\r\n      data.leadSourceId = leadSourceId;\r\n      this.setState(data);\r\n      this.props.getFormData(data);\r\n    }\r\n  }\r\n\r\n  handleSelectLeadStatus(leadStatusId) {\r\n    if (this.props.modalType !== 'details') {\r\n      let data = this.state;\r\n      //data.leadStatusId = leadStatusId;\r\n      this.setState(data);\r\n      this.props.getFormData(data);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      //   <div className='kt-container  kt-container--fluid  kt-grid__item kt-grid__item'>\r\n      //     <div className='kt-portlet'>\r\n      <form autoComplete='off'>\r\n        {/* <div className='kt-portlet__body'> */}\r\n        <div className='row'>\r\n          <div className='col-md-6'>\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='First name'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='firstName'\r\n                value={this.state.firstName}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div\r\n              className='form-group mb-0'\r\n              style={{ paddingTop: '16px', paddingBottom: '8px' }}\r\n            >\r\n              <LeadSourceDropdown\r\n                currentLeadSource={{\r\n                  leadSourceId: this.state.leadSourceId\r\n                }}\r\n                getSelectedLeadSource={this.handleSelectLeadSource}\r\n                leadSource={this.props.leadSource}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-1'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Company Name'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='companyName'\r\n                value={this.state.companyName}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='SSN'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='ssn'\r\n                value={this.state.ssn}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Equiment'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='equiment'\r\n                value={this.state.equiment}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Email'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='email'\r\n                value={this.state.email}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Phone'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='phone'\r\n                value={this.state.phone}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Description'\r\n                variant='outlined'\r\n                multiline\r\n                rows='4'\r\n                className='kt-width-full'\r\n                name='description'\r\n                value={this.state.description}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className='col-md-6'>\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Last name'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='lastName'\r\n                value={this.state.lastName}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <FormControl margin='dense' style={{ width: '100%' }}>\r\n              <div\r\n                className='form-group mb-0'\r\n                style={{\r\n                  paddingTop: '0px',\r\n                  paddingBottom: '0px',\r\n                  marginBottom: '0px'\r\n                }}\r\n              >\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    margin='normal'\r\n                    id='receivedDate'\r\n                    name='receivedDate'\r\n                    label='Lead Receive Date'\r\n                    format='MM-dd-yyyy'\r\n                    value={this.state.receivedDate}\r\n                    onChange={this.handleReceivedDate}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date'\r\n                    }}\r\n                    style={{ paddingTop: '0px', paddingBottom: '0 px' }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </div>\r\n            </FormControl>\r\n\r\n            <div\r\n              className='form-group mb-0'\r\n              style={{ paddingTop: '0px', paddingBottom: '8px' }}\r\n            >\r\n              <LeadStatusDropDown\r\n                currentLeadStatus={{\r\n                  leadStatusId: this.state.leadStatusId\r\n                }}\r\n                getSelectedLeadStatus={this.handleSelectLeadStatus}\r\n                businessId={this.props.businessId}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Number of location'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='noOfLocation'\r\n                type='number'\r\n                value={this.state.number}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Estimated Billing'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='estimatedtBilling'\r\n                value={this.state.estimatedtBilling}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='ISD Code'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='isdcode'\r\n                value={this.state.isdcode}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='ISD Code'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='mobile'\r\n                value={this.state.mobile}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Notes'\r\n                variant='outlined'\r\n                multiline\r\n                rows='4'\r\n                className='kt-width-full'\r\n                name='note'\r\n                value={this.state.note}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* </div> */}\r\n      </form>\r\n      //     </div>\r\n      //   </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputFieldsContainer;\r\n","import React from 'react';\r\nimport { Formik } from 'formik';\r\nimport { connect } from 'react-redux';\r\n//import { Link } from \"react-router-dom\";\r\nimport { injectIntl } from 'react-intl';\r\nimport {\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport * as auth from '../../../../store/ducks/auth.duck';\r\nimport { registerAccount } from '../../../../services/account.service';\r\n\r\nfunction RegisterComponent(props) {\r\n  const { intl } = props;\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n      marginTop: 16,\r\n      marginBottom: 8,\r\n      minWidth: '100%'\r\n    }\r\n  }));\r\n\r\n  const selectIndustryHandleChange = event => {\r\n    setIndustry(event.target.value);\r\n  };\r\n\r\n  const selectParentAccountHandleChange = event => {\r\n    setParentAccount(event.target.value);\r\n  };\r\n\r\n  const selectCountryHandleChange = event => {\r\n    setCountry(event.target.value);\r\n  };\r\n\r\n  const selectCityHandleChange = event => {\r\n    setCity(event.target.value);\r\n  };\r\n\r\n  const selectStateHandleChange = event => {\r\n    setState(event.target.value);\r\n  };\r\n\r\n  const selectAccountTypeHandleChange = event => {\r\n    setAccountType(event.target.value);\r\n  };\r\n\r\n  const [industryId, setIndustry] = React.useState('');\r\n  const [country, setCountry] = React.useState('');\r\n  const [city, setCity] = React.useState('');\r\n  const [state, setState] = React.useState('');\r\n  const [parentAccountId, setParentAccount] = React.useState('');\r\n  const [accountType, setAccountType] = React.useState('');\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-md-6'>\r\n        <div className='kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid'>\r\n          <div className='kt-portlet'>\r\n            <div className='kt-portlet__head'>\r\n              <div className='kt-portlet__head-label'>\r\n                <h3 className='kt-portlet__head-title'>Account Details</h3>\r\n              </div>\r\n            </div>\r\n\r\n            <Formik\r\n              initialValues={{\r\n                email: '',\r\n                fullname: '',\r\n                username: '',\r\n                businessName: '',\r\n                password: '',\r\n                acceptTerms: true,\r\n                confirmPassword: ''\r\n              }}\r\n              validate={values => {\r\n                const errors = {};\r\n\r\n                if (!values.accountName) {\r\n                  errors.accountName = intl.formatMessage({\r\n                    id: 'AUTH.VALIDATION.REQUIRED_FIELD'\r\n                  });\r\n                }\r\n\r\n                if (!values.phone) {\r\n                  errors.phone = intl.formatMessage({\r\n                    id: 'AUTH.VALIDATION.REQUIRED_FIELD'\r\n                  });\r\n                }\r\n\r\n                if (!values.website) {\r\n                  errors.website = intl.formatMessage({\r\n                    id: 'AUTH.VALIDATION.REQUIRED_FIELD'\r\n                  });\r\n                }\r\n\r\n                if (!values.addressLine) {\r\n                  errors.addressLine = intl.formatMessage({\r\n                    id: 'AUTH.VALIDATION.REQUIRED_FIELD'\r\n                  });\r\n                }\r\n\r\n                if (!values.zipCode) {\r\n                  errors.zipCode = intl.formatMessage({\r\n                    id: 'AUTH.VALIDATION.REQUIRED_FIELD'\r\n                  });\r\n                }\r\n                return errors;\r\n              }}\r\n              onSubmit={(values, { setStatus, setSubmitting }) => {\r\n                registerAccount({\r\n                  /*values.email,\r\n                  values.fullname,\r\n                  values.businessName,\r\n                  values.username,\r\n                  values.password*/\r\n                })\r\n                  .then(({ data: { accessToken } }) => {\r\n                    props.register(accessToken);\r\n                  })\r\n                  .catch(() => {\r\n                    setSubmitting(false);\r\n                    setStatus('Invalid Registration');\r\n                  });\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                status,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                isSubmitting\r\n              }) => (\r\n                <form\r\n                  className='kt-form kt-form--label-right'\r\n                  onSubmit={handleSubmit}\r\n                  noValidate\r\n                  autoComplete='off'\r\n                >\r\n                  <div className='form-body'>\r\n                    <div className='kt-portlet__body'>\r\n                      {status && (\r\n                        <div className='form-group form-group-last'>\r\n                          <div className='alert alert-secondary' role='alert'>\r\n                            <div className='alert-icon'>\r\n                              <i className='flaticon-warning kt-font-brand'></i>\r\n                            </div>\r\n                            <div className='alert-text'>{status}</div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      <div className='kt-portlet__head'>\r\n                        <div className='kt-portlet__head-label'>\r\n                          <h3 className='kt-portlet__head-title'>\r\n                            Account Info\r\n                          </h3>\r\n                        </div>\r\n                      </div>\r\n                      <div className='row'>\r\n                        <div className='col-md-6'>\r\n                          <div className='form-group mb-0'>\r\n                            <TextField\r\n                              margin='normal'\r\n                              label='Account Name'\r\n                              className='kt-width-full'\r\n                              name='accountName'\r\n                              onBlur={handleBlur}\r\n                              onChange={handleChange}\r\n                              value={values.accountName}\r\n                              helperText={\r\n                                touched.accountName && errors.accountName\r\n                              }\r\n                              error={Boolean(\r\n                                touched.accountName && errors.accountName\r\n                              )}\r\n                            />\r\n                          </div>\r\n\r\n                          <div className='form-group mb-0'>\r\n                            <TextField\r\n                              margin='normal'\r\n                              label='Phone Number'\r\n                              className='kt-width-full'\r\n                              name='phone'\r\n                              onBlur={handleBlur}\r\n                              onChange={handleChange}\r\n                              value={values.phone}\r\n                              helperText={touched.phone && errors.phone}\r\n                              error={Boolean(touched.phone && errors.phone)}\r\n                            />\r\n                          </div>\r\n\r\n                          <div className='form-group mb-0'>\r\n                            <TextField\r\n                              margin='normal'\r\n                              label='Website'\r\n                              className='kt-width-full'\r\n                              name='website'\r\n                              onBlur={handleBlur}\r\n                              onChange={handleChange}\r\n                              value={values.website}\r\n                              helperText={touched.website && errors.website}\r\n                              error={Boolean(touched.website && errors.website)}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className='col-md-6'>\r\n                          <div className='form-group mb-0'>\r\n                            <FormControl className={classes.formControl}>\r\n                              <InputLabel id='labelIndustry'>\r\n                                Industry\r\n                              </InputLabel>\r\n                              <Select\r\n                                labelId='labelIndustry'\r\n                                name='industryId'\r\n                                value={industryId}\r\n                                onChange={selectIndustryHandleChange}\r\n                              >\r\n                                <MenuItem value=''>\r\n                                  <em>Select Parent Account</em>\r\n                                </MenuItem>\r\n                                <MenuItem value='investor'>Investor</MenuItem>\r\n                                <MenuItem value='other'>Other</MenuItem>\r\n                                <MenuItem value='partner'>Partner</MenuItem>\r\n                                <MenuItem value='press'>Press</MenuItem>\r\n                                <MenuItem value='prospect'>Prospect</MenuItem>\r\n                                <MenuItem value='reseller'>Reseller</MenuItem>\r\n                              </Select>\r\n                            </FormControl>\r\n                          </div>\r\n\r\n                          <div className='form-group mb-0'>\r\n                            <FormControl className={classes.formControl}>\r\n                              <InputLabel id='labelParentAccount'>\r\n                                Parent Account\r\n                              </InputLabel>\r\n                              <Select\r\n                                labelId='labelParentAccount'\r\n                                name='parentAccountId'\r\n                                value={parentAccountId}\r\n                                onChange={selectParentAccountHandleChange}\r\n                              >\r\n                                <MenuItem value=''>\r\n                                  <em>Select Industry</em>\r\n                                </MenuItem>\r\n                              </Select>\r\n                            </FormControl>\r\n                          </div>\r\n\r\n                          <div className='form-group mb-0'>\r\n                            <FormControl className={classes.formControl}>\r\n                              <InputLabel id='labelAccountType'>\r\n                                Account Type\r\n                              </InputLabel>\r\n                              <Select\r\n                                labelId='labelAccountType'\r\n                                value={accountType}\r\n                                onChange={selectAccountTypeHandleChange}\r\n                              >\r\n                                <MenuItem value=''>\r\n                                  <em>Select Account Type</em>\r\n                                </MenuItem>\r\n                                <MenuItem value='analyst'>Analyst</MenuItem>\r\n                                <MenuItem value='competitor'>\r\n                                  Competitor\r\n                                </MenuItem>\r\n                                <MenuItem value='customer'>Customer</MenuItem>\r\n                                <MenuItem value='distribtor'>\r\n                                  Distribtor\r\n                                </MenuItem>\r\n                                <MenuItem value='integrator'>\r\n                                  Integrator\r\n                                </MenuItem>\r\n                              </Select>\r\n                            </FormControl>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className='kt-portlet__head'>\r\n                        <div className='kt-portlet__head-label'>\r\n                          <h3 className='kt-portlet__head-title'>\r\n                            Address Info\r\n                          </h3>\r\n                        </div>\r\n                      </div>\r\n                      <div className='form-group mb-0'>\r\n                        <TextField\r\n                          margin='normal'\r\n                          label='Address Line'\r\n                          className='kt-width-full'\r\n                          name='addressLine'\r\n                          onBlur={handleBlur}\r\n                          onChange={handleChange}\r\n                          value={values.addressLine}\r\n                          helperText={touched.addressLine && errors.addressLine}\r\n                          error={Boolean(\r\n                            touched.addressLine && errors.addressLine\r\n                          )}\r\n                        />\r\n                      </div>\r\n                      <div className='row'>\r\n                        <div className='col-md-6'>\r\n                          <FormControl className={classes.formControl}>\r\n                            <InputLabel id='labelCountry'>Country</InputLabel>\r\n                            <Select\r\n                              labelId='labelCountry'\r\n                              name='country'\r\n                              value={country}\r\n                              onChange={selectCountryHandleChange}\r\n                            >\r\n                              <MenuItem value=''>\r\n                                <em>Select Country</em>\r\n                              </MenuItem>\r\n                            </Select>\r\n                          </FormControl>\r\n\r\n                          <FormControl className={classes.formControl}>\r\n                            <InputLabel id='labelState'>State</InputLabel>\r\n                            <Select\r\n                              labelId='labelState'\r\n                              name='state'\r\n                              value={state}\r\n                              onChange={selectStateHandleChange}\r\n                            >\r\n                              <MenuItem value=''>\r\n                                <em>Select State</em>\r\n                              </MenuItem>\r\n                            </Select>\r\n                          </FormControl>\r\n                        </div>\r\n\r\n                        <div className='col-md-6'>\r\n                          <div className='form-group mb-0'>\r\n                            <FormControl className={classes.formControl}>\r\n                              <InputLabel id='labelCity'>City</InputLabel>\r\n                              <Select\r\n                                labelId='labelCity'\r\n                                name='city'\r\n                                value={city}\r\n                                onChange={selectCityHandleChange}\r\n                              >\r\n                                <MenuItem value=''>\r\n                                  <em>Select City</em>\r\n                                </MenuItem>\r\n                              </Select>\r\n                            </FormControl>\r\n                          </div>\r\n\r\n                          <div className='form-group mb-0'>\r\n                            <TextField\r\n                              margin='normal'\r\n                              label='Zip Code'\r\n                              className='kt-width-full'\r\n                              name='zipCode'\r\n                              onBlur={handleBlur}\r\n                              onChange={handleChange}\r\n                              value={values.zipCode}\r\n                              helperText={touched.zipCode && errors.zipCode}\r\n                              error={Boolean(touched.zipCode && errors.zipCode)}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className='kt-portlet__body'>\r\n                      <div className='form-actions'>\r\n                        <button\r\n                          disabled={isSubmitting || !values.acceptTerms}\r\n                          className='btn btn-primary btn-elevate'\r\n                        >\r\n                          Register\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(RegisterComponent));\r\n","import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nconst ModalContainer = props => {\r\n  return (\r\n    <div>\r\n      <Modal\r\n        dialogClassName='modal-90w'\r\n        show={props.handleOpen}\r\n        onHide={props.handleClose}\r\n        size={props.modalSize}\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{props.modalTitle}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {props.modalBody}\r\n          {props.modalFooter}\r\n        </Modal.Body>\r\n        {/* <Modal.Footer></Modal.Footer> */}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalContainer;\r\n","import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import { Modal } from 'react-bootstrap';\r\n// import Button from '@material-ui/core/Button';\r\n\r\nclass CrudButtonOPtions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleButton1 = this.handleButton1.bind(this);\r\n    this.handleButton2 = this.handleButton2.bind(this);\r\n    let button1 = this.props.buttonDisplayType;\r\n    let button2 = 'CLOSE';\r\n    let displayButton1 = 'block';\r\n    if (this.props.buttonDisplayType === 'DELETE') {\r\n      button1 = 'YES';\r\n      button2 = 'NO';\r\n    }\r\n\r\n    if (this.props.buttonDisplayType === 'DETAILS') {\r\n      displayButton1 = 'none';\r\n    }\r\n\r\n    this.state = {\r\n      labelButton1: button1,\r\n      labelButton2: button2,\r\n      showButton1: displayButton1\r\n    };\r\n  }\r\n\r\n  handleButton1(event) {\r\n    this.props.handleButton1();\r\n  }\r\n\r\n  handleButton2() {\r\n    this.props.handleButton2();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <button\r\n          className='btn btn-primary btn-elevate'\r\n          onClick={this.handleButton1.bind(this)}\r\n          style={{ display: this.state.showButton1 }}\r\n        >\r\n          {this.state.labelButton1}\r\n        </button>\r\n        {/* <button className=\"btn btn-danger btn-elevate\" \r\n                onClick={this.handleButton2   .bind(this)}\r\n        >\r\n          {this.state.labelButton2}\r\n        </button> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CrudButtonOPtions;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport MaterialTable from 'material-table';\r\n//import LeadSourceDropdown from '../../../../partials/shared/LeadSourceDropDown';\r\nimport {\r\n  getLeadsList,\r\n  registerLead,\r\n  updateLead,\r\n  deleteLead\r\n} from '../../../../services/leads.service';\r\nimport { getLeadSourceList } from '../../../../services/leadSource.service';\r\nimport { Button, CircularProgress } from '@material-ui/core';\r\n// import AddIcon from '@material-ui/icons/Add';\r\n// import IconButton from '@material-ui/core/IconButton';\r\nimport ModalContainer from '../../../../partials/shared/ModalContainer';\r\nimport InputfieldsContainer from './InputFieldsContainer';\r\nimport CrudButtonOPtions from '../../../../partials/shared/CrudButtonOptions';\r\n// import { Alert, AlertTitle } from '@material-ui/lab';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n// var selectedLeadSource = {};\r\nvar formData = {};\r\nconst ViewComponent = () => {\r\n  const [state, setState] = useState(0);\r\n  const [leadSource, setLeadSource] = useState(0);\r\n\r\n  const userData = useSelector(state => state.auth.user);\r\n\r\n  // const handleSelectLeadSource = (leadSource) => {\r\n  //   setLeadSource({leadSourceId : leadSource.leadSourceId})\r\n  //   selectedLeadSource = leadSource;\r\n  // }\r\n  // for modal\r\n  const [show, setShow] = useState(false);\r\n  const [modalTitle, setModalTitle] = useState('');\r\n  const [modalBody, setModalBody] = useState('');\r\n  const [modalFooter, setModalFooter] = useState('');\r\n  const [modalSize, setModalSize] = useState('s');\r\n  // const [deleteId, setDeleteId] = useState(0);\r\n  const handleClose = () => setShow(false);\r\n\r\n  const [reRender, setRerender] = useState(false);\r\n\r\n  const notify = data => {\r\n    if (data.success) {\r\n      toast.success(data.message);\r\n    } else {\r\n      toast.error(data.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await getLeadsList();\r\n      const leadSourceList = await getLeadSourceList(\r\n        userData.mainRole.business.id\r\n      );\r\n      setLeadSource(leadSourceList.data);\r\n      setState({\r\n        columns: [\r\n          { title: 'Company name', field: 'companyName' },\r\n          { title: 'First name', field: 'firstName' },\r\n          { title: 'Last name', field: 'lastName' },\r\n          { title: 'Phone', field: 'phoneNumber' },\r\n          {\r\n            title: 'Action',\r\n            field: 'actions',\r\n            width: 200,\r\n            render: rowData => {\r\n              return (\r\n                <Row>\r\n                  <Col>\r\n                    <Button\r\n                      variant='contained'\r\n                      color='secondary'\r\n                      title={rowData.id}\r\n                      onClick={() => showUpdateModal(rowData.id)}\r\n                    >\r\n                      UPDATE\r\n                    </Button>\r\n                  </Col>\r\n                  <Col>\r\n                    <Button\r\n                      variant='contained'\r\n                      onClick={() => {\r\n                        deleteLead(rowData.id);\r\n                        setRerender(!reRender);\r\n                      }}\r\n                    >\r\n                      DELETE\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              );\r\n            }\r\n          }\r\n        ],\r\n        data: response.data\r\n      });\r\n    };\r\n    fetchData();\r\n  }, [reRender]);\r\n\r\n  const handleSave = () => {\r\n    if (formData !== {}) {\r\n      formData.businessId = userData.mainRole.business.id;\r\n\r\n      registerLead(formData)\r\n        .then(result => {\r\n          setRerender(!reRender);\r\n          setShow(false);\r\n          notify({ success: true, message: 'Success adding leads.' });\r\n        })\r\n        .catch(err => console.log(err));\r\n    } else {\r\n      setShow(false);\r\n    }\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    if (formData !== {}) {\r\n      updateLead(formData)\r\n        .then(result => {\r\n          setRerender(!reRender);\r\n          setShow(false);\r\n          notify({ success: true, message: 'Success updating leads.' });\r\n        })\r\n        .catch(err => console.log(err));\r\n    } else {\r\n      setShow(false);\r\n    }\r\n  };\r\n\r\n  // const handleDelete = () => {\r\n  //   console.log(deleteId);\r\n  //   deleteLead(deleteId).then(result => {\r\n  //     setRerender(!reRender);\r\n  //     setShow(false);\r\n  //     notify({ success: true, message: 'Success deleting leads.' });\r\n  //   });\r\n  // };\r\n\r\n  const handleChange = newData => {\r\n    formData = newData;\r\n  };\r\n\r\n  const showAddModal = () => {\r\n    formData = {};\r\n    setShow(true);\r\n    setModalSize('lg');\r\n    setModalTitle('Add Lead');\r\n    setModalBody(\r\n      <InputfieldsContainer\r\n        modalType='add'\r\n        getFormData={handleChange}\r\n        businessId={userData.mainRole.business.id}\r\n        leadSource={leadSource}\r\n      />\r\n    );\r\n    setModalFooter(\r\n      <CrudButtonOPtions\r\n        buttonDisplayType='CONFIRM'\r\n        handleButton1={handleSave}\r\n        handleButton2={handleClose}\r\n      />\r\n    );\r\n  };\r\n\r\n  const showUpdateModal = leadsourceId => {\r\n    formData = {};\r\n    setShow(true);\r\n    setModalSize('lg');\r\n    setModalTitle('Update Lead');\r\n    setModalBody(\r\n      <InputfieldsContainer\r\n        modalType='add'\r\n        getFormData={handleChange}\r\n        leadsourceId={leadsourceId}\r\n        leadSource={leadSource}\r\n      />\r\n    );\r\n    setModalFooter(\r\n      <CrudButtonOPtions\r\n        buttonDisplayType='UPDATE'\r\n        handleButton1={handleUpdate}\r\n        handleButton2={handleClose}\r\n      />\r\n    );\r\n  };\r\n\r\n  const showLeadDetailModal = leadsourceId => {\r\n    formData = {};\r\n    setShow(true);\r\n    setModalSize('lg');\r\n    setModalTitle('Details Lead');\r\n    setModalBody(\r\n      <InputfieldsContainer\r\n        modalType='details'\r\n        getFormData={handleChange}\r\n        leadsourceId={leadsourceId}\r\n        leadSource={leadSource}\r\n      />\r\n    );\r\n    setModalFooter(\r\n      <CrudButtonOPtions\r\n        buttonDisplayType='DETAILS'\r\n        handleButton1={''}\r\n        handleButton2={handleClose}\r\n      />\r\n    );\r\n  };\r\n\r\n  // const showDeleteModal = () => {\r\n  //   setShow(true);\r\n  //   setModalSize('lg');\r\n  //   setModalTitle('Delete Lead');\r\n\r\n  //   setModalBody(\r\n  //     <Alert severity='warning'>\r\n  //       <AlertTitle>Warning</AlertTitle>\r\n  //       Are you sure do you want do delete?\r\n  //     </Alert>\r\n  //   );\r\n  //   setModalFooter(\r\n  //     <CrudButtonOPtions\r\n  //       buttonDisplayType='DELETE'\r\n  //       handleButton1={handleDelete}\r\n  //       handleButton2={handleClose}\r\n  //     />\r\n  //   );\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      {state.data ? (\r\n        <>\r\n          <Button\r\n            className='mb-2'\r\n            variant='contained'\r\n            color='secondary'\r\n            size='large'\r\n            onClick={showAddModal}\r\n          >\r\n            Add\r\n          </Button>\r\n          <MaterialTable\r\n            title='Leads'\r\n            columns={state.columns}\r\n            data={state.data}\r\n          />\r\n          <ModalContainer\r\n            handleClose={handleClose}\r\n            handleOpen={show}\r\n            modalSize={modalSize}\r\n            modalTitle={modalTitle}\r\n            modalBody={modalBody}\r\n            modalFooter={modalFooter}\r\n          />\r\n        </>\r\n      ) : (\r\n        <div align='center'>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewComponent;\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport CreateComponent from './components/RegisterComponent';\r\nimport ViewComponent from './components/ViewComponent';\r\n\r\nexport default function Leads() {\r\n    return (\r\n        <Switch>\r\n            <Redirect exact={true} from=\"/\" to=\"/leads\"/>\r\n            <Route path=\"/leads/register\" component={CreateComponent} />\r\n            <Route path=\"/leads\" component={ViewComponent} />\r\n        </Switch>\r\n    )\r\n}"],"sourceRoot":""}