{"version":3,"sources":["app/services/leadSource.service.js","app/services/leadStatus.service.js","app/partials/shared/LeadSourceDropDown.js","app/services/leads.service.js","app/partials/shared/LeadStatusDropDown.js","app/pages/home/leads/components/InputFieldsContainer.js","../node_modules/antd/es/divider/index.js","app/pages/home/scheduled-calls/components/viewScheduledCalls.js","app/services/twilio.service.js","app/pages/home/scheduled-calls/ScheduledCalls.js"],"names":["ROOT_URL","process","getLeadSourceList","axios","get","addLeadSource","data","post","updateLeadSource","patch","deleteLeadSource","id","delete","assignLeadSource","getLeadSourceUsers","getLeadStatus","businessId","addLeadStatus","updateLeadStatus","deleteLeadStatus","LeadSourceDropDown","props","handleSelectLeadSource","bind","state","leadData","leadSourceId","currentLeadSource","this","getLeadsSource","setState","then","results","catch","err","console","log","event","target","value","getSelectedLeadSource","margin","variant","style","width","labelId","onChange","label","name","map","key","leadSourceName","React","Component","getLeadsList","getLeadsDetails","leadId","registerLead","lead","updateLead","deleteLead","LeadStatusDropDown","getLeadStatusList","a","leadStatus","leadStatusList","handleSelectLeadStatus","leadStatusId","currentLeadStatus","listStatusList","getSelectedLeadStatus","FormControl","InputLabel","Select","MenuItem","leadStatusName","InputFieldsContainer","defaultReceiveDate","Date","firstName","companyName","ssn","equiment","email","phone","description","lastName","receivedDate","estimatedtBilling","isdcode","mobile","note","toISOString","handleChange","handleReceivedDate","leadsourceId","modalType","keyName","getFormData","autoComplete","className","TextField","fullWidth","InputLabelProps","shrink","size","paddingTop","paddingBottom","multiline","rows","marginBottom","utils","DateFnsUtils","format","KeyboardButtonProps","type","number","_extends","Object","assign","i","arguments","length","source","prototype","hasOwnProperty","call","apply","_defineProperty","obj","defineProperty","enumerable","configurable","writable","__rest","s","e","t","p","indexOf","getOwnPropertySymbols","propertyIsEnumerable","_ref","_classNames","getPrefixCls","customizePrefixCls","prefixCls","_props$type","_props$orientation","orientation","children","dashed","restProps","orientationPrefix","concat","classString","role","ViewScheduledCalls","useState","dialpadOpen","setDialpadOpen","dial","setDial","handleDial","persist","innerText","callNumber","message","phoneNo","voiceMessage","res","Modal","dialogClassName","show","onHide","Header","closeButton","Title","Body","Row","Col","xs","bodyStyle","padding","block","onClick","md","newData","color","Accounts","exact","from","to","path","component"],"mappings":"kGAAA,iOAEaA,EAAWC,8DAKjB,SAASC,IACd,OAAOC,IAAMC,IAAN,UAAaJ,EAAb,YALsB,0BAQxB,SAASK,EAAcC,GAC5B,OAAOH,IAAMI,KAAN,UAAcP,EAAd,YATsB,yBASuBM,GAG/C,SAASE,EAAiBF,GAC/B,OAAOH,IAAMM,MAAN,UAAeT,EAAf,YAbsB,yBAawBM,GAGhD,SAASI,EAAiBC,GAC/B,OAAOR,IAAMS,OAAN,UAAgBZ,EAAhB,YAjBsB,wBAiBtB,YAA+CW,IAGjD,SAASE,EAAiBP,GAC/B,OAAOH,IAAMI,KAAN,UAAcP,EAAd,YApB6B,gCAoBuBM,GAGtD,SAASQ,EAAmBH,GACjC,OAAOR,IAAMC,IAAN,UAAaJ,EAAb,YAvB2B,8BAuB3B,YAAiDW,M,kCC5B1D,6JAEaX,EAAWC,8DAGjB,SAASc,EAAcC,GAC5B,OAAOb,IAAMC,IAAN,UAAaJ,EAAb,YAHsB,wBAGtB,YAA4CgB,IAG9C,SAASC,EAAcX,GAC5B,OAAOH,IAAMI,KAAN,UAAcP,EAAd,YAPsB,yBAOuBM,GAG/C,SAASY,EAAiBZ,GAC/B,OAAOH,IAAMM,MAAN,UAAeT,EAAf,YAXsB,yBAWwBM,GAGhD,SAASa,EAAiBR,GAC/B,OAAOR,IAAMS,OAAN,UAAgBZ,EAAhB,YAfsB,wBAetB,YAA+CW,M,6ICblDS,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,uBAAyB,EAAKA,uBAAuBC,KAA5B,gBAC9B,EAAKC,MAAQ,CACXC,SAAU,GACVC,aAAc,EAAKL,MAAMM,kBAAkBD,cAL5B,E,gEAUjBE,KAAKC,iBACLD,KAAKE,SAAS,CAAEJ,aAAcE,KAAKP,MAAMM,kBAAkBD,iB,uCAG3C,IAAD,OACfxB,cACG6B,MAAK,SAACC,GAAD,OAAa,EAAKF,SAAS,CAAEL,SAAUO,EAAQ1B,UACpD2B,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,Q,6CAGTG,GACrBT,KAAKE,SAAS,CAAEJ,aAAcW,EAAMC,OAAOC,QAC3CX,KAAKP,MAAMmB,sBAAsBH,EAAMC,OAAOC,S,+BAI9C,OACE,kBAAC,IAAD,CAAaE,OAAO,QAAQC,QAAQ,WAAWC,MAAO,CAAEC,MAAO,SAC7D,kBAAC,IAAD,CAAYjC,GAAG,mBAAf,eACA,kBAAC,IAAD,CACEkC,QAAQ,kBACRN,MAAOX,KAAKP,MAAMM,kBAAkBD,aACpCoB,SAAUlB,KAAKN,uBAAuBC,KAAKK,MAC3CmB,MAAM,cACNC,KAAK,gBAEL,kBAAC,IAAD,KACE,mDAEDb,QAAQC,IAAIR,KAAKJ,MAAMC,UACvBG,KAAKJ,MAAMC,SAASwB,KAAI,SAACV,GAAD,OACvB,kBAAC,IAAD,CAAUW,IAAKX,EAAM5B,GAAI4B,MAAOA,EAAM5B,IACnC4B,EAAMY,yB,GA3CYC,IAAMC,WAoDxBjC,O,kCCzDf,+LAEapB,EAAWC,8DAIjB,SAASqD,IACd,OAAOnD,IAAMC,IAAN,UAAaJ,EAAb,YAH6B,uBAM/B,SAASuD,EAAgBC,GAC9B,OAAOrD,IAAMC,IAAN,UAAaJ,EAAb,YARe,WAQf,YAAqCwD,IAIvC,SAASC,EAAcC,GAC5B,OAAOvD,IAAMI,KAAN,UAAcP,EAAd,YAbe,YAauB0D,GAGxC,SAASC,EAAWD,GACzB,OAAOvD,IAAMM,MAAN,UAAeT,EAAf,YAjBe,YAiBwB0D,GAGzC,SAASE,EAAWjD,GACzB,OAAOR,IAAMS,OAAN,UAAgBZ,EAAhB,YArBe,WAqBf,YAAwCW,M,iMC4ClCkD,E,kDA9Db,WAAYxC,GAAQ,IAAD,8BACjB,cAAMA,IASRyC,kBAVmB,sBAUC,4BAAAC,EAAA,sEACOhD,YAAc,EAAKM,MAAML,YADhC,OACZgD,EADY,OAElB,EAAKlC,SAAS,CACZmC,eAAgBD,EAAW1D,OAHX,2CARlB,EAAK4D,uBAAyB,EAAKA,uBAAuB3C,KAA5B,gBAC9B,EAAKC,MAAQ,CACXC,SAAU,GACV0C,aAAc,EAAK9C,MAAM+C,kBAAkBD,aAC3CE,eAAgB,IAND,E,gEAmBjBzC,KAAKE,SAAS,CAAEqC,aAAcvC,KAAKP,MAAM+C,kBAAkBD,eAC3DvC,KAAKkC,sB,6CASgBzB,GACrBT,KAAKE,SAAS,CAAEqC,aAAc9B,EAAMC,OAAOC,QAC3CX,KAAKP,MAAMiD,sBAAsBjC,EAAMC,OAAOC,S,+BAEtC,IAAD,IACP,OACE,kBAACgC,EAAA,EAAD,CAAa9B,OAAO,QAAQC,QAAQ,WAAWC,MAAO,CAAEC,MAAO,SAC7D,kBAAC4B,EAAA,EAAD,CAAY7D,GAAG,mBAAf,eACA,kBAAC8D,EAAA,EAAD,CACE5B,QAAQ,kBACRN,MAAOX,KAAKP,MAAM+C,kBAAkBD,aACpCrB,SAAUlB,KAAKsC,uBAAuB3C,KAAKK,MAC3CmB,MAAM,cACNC,KAAK,gBAEL,kBAAC0B,EAAA,EAAD,CAAUnC,MAAM,KACd,mDARJ,UAcGX,KAAKJ,aAdR,iBAcG,EAAYyC,sBAdf,aAcG,EAA4BhB,KAAI,SAACV,GAAD,OAC/B,kBAACmC,EAAA,EAAD,CAAUxB,IAAKX,EAAM5B,GAAI4B,MAAOA,EAAM5B,IACnC4B,EAAMoC,yB,GAtDYvB,IAAMC,W,oCCkBjCuB,E,kDACJ,WAAYvD,GAAQ,IAAD,sBACjB,cAAMA,GACN,IAAIwD,EAAqB,IAAIC,KAFZ,OAGjB,EAAKtD,MAAL,aACEuD,UAAW,GACXrD,aAAc,eACdsD,YAAa,GACbC,IAAK,GACLC,SAAU,GACVC,MAAO,GACPC,MAAO,GACPC,YAAa,GACbC,SAAU,GACVC,aAAc,GACdpB,aAAc,eACdqB,kBAAmB,GACnBC,QAAS,GACTC,OAAQ,GACRC,KAAM,IAfR,eAgBgBd,EAAmBe,eAGnC,EAAKC,aAAe,EAAKA,aAAatE,KAAlB,gBACpB,EAAKuE,mBAAqB,EAAKA,mBAAmBvE,KAAxB,gBAC1B,EAAKD,uBAAyB,EAAKA,uBAAuBC,KAA5B,gBAC9B,EAAK2C,uBAAyB,EAAKA,uBAAuB3C,KAA5B,gBAzBb,E,gEA4BE,IAAD,OACdiC,EAAS5B,KAAKP,MAAM0E,aAED,qBAAZvC,GACTD,YAAgBC,GACbzB,MAAK,SAAAC,GACJ,IAAIP,EAAWO,EAAQ1B,KACvB,EAAKwB,SAASL,MAEfQ,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,mCAInBG,GACX,GAA6B,YAAzBT,KAAKP,MAAM2E,UAAyB,CACtC,IAAIC,EAAU5D,EAAMC,OAAOU,KACvB1C,EAAOsB,KAAKJ,MAChBlB,EAAK2F,GAAW5D,EAAMC,OAAOC,MAE7BX,KAAKE,SAASxB,GACdsB,KAAKP,MAAM6E,YAAY5F,M,yCAIRiF,GACjB,GAA6B,YAAzB3D,KAAKP,MAAM2E,UAAyB,CACtC,IAAI1F,EAAOsB,KAAKJ,MAChBlB,EAAKiF,aAAeA,EAAaK,cACjChE,KAAKE,SAASxB,GACdsB,KAAKP,MAAM6E,YAAY5F,M,6CAIJoB,GACrB,GAA6B,YAAzBE,KAAKP,MAAM2E,UAAyB,CACtC,IAAI1F,EAAOsB,KAAKJ,MAChBlB,EAAKoB,aAAeA,EACpBE,KAAKE,SAASxB,GACdsB,KAAKP,MAAM6E,YAAY5F,M,6CAIJ6D,GACrB,GAA6B,YAAzBvC,KAAKP,MAAM2E,UAAyB,CACtC,IAAI1F,EAAOsB,KAAKJ,MAEhBI,KAAKE,SAASxB,GACdsB,KAAKP,MAAM6E,YAAY5F,M,+BAKzB,OAGE,0BAAM6F,aAAa,OAEjB,yBAAKC,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,mBACb,kBAACC,EAAA,EAAD,CACE5D,OAAO,SACPM,MAAM,aACNL,QAAQ,WACR0D,UAAU,gBACVpD,KAAK,YACLT,MAAOX,KAAKJ,MAAMuD,UAClBjC,SAAUlB,KAAKiE,aACfS,WAAW,EACXC,gBAAiB,CACfC,QAAQ,GAEVC,KAAK,WAIT,yBACEL,UAAU,kBACVzD,MAAO,CAAE+D,WAAY,OAAQC,cAAe,QAE5C,kBAAC,IAAD,CACEhF,kBAAmB,CACjBD,aAAcE,KAAKJ,MAAME,cAE3Bc,sBAAuBZ,KAAKN,0BAIhC,yBAAK8E,UAAU,mBACb,kBAACC,EAAA,EAAD,CACE5D,OAAO,SACPM,MAAM,eACNL,QAAQ,WACR0D,UAAU,gBACVpD,KAAK,cACLT,MAAOX,KAAKJ,MAAMwD,YAClBlC,SAAUlB,KAAKiE,aACfS,WAAW,EACXC,gBAAiB,CACfC,QAAQ,GAEVC,KAAK,WAIT,yBAAKL,UAAU,mBACb,kBAACC,EAAA,EAAD,CACE5D,OAAO,SACPM,MAAM,MACNL,QAAQ,WACR0D,UAAU,gBACVpD,KAAK,MACLT,MAAOX,KAAKJ,MAAMyD,IAClBnC,SAAUlB,KAAKiE,aACfS,WAAW,EACXC,gBAAiB,CACfC,QAAQ,GAEVC,KAAK,WAIT,yBAAKL,UAAU,mBACb,kBAACC,EAAA,EAAD,CACE5D,OAAO,SACPM,MAAM,WACNL,QAAQ,WACR0D,UAAU,gBACVpD,KAAK,WACLT,MAAOX,KAAKJ,MAAM0D,SAClBpC,SAAUlB,KAAKiE,aACfS,WAAW,EACXC,gBAAiB,CACfC,QAAQ,GAEVC,KAAK,WAIT,yBAAKL,UAAU,mBACb,kBAACC,EAAA,EAAD,CACE5D,OAAO,SACPM,MAAM,QACNL,QAAQ,WACR0D,UAAU,gBACVpD,KAAK,QACLT,MAAOX,KAAKJ,MAAM2D,MAClBrC,SAAUlB,KAAKiE,aACfS,WAAW,EACXC,gBAAiB,CACfC,QAAQ,GAEVC,KAAK,WAIT,yBAAKL,UAAU,mBACb,kBAACC,EAAA,EAAD,CACE5D,OAAO,SACPM,MAAM,QACNL,QAAQ,WACR0D,UAAU,gBACVpD,KAAK,QACLT,MAAOX,KAAKJ,MAAM4D,MAClBtC,SAAUlB,KAAKiE,aACfS,WAAW,EACXC,gBAAiB,CACfC,QAAQ,GAEVC,KAAK,WAIT,yBAAKL,UAAU,mBACb,kBAACC,EAAA,EAAD,CACE5D,OAAO,SACPM,MAAM,cACNL,QAAQ,WACRkE,WAAS,EACTC,KAAK,IACLT,UAAU,gBACVpD,KAAK,cACLT,MAAOX,KAAKJ,MAAM6D,YAClBvC,SAAUlB,KAAKiE,aACfS,WAAW,EACXC,gBAAiB,CACfC,QAAQ,GAEVC,KAAK,YAKX,yBAAKL,UAAU,YACb,yBAAKA,UAAU,mBACb,kBAACC,EAAA,EAAD,CACE5D,OAAO,SACPM,MAAM,YACNL,QAAQ,WACR0D,UAAU,gBACVpD,KAAK,WACLT,MAAOX,KAAKJ,MAAM8D,SAClBxC,SAAUlB,KAAKiE,aACfS,WAAW,EACXC,gBAAiB,CACfC,QAAQ,GAEVC,KAAK,WAIT,kBAAClC,EAAA,EAAD,CAAa9B,OAAO,QAAQE,MAAO,CAAEC,MAAO,SAC1C,yBACEwD,UAAU,kBACVzD,MAAO,CACL+D,WAAY,MACZC,cAAe,MACfG,aAAc,QAGhB,kBAAC,IAAD,CAAyBC,MAAOC,WAC9B,kBAAC,IAAD,CACEvE,OAAO,SACP9B,GAAG,eACHqC,KAAK,eACLD,MAAM,oBACNkE,OAAO,aACP1E,MAAOX,KAAKJ,MAAM+D,aAClBzC,SAAUlB,KAAKkE,mBACfoB,oBAAqB,CACnB,aAAc,eAEhBvE,MAAO,CAAE+D,WAAY,MAAOC,cAAe,aAMnD,yBACEP,UAAU,kBACVzD,MAAO,CAAE+D,WAAY,MAAOC,cAAe,QAE3C,kBAAC,EAAD,CACEvC,kBAAmB,CACjBD,aAAcvC,KAAKJ,MAAM2C,cAE3BG,sBAAuB1C,KAAKsC,uBAC5BlD,WAAYY,KAAKP,MAAML,cAI3B,yBAAKoF,UAAU,mBACb,kBAACC,EAAA,EAAD,CACE5D,OAAO,SACPM,MAAM,qBACNL,QAAQ,WACR0D,UAAU,gBACVpD,KAAK,eACLmE,KAAK,SACL5E,MAAOX,KAAKJ,MAAM4F,OAClBtE,SAAUlB,KAAKiE,aACfS,WAAW,EACXC,gBAAiB,CACfC,QAAQ,GAEVC,KAAK,WAIT,yBAAKL,UAAU,mBACb,kBAACC,EAAA,EAAD,CACE5D,OAAO,SACPM,MAAM,oBACNL,QAAQ,WACR0D,UAAU,gBACVpD,KAAK,oBACLT,MAAOX,KAAKJ,MAAMgE,kBAClB1C,SAAUlB,KAAKiE,aACfS,WAAW,EACXC,gBAAiB,CACfC,QAAQ,GAEVC,KAAK,WAIT,yBAAKL,UAAU,mBACb,kBAACC,EAAA,EAAD,CACE5D,OAAO,SACPM,MAAM,WACNL,QAAQ,WACR0D,UAAU,gBACVpD,KAAK,UACLT,MAAOX,KAAKJ,MAAMiE,QAClB3C,SAAUlB,KAAKiE,aACfS,WAAW,EACXC,gBAAiB,CACfC,QAAQ,GAEVC,KAAK,WAIT,yBAAKL,UAAU,mBACb,kBAACC,EAAA,EAAD,CACE5D,OAAO,SACPM,MAAM,WACNL,QAAQ,WACR0D,UAAU,gBACVpD,KAAK,SACLT,MAAOX,KAAKJ,MAAMkE,OAClB5C,SAAUlB,KAAKiE,aACfS,WAAW,EACXC,gBAAiB,CACfC,QAAQ,GAEVC,KAAK,WAIT,yBAAKL,UAAU,mBACb,kBAACC,EAAA,EAAD,CACE5D,OAAO,SACPM,MAAM,QACNL,QAAQ,WACRkE,WAAS,EACTC,KAAK,IACLT,UAAU,gBACVpD,KAAK,OACLT,MAAOX,KAAKJ,MAAMmE,KAClB7C,SAAUlB,KAAKiE,aACfS,WAAW,EACXC,gBAAiB,CACfC,QAAQ,GAEVC,KAAK,kB,GA5WcrD,IAAMC,WAyX1BuB,O,mLChZf,SAASyC,IAeP,OAdAA,EAAWC,OAAOC,QAAU,SAAUjF,GACpC,IAAK,IAAIkF,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAASF,UAAUD,GAEvB,IAAK,IAAItE,KAAOyE,EACVL,OAAOM,UAAUC,eAAeC,KAAKH,EAAQzE,KAC/CZ,EAAOY,GAAOyE,EAAOzE,IAK3B,OAAOZ,IAGOyF,MAAMnG,KAAM6F,WAG9B,SAASO,EAAgBC,EAAK/E,EAAKX,GAYjC,OAXIW,KAAO+E,EACTX,OAAOY,eAAeD,EAAK/E,EAAK,CAC9BX,MAAOA,EACP4F,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZJ,EAAI/E,GAAOX,EAGN0F,EAGT,IAAIK,EAAgC,SAAUC,EAAGC,GAC/C,IAAIC,EAAI,GAER,IAAK,IAAIC,KAAKH,EACRjB,OAAOM,UAAUC,eAAeC,KAAKS,EAAGG,IAAMF,EAAEG,QAAQD,GAAK,IAAGD,EAAEC,GAAKH,EAAEG,IAG/E,GAAS,MAALH,GAAqD,oBAAjCjB,OAAOsB,sBAA2C,KAAIpB,EAAI,EAAb,IAAgBkB,EAAIpB,OAAOsB,sBAAsBL,GAAIf,EAAIkB,EAAEhB,OAAQF,IAClIgB,EAAEG,QAAQD,EAAElB,IAAM,GAAKF,OAAOM,UAAUiB,qBAAqBf,KAAKS,EAAGG,EAAElB,MAAKiB,EAAEC,EAAElB,IAAMe,EAAEG,EAAElB,KAEhG,OAAOiB,GAoCM,EA7BD,SAAiBpH,GAC7B,OAAoB,gBAAoB,IAAgB,MAAM,SAAUyH,GACtE,IAAIC,EAEAC,EAAeF,EAAKE,aAEpBC,EAAqB5H,EAAM6H,UAC3BC,EAAc9H,EAAM8F,KACpBA,OAAuB,IAAhBgC,EAAyB,aAAeA,EAC/CC,EAAqB/H,EAAMgI,YAC3BA,OAAqC,IAAvBD,EAAgC,SAAWA,EACzDhD,EAAY/E,EAAM+E,UAClBkD,EAAWjI,EAAMiI,SACjBC,EAASlI,EAAMkI,OACfC,EAAYlB,EAAOjH,EAAO,CAAC,YAAa,OAAQ,cAAe,YAAa,WAAY,WAExF6H,EAAYF,EAAa,UAAWC,GACpCQ,EAAoBJ,EAAY3B,OAAS,EAAI,IAAIgC,OAAOL,GAAeA,EACvEM,EAAc,IAAWvD,EAAW8C,EAAW,GAAGQ,OAAOR,EAAW,KAAKQ,OAAOvC,IAA0Ba,EAAlBe,EAAc,GAAiC,GAAGW,OAAOR,EAAW,cAAcQ,OAAOD,GAAoBH,GAAWtB,EAAgBe,EAAa,GAAGW,OAAOR,EAAW,aAAcK,GAASR,IAC7R,OAAoB,gBAAoB,MAAO1B,EAAS,CACtDjB,UAAWuD,GACVH,EAAW,CACZI,KAAM,cACJN,GAAyB,gBAAoB,OAAQ,CACvDlD,UAAW,GAAGsD,OAAOR,EAAW,gBAC/BI,Q,2BC1DP,IA2OeO,EA3OY,SAACxI,GAAW,IAAD,EACEyI,oBAAS,GADX,mBAC7BC,EAD6B,KAChBC,EADgB,OAEZF,mBAAS,IAFG,mBAE7BG,EAF6B,KAEvBC,EAFuB,KAY9BC,EAAa,SAAC3B,GAClBA,EAAE4B,UACEH,EAAKvC,QAAU,IACnBwC,EAAQD,EAAOzB,EAAElG,OAAO+H,YAOpBC,EAAU,uCAAG,4BAAAvG,EAAA,6DACjB5B,QAAQC,IAAI,UAAW6H,GADN,SClCY7E,EDoCM6E,ECpCCM,EDoCK,UCnCpCpK,IAAMI,KAAN,UAJeN,8DAIf,YAHsB,wBAGuB,CAClDuK,QAASpF,EACTqF,aAAcF,ID+BG,OAEXG,EAFW,OAGjBvI,QAAQC,IAAIsI,GAHK,iCClCd,IAA0BtF,EAAOmF,IDkCnB,OAAH,qDAMhB,OACE,oCACE,kBAACI,EAAA,EAAD,CACElE,KAAK,KACLmE,gBAAgB,YAChBC,KAAMd,EACNe,OA1Bc,WAClBd,GAAe,KA4BX,kBAACW,EAAA,EAAMI,OAAP,CAAcC,aAAW,GACvB,kBAACL,EAAA,EAAMM,MAAP,iBAEF,kBAACN,EAAA,EAAMO,KAAP,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACP,kBAAC,IAAD,CAAMC,UAAW,CAAEC,QAAS,IAC1B,4BAAKtB,KAGT,kBAACmB,EAAA,EAAD,CAAKC,GAAI,IACP,8BAEF,kBAACD,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,IAAD,CAAQ5E,KAAK,QAAQ+E,OAAK,EAACC,QAAStB,GAApC,MAIF,kBAACiB,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,IAAD,CAAQ5E,KAAK,QAAQ+E,OAAK,EAACC,QAAStB,GAApC,MAIF,kBAACiB,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,IAAD,CAAQ5E,KAAK,QAAQ+E,OAAK,EAACC,QAAStB,GAApC,MAIF,kBAACiB,EAAA,EAAD,CAAKC,GAAI,IACP,8BAEF,kBAACD,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,IAAD,CAAQ5E,KAAK,QAAQ+E,OAAK,EAACC,QAAStB,GAApC,MAIF,kBAACiB,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,IAAD,CAAQ5E,KAAK,QAAQ+E,OAAK,EAACC,QAAStB,GAApC,MAIF,kBAACiB,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,IAAD,CAAQ5E,KAAK,QAAQ+E,OAAK,EAACC,QAAStB,GAApC,MAIF,kBAACiB,EAAA,EAAD,CAAKC,GAAI,IACP,8BAEF,kBAACD,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,IAAD,CAAQ5E,KAAK,QAAQ+E,OAAK,EAACC,QAAStB,GAApC,MAIF,kBAACiB,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,IAAD,CAAQ5E,KAAK,QAAQ+E,OAAK,EAACC,QAAStB,GAApC,MAIF,kBAACiB,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,IAAD,CAAQ5E,KAAK,QAAQ+E,OAAK,EAACC,QAAStB,GAApC,MAIF,kBAACiB,EAAA,EAAD,CAAKC,GAAI,IACP,8BAEF,kBAACD,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,IAAD,CAAQ5E,KAAK,QAAQ+E,OAAK,EAACC,QAAStB,GAApC,MAIF,kBAACiB,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,IAAD,CAAQ5E,KAAK,QAAQ+E,OAAK,EAACC,QAAStB,GAApC,MAIF,kBAACiB,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,IAAD,CAAQ5E,KAAK,QAAQ+E,OAAK,EAACC,QAjGrB,WAChBvB,EAAQ,MAgGE,UAIF,kBAACkB,EAAA,EAAD,CAAKC,GAAI,IACP,8BAEF,kBAACD,EAAA,EAAD,CAAKC,GAAI,IACP,kBAAC,IAAD,CAAQ5E,KAAK,QAAQ+E,OAAK,EAACC,QAASnB,GAApC,YA+ER,kBAACa,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKM,GAAI,GACP,yBAAKtF,UAAU,QACb,kBAAC,IAAD,KACE,2CACA,kBAACxB,EAAA,EAAD,CAAsBsB,YA3Mb,SAACyF,GACTA,KA2MD,kBAAC,IAAD,CAAQC,MAAM,UAAd,WAIN,kBAACR,EAAA,EAAD,CAAKM,GAAI,GACP,kBAAC,EAAD,CAASvE,KAAK,cAEhB,kBAACiE,EAAA,EAAD,KACE,qCACA,yBAAKhF,UAAU,QACb,kBAAC,IAAD,iBAEE,6BACA,kBAAC,IAAD,uBAGJ,6BACA,yCACA,yBAAKA,UAAU,QACb,kBAAC,IAAD,qBEhPG,SAASyF,IACtB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUC,OAAO,EAAMC,KAAK,IAAIC,GAAG,qBACnC,kBAAC,IAAD,CAAOC,KAAK,mBAAmBC,UAAWrC,KARhD","file":"static/js/14.a2a7ce98.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const ROOT_URL = process.env.REACT_APP_API_URL;\r\nexport const LEAD_SOURCE_URL = 'api/config/leadsource';\r\nexport const ASSIGN_LEAD_SOURCE_URL = 'api/config/leadsource/assign';\r\nexport const LEAD_SOURCE_USER_URL = 'api/config/leadsource/users';\r\n\r\nexport function getLeadSourceList() {\r\n  return axios.get(`${ROOT_URL}/${LEAD_SOURCE_URL}`);\r\n}\r\n\r\nexport function addLeadSource(data) {\r\n  return axios.post(`${ROOT_URL}/${LEAD_SOURCE_URL}`, data);\r\n}\r\n\r\nexport function updateLeadSource(data) {\r\n  return axios.patch(`${ROOT_URL}/${LEAD_SOURCE_URL}`, data);\r\n}\r\n\r\nexport function deleteLeadSource(id) {\r\n  return axios.delete(`${ROOT_URL}/${LEAD_SOURCE_URL}/${id}`);\r\n}\r\n\r\nexport function assignLeadSource(data) {\r\n  return axios.post(`${ROOT_URL}/${ASSIGN_LEAD_SOURCE_URL}`, data);\r\n}\r\n\r\nexport function getLeadSourceUsers(id) {\r\n  return axios.get(`${ROOT_URL}/${LEAD_SOURCE_USER_URL}/${id}`);\r\n}\r\n","import axios from 'axios';\r\n\r\nexport const ROOT_URL = process.env.REACT_APP_API_URL;\r\nexport const LEAD_STATUS_URL = 'api/config/leadstatus';\r\n\r\nexport function getLeadStatus(businessId) {\r\n  return axios.get(`${ROOT_URL}/${LEAD_STATUS_URL}/${businessId}`);\r\n}\r\n\r\nexport function addLeadStatus(data) {\r\n  return axios.post(`${ROOT_URL}/${LEAD_STATUS_URL}`, data);\r\n}\r\n\r\nexport function updateLeadStatus(data) {\r\n  return axios.patch(`${ROOT_URL}/${LEAD_STATUS_URL}`, data);\r\n}\r\n\r\nexport function deleteLeadStatus(id) {\r\n  return axios.delete(`${ROOT_URL}/${LEAD_STATUS_URL}/${id}`);\r\n}\r\n","import React from 'react';\r\nimport { Select, MenuItem, InputLabel, FormControl } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { getLeadSourceList } from '../../services/leadSource.service';\r\n\r\nclass LeadSourceDropDown extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSelectLeadSource = this.handleSelectLeadSource.bind(this);\r\n    this.state = {\r\n      leadData: [],\r\n      leadSourceId: this.props.currentLeadSource.leadSourceId,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getLeadsSource();\r\n    this.setState({ leadSourceId: this.props.currentLeadSource.leadSourceId });\r\n  }\r\n\r\n  getLeadsSource() {\r\n    getLeadSourceList()\r\n      .then((results) => this.setState({ leadData: results.data }))\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  handleSelectLeadSource(event) {\r\n    this.setState({ leadSourceId: event.target.value });\r\n    this.props.getSelectedLeadSource(event.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <FormControl margin='dense' variant='outlined' style={{ width: '100%' }}>\r\n        <InputLabel id='labelLeadSource'>Lead Source</InputLabel>\r\n        <Select\r\n          labelId='labelLeadSource'\r\n          value={this.props.currentLeadSource.leadSourceId}\r\n          onChange={this.handleSelectLeadSource.bind(this)}\r\n          label='Lead Source'\r\n          name='leadSourceId'\r\n        >\r\n          <MenuItem>\r\n            <em>Select Lead Source</em>\r\n          </MenuItem>\r\n          {console.log(this.state.leadData)}\r\n          {this.state.leadData.map((value) => (\r\n            <MenuItem key={value.id} value={value.id}>\r\n              {value.leadSourceName}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LeadSourceDropDown;\r\n","import axios from \"axios\";\r\n\r\nexport const ROOT_URL = process.env.REACT_APP_API_URL;\r\nexport const LEAD_URL = \"api/lead\";\r\nexport const GET_LEAD_TABL_VIEW_URL = \"api/lead/tableview\";\r\n\r\nexport function getLeadsList() {\r\n  return axios.get(`${ROOT_URL}/${GET_LEAD_TABL_VIEW_URL}`);\r\n}\r\n\r\nexport function getLeadsDetails(leadId) {\r\n  return axios.get(`${ROOT_URL}/${LEAD_URL}/${leadId}`);\r\n}\r\n\r\n\r\nexport function registerLead (lead) {\r\n  return axios.post(`${ROOT_URL}/${LEAD_URL}`, lead);\r\n}\r\n\r\nexport function updateLead(lead) {\r\n  return axios.patch(`${ROOT_URL}/${LEAD_URL}`, lead);\r\n}\r\n\r\nexport function deleteLead(id){\r\n  return axios.delete(`${ROOT_URL}/${LEAD_URL}/${id}`);\r\n}\r\n","import React from 'react';\r\nimport { Select, MenuItem, InputLabel, FormControl } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { getLeadStatus } from '../../services/leadStatus.service';\r\n\r\nclass LeadStatusDropDown extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSelectLeadStatus = this.handleSelectLeadStatus.bind(this);\r\n    this.state = {\r\n      leadData: [],\r\n      leadStatusId: this.props.currentLeadStatus.leadStatusId,\r\n      listStatusList: [],\r\n    };\r\n  }\r\n\r\n  getLeadStatusList = async () => {\r\n    const leadStatus = await getLeadStatus(this.props.businessId);\r\n    this.setState({\r\n      leadStatusList: leadStatus.data,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // this.getLeadsSource();\r\n    this.setState({ leadStatusId: this.props.currentLeadStatus.leadStatusId });\r\n    this.getLeadStatusList();\r\n  }\r\n\r\n  // getLeadsSource() {\r\n  //     getLeadSourceList()\r\n  //         .then(results => this.setState({leadData : results.data}))\r\n  //         .catch(err => console.log(err))\r\n  // }\r\n\r\n  handleSelectLeadStatus(event) {\r\n    this.setState({ leadStatusId: event.target.value });\r\n    this.props.getSelectedLeadStatus(event.target.value);\r\n  }\r\n  render() {\r\n    return (\r\n      <FormControl margin='dense' variant='outlined' style={{ width: '100%' }}>\r\n        <InputLabel id='labelLeadStatus'>Lead Status</InputLabel>\r\n        <Select\r\n          labelId='labelLeadSource'\r\n          value={this.props.currentLeadStatus.leadStatusId}\r\n          onChange={this.handleSelectLeadStatus.bind(this)}\r\n          label='Lead Status'\r\n          name='leadStatusId'\r\n        >\r\n          <MenuItem value='0'>\r\n            <em>\r\n              Select Lead Status\r\n              {/* {!this.state?.leadStatusList ? 'Loading' : 'Select Lead Status'} */}\r\n            </em>\r\n          </MenuItem>\r\n\r\n          {this.state?.leadStatusList?.map((value) => (\r\n            <MenuItem key={value.id} value={value.id}>\r\n              {value.leadStatusName}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LeadStatusDropDown;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Switch,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl\r\n} from '@material-ui/core';\r\nimport LeadSourceDropdown from '../../../../partials/shared/LeadSourceDropDown';\r\nimport LeadStatusDropDown from '../../../../partials/shared/LeadStatusDropDown';\r\nimport { getLeadsDetails } from '../../../../services/leads.service';\r\n\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker\r\n} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nclass InputFieldsContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let defaultReceiveDate = new Date();\r\n    this.state = {\r\n      firstName: '',\r\n      leadSourceId: '4PDvakaYzWg.',\r\n      companyName: '',\r\n      ssn: '',\r\n      equiment: '',\r\n      email: '',\r\n      phone: '',\r\n      description: '',\r\n      lastName: '',\r\n      receivedDate: '',\r\n      leadStatusId: 'JR1zcprJkUs.',\r\n      estimatedtBilling: '',\r\n      isdcode: '',\r\n      mobile: '',\r\n      note: '',\r\n      receivedDate: defaultReceiveDate.toISOString()\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleReceivedDate = this.handleReceivedDate.bind(this);\r\n    this.handleSelectLeadSource = this.handleSelectLeadSource.bind(this);\r\n    this.handleSelectLeadStatus = this.handleSelectLeadStatus.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let leadId = this.props.leadsourceId;\r\n\r\n    if (typeof(leadId) !== 'undefined') {\r\n      getLeadsDetails(leadId)\r\n        .then(results => {\r\n          let leadData = results.data;\r\n          this.setState(leadData);\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    if (this.props.modalType !== 'details') {\r\n      let keyName = event.target.name;\r\n      let data = this.state;\r\n      data[keyName] = event.target.value;\r\n\r\n      this.setState(data);\r\n      this.props.getFormData(data);\r\n    }\r\n  }\r\n\r\n  handleReceivedDate(receivedDate) {\r\n    if (this.props.modalType !== 'details') {\r\n      let data = this.state;\r\n      data.receivedDate = receivedDate.toISOString();\r\n      this.setState(data);\r\n      this.props.getFormData(data);\r\n    }\r\n  }\r\n\r\n  handleSelectLeadSource(leadSourceId) {\r\n    if (this.props.modalType !== 'details') {\r\n      let data = this.state;\r\n      data.leadSourceId = leadSourceId;\r\n      this.setState(data);\r\n      this.props.getFormData(data);\r\n    }\r\n  }\r\n\r\n  handleSelectLeadStatus(leadStatusId) {\r\n    if (this.props.modalType !== 'details') {\r\n      let data = this.state;\r\n      //data.leadStatusId = leadStatusId;\r\n      this.setState(data);\r\n      this.props.getFormData(data);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      //   <div className='kt-container  kt-container--fluid  kt-grid__item kt-grid__item'>\r\n      //     <div className='kt-portlet'>\r\n      <form autoComplete='off'>\r\n        {/* <div className='kt-portlet__body'> */}\r\n        <div className='row'>\r\n          <div className='col-md-6'>\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='First name'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='firstName'\r\n                value={this.state.firstName}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div\r\n              className='form-group mb-0'\r\n              style={{ paddingTop: '16px', paddingBottom: '8px' }}\r\n            >\r\n              <LeadSourceDropdown\r\n                currentLeadSource={{\r\n                  leadSourceId: this.state.leadSourceId\r\n                }}\r\n                getSelectedLeadSource={this.handleSelectLeadSource}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-1'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Company Name'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='companyName'\r\n                value={this.state.companyName}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='SSN'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='ssn'\r\n                value={this.state.ssn}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Equiment'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='equiment'\r\n                value={this.state.equiment}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Email'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='email'\r\n                value={this.state.email}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Phone'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='phone'\r\n                value={this.state.phone}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Description'\r\n                variant='outlined'\r\n                multiline\r\n                rows='4'\r\n                className='kt-width-full'\r\n                name='description'\r\n                value={this.state.description}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className='col-md-6'>\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Last name'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='lastName'\r\n                value={this.state.lastName}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <FormControl margin='dense' style={{ width: '100%' }}>\r\n              <div\r\n                className='form-group mb-0'\r\n                style={{\r\n                  paddingTop: '0px',\r\n                  paddingBottom: '0px',\r\n                  marginBottom: '0px'\r\n                }}\r\n              >\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    margin='normal'\r\n                    id='receivedDate'\r\n                    name='receivedDate'\r\n                    label='Lead Receive Date'\r\n                    format='MM-dd-yyyy'\r\n                    value={this.state.receivedDate}\r\n                    onChange={this.handleReceivedDate}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date'\r\n                    }}\r\n                    style={{ paddingTop: '0px', paddingBottom: '0 px' }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </div>\r\n            </FormControl>\r\n\r\n            <div\r\n              className='form-group mb-0'\r\n              style={{ paddingTop: '0px', paddingBottom: '8px' }}\r\n            >\r\n              <LeadStatusDropDown\r\n                currentLeadStatus={{\r\n                  leadStatusId: this.state.leadStatusId\r\n                }}\r\n                getSelectedLeadStatus={this.handleSelectLeadStatus}\r\n                businessId={this.props.businessId}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Number of location'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='noOfLocation'\r\n                type='number'\r\n                value={this.state.number}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Estimated Billing'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='estimatedtBilling'\r\n                value={this.state.estimatedtBilling}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='ISD Code'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='isdcode'\r\n                value={this.state.isdcode}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='ISD Code'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='mobile'\r\n                value={this.state.mobile}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Notes'\r\n                variant='outlined'\r\n                multiline\r\n                rows='4'\r\n                className='kt-width-full'\r\n                name='note'\r\n                value={this.state.note}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* </div> */}\r\n      </form>\r\n      //     </div>\r\n      //   </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputFieldsContainer;\r\n","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\n\nvar Divider = function Divider(props) {\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (_ref) {\n    var _classNames;\n\n    var getPrefixCls = _ref.getPrefixCls;\n\n    var customizePrefixCls = props.prefixCls,\n        _props$type = props.type,\n        type = _props$type === void 0 ? 'horizontal' : _props$type,\n        _props$orientation = props.orientation,\n        orientation = _props$orientation === void 0 ? 'center' : _props$orientation,\n        className = props.className,\n        children = props.children,\n        dashed = props.dashed,\n        restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"className\", \"children\", \"dashed\"]);\n\n    var prefixCls = getPrefixCls('divider', customizePrefixCls);\n    var orientationPrefix = orientation.length > 0 ? \"-\".concat(orientation) : orientation;\n    var classString = classNames(className, prefixCls, \"\".concat(prefixCls, \"-\").concat(type), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\").concat(orientationPrefix), children), _defineProperty(_classNames, \"\".concat(prefixCls, \"-dashed\"), !!dashed), _classNames));\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: classString\n    }, restProps, {\n      role: \"separator\"\n    }), children && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-inner-text\")\n    }, children));\n  });\n};\n\nexport default Divider;","import React, { useState } from 'react';\r\nimport { Row, Col, Modal } from 'react-bootstrap';\r\nimport { Badge, Button, Divider, Card } from 'antd';\r\nimport {\r\n  UnorderedListOutlined,\r\n  TableOutlined,\r\n  UserOutlined,\r\n  UserAddOutlined,\r\n  PhoneOutlined,\r\n  SendOutlined,\r\n  MailOutlined,\r\n  AuditOutlined,\r\n} from '@ant-design/icons';\r\nimport PhoneControl from '../../../shared/PhoneControl';\r\nimport InputFieldsContainer from '../../leads/components/InputFieldsContainer';\r\nimport { sendVoiceMessage } from '../../../../services/twilio.service';\r\n\r\nconst ViewScheduledCalls = (props) => {\r\n  const [dialpadOpen, setDialpadOpen] = useState(false);\r\n  const [dial, setDial] = useState('');\r\n  var formData = {};\r\n  const handleChange = (newData) => {\r\n    formData = newData;\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setDialpadOpen(false);\r\n  };\r\n\r\n  const handleDial = (e) => {\r\n    e.persist();\r\n    if (dial.length >= 13) return;\r\n    setDial(dial + e.target.innerText);\r\n  };\r\n\r\n  const clearDial = () => {\r\n    setDial('');\r\n  };\r\n\r\n  const callNumber = async () => {\r\n    console.log('calling', dial);\r\n    const res = await sendVoiceMessage(dial, 'testing');\r\n    console.log(res);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size='sm'\r\n        dialogClassName='modal-90w'\r\n        show={dialpadOpen}\r\n        onHide={handleClose}\r\n        //centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Dialpad</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <Card bodyStyle={{ padding: 0 }}>\r\n                <h1>{dial}</h1>\r\n              </Card>\r\n            </Col>\r\n            <Col xs={12}>\r\n              <hr />\r\n            </Col>\r\n            <Col xs={4}>\r\n              <Button size='large' block onClick={handleDial}>\r\n                7\r\n              </Button>\r\n            </Col>\r\n            <Col xs={4}>\r\n              <Button size='large' block onClick={handleDial}>\r\n                8\r\n              </Button>\r\n            </Col>\r\n            <Col xs={4}>\r\n              <Button size='large' block onClick={handleDial}>\r\n                9\r\n              </Button>\r\n            </Col>\r\n            <Col xs={12}>\r\n              <hr />\r\n            </Col>\r\n            <Col xs={4}>\r\n              <Button size='large' block onClick={handleDial}>\r\n                4\r\n              </Button>\r\n            </Col>\r\n            <Col xs={4}>\r\n              <Button size='large' block onClick={handleDial}>\r\n                5\r\n              </Button>\r\n            </Col>\r\n            <Col xs={4}>\r\n              <Button size='large' block onClick={handleDial}>\r\n                6\r\n              </Button>\r\n            </Col>\r\n            <Col xs={12}>\r\n              <hr />\r\n            </Col>\r\n            <Col xs={4}>\r\n              <Button size='large' block onClick={handleDial}>\r\n                1\r\n              </Button>\r\n            </Col>\r\n            <Col xs={4}>\r\n              <Button size='large' block onClick={handleDial}>\r\n                2\r\n              </Button>\r\n            </Col>\r\n            <Col xs={4}>\r\n              <Button size='large' block onClick={handleDial}>\r\n                3\r\n              </Button>\r\n            </Col>\r\n            <Col xs={12}>\r\n              <hr />\r\n            </Col>\r\n            <Col xs={4}>\r\n              <Button size='large' block onClick={handleDial}>\r\n                +\r\n              </Button>\r\n            </Col>\r\n            <Col xs={4}>\r\n              <Button size='large' block onClick={handleDial}>\r\n                0\r\n              </Button>\r\n            </Col>\r\n            <Col xs={4}>\r\n              <Button size='large' block onClick={clearDial}>\r\n                Clear\r\n              </Button>\r\n            </Col>\r\n            <Col xs={12}>\r\n              <hr />\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Button size='large' block onClick={callNumber}>\r\n                CALL\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Modal.Body>\r\n      </Modal>\r\n      {/* <Row>\r\n        <Col md={4}>\r\n          <Row>\r\n            <Col md={8}>\r\n              <h5>\r\n                Outgoing Call <Badge status='error' />\r\n              </h5>\r\n              <h2>Derek</h2>\r\n              <Button>Scheduled Call</Button>\r\n            </Col>\r\n            <Col md={4}>\r\n              <PhoneControl label='Lead Details'>\r\n                <UnorderedListOutlined\r\n                  style={{ fontSize: 30, color: '#ccc' }}\r\n                />\r\n              </PhoneControl>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col md={1}>\r\n          <Divider type='vertical' />\r\n        </Col>\r\n        <Col md={3}>\r\n          <Row>\r\n            <Col>\r\n              <PhoneControl\r\n                label='Dial Pad'\r\n                onClick={() => setDialpadOpen(true)}\r\n              >\r\n                <TableOutlined style={{ fontSize: 30, color: '#ccc' }} />\r\n              </PhoneControl>\r\n            </Col>\r\n            <Col>\r\n              <PhoneControl label='Participant'>\r\n                <UserOutlined style={{ fontSize: 30, color: '#ccc' }} />\r\n              </PhoneControl>\r\n            </Col>\r\n            <Col>\r\n              <PhoneControl label='Add'>\r\n                <UserAddOutlined style={{ fontSize: 30, color: '#ccc' }} />\r\n              </PhoneControl>\r\n            </Col>\r\n            <Col>\r\n              <PhoneControl label='Hang Up'>\r\n                <PhoneOutlined style={{ fontSize: 30, color: '#ccc' }} />\r\n              </PhoneControl>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col md={1}>\r\n          <Divider type='vertical' />\r\n        </Col>\r\n        <Col md={3}>\r\n          <Row>\r\n            <Col>\r\n              <PhoneControl label='Send Bid'>\r\n                <SendOutlined style={{ fontSize: 30, color: '#ccc' }} />\r\n              </PhoneControl>\r\n            </Col>\r\n            <Col>\r\n              <PhoneControl label='Invoice'>\r\n                <MailOutlined style={{ fontSize: 30, color: '#ccc' }} />\r\n              </PhoneControl>\r\n            </Col>\r\n            <Col>\r\n              <PhoneControl label='Sale Ref'>\r\n                <AuditOutlined style={{ fontSize: 30, color: '#ccc' }} />\r\n              </PhoneControl>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row> */}\r\n      <Row>\r\n        <Col md={8}>\r\n          <div className='mt-3'>\r\n            <Card>\r\n              <h4>Lead Detail</h4>\r\n              <InputFieldsContainer getFormData={handleChange} />\r\n              <Button color='danger'>Save</Button>\r\n            </Card>\r\n          </div>\r\n        </Col>\r\n        <Col md={1}>\r\n          <Divider type='vertical' />\r\n        </Col>\r\n        <Col>\r\n          <h4>Files</h4>\r\n          <div className='mt-3'>\r\n            <Card>\r\n              image.jpg\r\n              <hr />\r\n              <Button>Upload files</Button>\r\n            </Card>\r\n          </div>\r\n          <br />\r\n          <h4>Call logs</h4>\r\n          <div className='mt-3'>\r\n            <Card>No Data</Card>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewScheduledCalls;\r\n","import axios from 'axios';\r\n\r\nexport const ROOT_URL = process.env.REACT_APP_API_URL;\r\nexport const TWILIO_CALL_API = 'api/twilio/voicecall';\r\n\r\nexport function sendVoiceMessage(phone, message) {\r\n  return axios.post(`${ROOT_URL}/${TWILIO_CALL_API}`, {\r\n    phoneNo: phone,\r\n    voiceMessage: message,\r\n  });\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport ViewScheduledCalls from './components/viewScheduledCalls';\r\n\r\nexport default function Accounts() {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact={true} from='/' to='/scheduled-calls' />\r\n      <Route path='/scheduled-calls' component={ViewScheduledCalls} />\r\n    </Switch>\r\n  );\r\n}\r\n"],"sourceRoot":""}