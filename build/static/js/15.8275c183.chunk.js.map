{"version":3,"sources":["app/services/leadSource.service.js","app/services/leadStatus.service.js","app/services/leads.service.js","app/partials/shared/LeadSourceDropDown.js","app/partials/shared/LeadStatusDropDown.js","app/pages/home/leads/components/InputFieldsContainer.js","app/pages/home/scheduled-calls/components/viewScheduledCalls.js","app/services/twilio.service.js","app/pages/home/scheduled-calls/ScheduledCalls.js"],"names":["ROOT_URL","process","getLeadSourceList","id","axios","get","addLeadSource","data","post","updateLeadSource","patch","deleteLeadSource","delete","assignLeadSource","getLeadSourceUsers","getLeadStatus","businessId","addLeadStatus","updateLeadStatus","deleteLeadStatus","getLeadsList","getLeadsDetails","leadId","registerLead","lead","updateLead","deleteLead","LeadSourceDropDown","props","handleSelectLeadSource","bind","state","leadData","leadSourceId","currentLeadSource","this","getLeadsSource","setState","console","log","then","results","catch","err","event","target","value","getSelectedLeadSource","FormControl","margin","variant","style","width","InputLabel","Select","labelId","onChange","label","name","MenuItem","map","key","leadSourceName","React","Component","connect","auth","user","mainRole","business","LeadStatusDropDown","getLeadStatusList","a","leadStatus","leadStatusList","handleSelectLeadStatus","leadStatusId","currentLeadStatus","listStatusList","getSelectedLeadStatus","leadStatusName","InputFieldsContainer","defaultReceiveDate","Date","firstName","companyName","ssn","equiment","email","phone","description","lastName","estimatedtBilling","isdcode","mobile","note","receivedDate","toISOString","handleChange","handleReceivedDate","leadsourceId","modalType","keyName","getFormData","autoComplete","className","TextField","fullWidth","InputLabelProps","shrink","size","paddingTop","paddingBottom","leadSource","multiline","rows","marginBottom","utils","DateFnsUtils","format","KeyboardButtonProps","type","number","ViewScheduledCalls","useState","dialpadOpen","setDialpadOpen","dial","setDial","handleDial","e","persist","length","innerText","callNumber","message","phoneNo","voiceMessage","res","Modal","dialogClassName","show","onHide","Header","closeButton","Title","Body","Row","Col","xs","bodyStyle","padding","block","onClick","md","newData","color","Accounts","exact","from","to","path","component"],"mappings":"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","file":"static/js/15.8275c183.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const ROOT_URL = process.env.REACT_APP_API_URL;\r\nexport const LEAD_SOURCE_URL = 'api/config/leadsource';\r\nexport const ASSIGN_LEAD_SOURCE_URL = 'api/config/leadsource/assign';\r\nexport const LEAD_SOURCE_USER_URL = 'api/config/leadsource/users';\r\n\r\nexport function getLeadSourceList(id) {\r\n  return axios.get(`${ROOT_URL}/${LEAD_SOURCE_URL}/${id}`);\r\n}\r\n\r\nexport function addLeadSource(data) {\r\n  return axios.post(`${ROOT_URL}/${LEAD_SOURCE_URL}`, data);\r\n}\r\n\r\nexport function updateLeadSource(data) {\r\n  return axios.patch(`${ROOT_URL}/${LEAD_SOURCE_URL}`, data);\r\n}\r\n\r\nexport function deleteLeadSource(id) {\r\n  return axios.delete(`${ROOT_URL}/${LEAD_SOURCE_URL}/${id}`);\r\n}\r\n\r\nexport function assignLeadSource(data) {\r\n  return axios.post(`${ROOT_URL}/${ASSIGN_LEAD_SOURCE_URL}`, data);\r\n}\r\n\r\nexport function getLeadSourceUsers(id) {\r\n  return axios.get(`${ROOT_URL}/${LEAD_SOURCE_USER_URL}/${id}`);\r\n}\r\n","import axios from 'axios';\r\n\r\nexport const ROOT_URL = process.env.REACT_APP_API_URL;\r\nexport const LEAD_STATUS_URL = 'api/config/leadstatus';\r\n\r\nexport function getLeadStatus(businessId) {\r\n  return axios.get(`${ROOT_URL}/${LEAD_STATUS_URL}/${businessId}`);\r\n}\r\n\r\nexport function addLeadStatus(data) {\r\n  return axios.post(`${ROOT_URL}/${LEAD_STATUS_URL}`, data);\r\n}\r\n\r\nexport function updateLeadStatus(data) {\r\n  return axios.patch(`${ROOT_URL}/${LEAD_STATUS_URL}`, data);\r\n}\r\n\r\nexport function deleteLeadStatus(id) {\r\n  return axios.delete(`${ROOT_URL}/${LEAD_STATUS_URL}/${id}`);\r\n}\r\n","import axios from 'axios';\r\n\r\nexport const ROOT_URL = process.env.REACT_APP_API_URL;\r\nexport const LEAD_URL = 'api/lead';\r\nexport const GET_LEAD_TABL_VIEW_URL = 'api/lead/tableview';\r\n\r\nexport function getLeadsList() {\r\n  return axios.get(`${ROOT_URL}/${GET_LEAD_TABL_VIEW_URL}`);\r\n}\r\n\r\nexport function getLeadsDetails(leadId) {\r\n  return axios.get(`${ROOT_URL}/${LEAD_URL}/${leadId}`);\r\n}\r\n\r\nexport function registerLead(lead) {\r\n  return axios.post(`${ROOT_URL}/${LEAD_URL}`, lead);\r\n}\r\n\r\nexport function updateLead(lead) {\r\n  return axios.patch(`${ROOT_URL}/${LEAD_URL}`, lead);\r\n}\r\n\r\nexport function deleteLead(id) {\r\n  return axios.delete(`${ROOT_URL}/${LEAD_URL}/${id}`);\r\n}\r\n","import React from 'react';\r\nimport { Select, MenuItem, InputLabel, FormControl } from '@material-ui/core';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport { getLeadSourceList } from '../../services/leadSource.service';\r\nimport { connect } from 'react-redux';\r\n\r\nclass LeadSourceDropDown extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSelectLeadSource = this.handleSelectLeadSource.bind(this);\r\n    this.state = {\r\n      leadData: [],\r\n      leadSourceId: this.props.currentLeadSource.leadSourceId\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getLeadsSource();\r\n    this.setState({ leadSourceId: this.props.currentLeadSource.leadSourceId });\r\n    console.log(this.props.businessId);\r\n  }\r\n\r\n  getLeadsSource() {\r\n    getLeadSourceList(this.props.businessId)\r\n      .then(results => this.setState({ leadData: results.data }))\r\n      .catch(err => console.log('err', err));\r\n  }\r\n\r\n  handleSelectLeadSource(event) {\r\n    this.setState({ leadSourceId: event.target.value });\r\n    this.props.getSelectedLeadSource(event.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <FormControl margin='dense' variant='outlined' style={{ width: '100%' }}>\r\n        <InputLabel id='labelLeadSource'>Lead Source</InputLabel>\r\n        <Select\r\n          labelId='labelLeadSource'\r\n          //value={this.props.currentLeadSource.leadSourceId}\r\n          onChange={this.handleSelectLeadSource.bind(this)}\r\n          label='Lead Source'\r\n          name='leadSourceId'\r\n        >\r\n          <MenuItem>\r\n            <em>Select Lead Source</em>\r\n          </MenuItem>\r\n          {this.state.leadData.map(value => (\r\n            <MenuItem key={value.id} value={value.id}>\r\n              {value.leadSourceName}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    businessId: state.auth.user.mainRole.business.id\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(LeadSourceDropDown);\r\n","import React from 'react';\r\nimport { Select, MenuItem, InputLabel, FormControl } from '@material-ui/core';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport { getLeadStatus } from '../../services/leadStatus.service';\r\n\r\nclass LeadStatusDropDown extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSelectLeadStatus = this.handleSelectLeadStatus.bind(this);\r\n    this.state = {\r\n      leadData: [],\r\n      leadStatusId: this.props.currentLeadStatus.leadStatusId,\r\n      listStatusList: []\r\n    };\r\n  }\r\n\r\n  getLeadStatusList = async () => {\r\n    const leadStatus = await getLeadStatus(this.props.businessId);\r\n    this.setState({\r\n      leadStatusList: leadStatus.data\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // this.getLeadsSource();\r\n    this.setState({ leadStatusId: this.props.currentLeadStatus.leadStatusId });\r\n    this.getLeadStatusList();\r\n  }\r\n\r\n  // getLeadsSource() {\r\n  //     getLeadSourceList()\r\n  //         .then(results => this.setState({leadData : results.data}))\r\n  //         .catch(err => console.log(err))\r\n  // }\r\n\r\n  handleSelectLeadStatus(event) {\r\n    this.setState({ leadStatusId: event.target.value });\r\n    this.props.getSelectedLeadStatus(event.target.value);\r\n  }\r\n  render() {\r\n    return (\r\n      <FormControl margin='dense' variant='outlined' style={{ width: '100%' }}>\r\n        <InputLabel id='labelLeadStatus'>Lead Status</InputLabel>\r\n        <Select\r\n          labelId='labelLeadSource'\r\n          //value={this.props.currentLeadStatus.leadStatusId}\r\n          onChange={this.handleSelectLeadStatus.bind(this)}\r\n          label='Lead Status'\r\n          name='leadStatusId'\r\n        >\r\n          <MenuItem value='0'>\r\n            <em>\r\n              Select Lead Status\r\n              {/* {!this.state?.leadStatusList ? 'Loading' : 'Select Lead Status'} */}\r\n            </em>\r\n          </MenuItem>\r\n\r\n          {this.state?.leadStatusList?.map(value => {\r\n            console.log(value);\r\n            return (\r\n              <MenuItem key={value.id} value={value.id}>\r\n                {value.leadStatusName}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </Select>\r\n      </FormControl>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LeadStatusDropDown;\r\n","import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  // Checkbox,\r\n  // FormControlLabel,\r\n  // Switch,\r\n  TextField,\r\n  // Select,\r\n  // MenuItem,\r\n  // InputLabel,\r\n  FormControl\r\n} from '@material-ui/core';\r\nimport LeadSourceDropdown from '../../../../partials/shared/LeadSourceDropDown';\r\nimport LeadStatusDropDown from '../../../../partials/shared/LeadStatusDropDown';\r\nimport {\r\n  getLeadsDetails\r\n  //getLeadsList,\r\n} from '../../../../services/leads.service';\r\n\r\n// import { getLeadSourceList } from '../../../../services/leadSource.service';\r\n\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  //KeyboardTimePicker,\r\n  KeyboardDatePicker\r\n} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nclass InputFieldsContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let defaultReceiveDate = new Date();\r\n    this.state = {\r\n      firstName: '',\r\n      leadSourceId: '4PDvakaYzWg.',\r\n      companyName: '',\r\n      ssn: '',\r\n      equiment: '',\r\n      email: '',\r\n      phone: '',\r\n      description: '',\r\n      lastName: '',\r\n      leadStatusId: 'JR1zcprJkUs.',\r\n      estimatedtBilling: '',\r\n      isdcode: '',\r\n      mobile: '',\r\n      note: '',\r\n      receivedDate: defaultReceiveDate.toISOString()\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleReceivedDate = this.handleReceivedDate.bind(this);\r\n    this.handleSelectLeadSource = this.handleSelectLeadSource.bind(this);\r\n    this.handleSelectLeadStatus = this.handleSelectLeadStatus.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let leadId = this.props.leadsourceId;\r\n\r\n    if (typeof leadId !== 'undefined') {\r\n      getLeadsDetails(leadId)\r\n        .then(results => {\r\n          let leadData = results.data;\r\n          this.setState(leadData);\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    // getLeadSourceList()\r\n    //   .then((results) => {\r\n    //     this.setState(results.data);\r\n    //   })\r\n    //   .catch((err) => console.log(err));\r\n  }\r\n\r\n  handleChange(event) {\r\n    if (this.props.modalType !== 'details') {\r\n      let keyName = event.target.name;\r\n      let data = this.state;\r\n      data[keyName] = event.target.value;\r\n\r\n      this.setState(data);\r\n      this.props.getFormData(data);\r\n    }\r\n  }\r\n\r\n  handleReceivedDate(receivedDate) {\r\n    if (this.props.modalType !== 'details') {\r\n      let data = this.state;\r\n      data.receivedDate = receivedDate.toISOString();\r\n      this.setState(data);\r\n      this.props.getFormData(data);\r\n    }\r\n  }\r\n\r\n  handleSelectLeadSource(leadSourceId) {\r\n    if (this.props.modalType !== 'details') {\r\n      let data = this.state;\r\n      data.leadSourceId = leadSourceId;\r\n      this.setState(data);\r\n      this.props.getFormData(data);\r\n    }\r\n  }\r\n\r\n  handleSelectLeadStatus(leadStatusId) {\r\n    if (this.props.modalType !== 'details') {\r\n      let data = this.state;\r\n      //data.leadStatusId = leadStatusId;\r\n      this.setState(data);\r\n      this.props.getFormData(data);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      //   <div className='kt-container  kt-container--fluid  kt-grid__item kt-grid__item'>\r\n      //     <div className='kt-portlet'>\r\n      <form autoComplete='off'>\r\n        {/* <div className='kt-portlet__body'> */}\r\n        <div className='row'>\r\n          <div className='col-md-6'>\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='First name'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='firstName'\r\n                value={this.state.firstName}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div\r\n              className='form-group mb-0'\r\n              style={{ paddingTop: '16px', paddingBottom: '8px' }}\r\n            >\r\n              <LeadSourceDropdown\r\n                currentLeadSource={{\r\n                  leadSourceId: this.state.leadSourceId\r\n                }}\r\n                getSelectedLeadSource={this.handleSelectLeadSource}\r\n                leadSource={this.props.leadSource}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-1'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Company Name'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='companyName'\r\n                value={this.state.companyName}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='SSN'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='ssn'\r\n                value={this.state.ssn}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Equiment'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='equiment'\r\n                value={this.state.equiment}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Email'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='email'\r\n                value={this.state.email}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Phone'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='phone'\r\n                value={this.state.phone}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Description'\r\n                variant='outlined'\r\n                multiline\r\n                rows='4'\r\n                className='kt-width-full'\r\n                name='description'\r\n                value={this.state.description}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className='col-md-6'>\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Last name'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='lastName'\r\n                value={this.state.lastName}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <FormControl margin='dense' style={{ width: '100%' }}>\r\n              <div\r\n                className='form-group mb-0'\r\n                style={{\r\n                  paddingTop: '0px',\r\n                  paddingBottom: '0px',\r\n                  marginBottom: '0px'\r\n                }}\r\n              >\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    margin='normal'\r\n                    id='receivedDate'\r\n                    name='receivedDate'\r\n                    label='Lead Receive Date'\r\n                    format='MM-dd-yyyy'\r\n                    value={this.state.receivedDate}\r\n                    onChange={this.handleReceivedDate}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date'\r\n                    }}\r\n                    style={{ paddingTop: '0px', paddingBottom: '0 px' }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </div>\r\n            </FormControl>\r\n\r\n            <div\r\n              className='form-group mb-0'\r\n              style={{ paddingTop: '0px', paddingBottom: '8px' }}\r\n            >\r\n              <LeadStatusDropDown\r\n                currentLeadStatus={{\r\n                  leadStatusId: this.state.leadStatusId\r\n                }}\r\n                getSelectedLeadStatus={this.handleSelectLeadStatus}\r\n                businessId={this.props.businessId}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Number of location'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='noOfLocation'\r\n                type='number'\r\n                value={this.state.number}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Estimated Billing'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='estimatedtBilling'\r\n                value={this.state.estimatedtBilling}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='ISD Code'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='isdcode'\r\n                value={this.state.isdcode}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='ISD Code'\r\n                variant='outlined'\r\n                className='kt-width-full'\r\n                name='mobile'\r\n                value={this.state.mobile}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group mb-0'>\r\n              <TextField\r\n                margin='normal'\r\n                label='Notes'\r\n                variant='outlined'\r\n                multiline\r\n                rows='4'\r\n                className='kt-width-full'\r\n                name='note'\r\n                value={this.state.note}\r\n                onChange={this.handleChange}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* </div> */}\r\n      </form>\r\n      //     </div>\r\n      //   </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputFieldsContainer;\r\n","import React, { useState } from 'react';\r\nimport { Row, Col, Modal } from 'react-bootstrap';\r\nimport { Button, Divider, Card } from 'antd';\r\n// import {\r\n//   UnorderedListOutlined,\r\n//   TableOutlined,\r\n//   UserOutlined,\r\n//   UserAddOutlined,\r\n//   PhoneOutlined,\r\n//   SendOutlined,\r\n//   MailOutlined,\r\n//   AuditOutlined,\r\n// } from '@ant-design/icons';\r\n// import PhoneControl from '../../../shared/PhoneControl';\r\nimport InputFieldsContainer from '../../leads/components/InputFieldsContainer';\r\nimport { sendVoiceMessage } from '../../../../services/twilio.service';\r\n\r\nconst ViewScheduledCalls = props => {\r\n  const [dialpadOpen, setDialpadOpen] = useState(false);\r\n  const [dial, setDial] = useState('');\r\n  var formData = {};\r\n\r\n  const handleChange = newData => {\r\n    formData = newData;\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setDialpadOpen(false);\r\n  };\r\n\r\n  const handleDial = e => {\r\n    e.persist();\r\n    if (dial.length >= 13) return;\r\n    setDial(dial + e.target.innerText);\r\n  };\r\n\r\n  const clearDial = () => {\r\n    setDial('');\r\n  };\r\n\r\n  const callNumber = async () => {\r\n    console.log('calling', dial);\r\n    const res = await sendVoiceMessage(dial, 'testing');\r\n    console.log(res);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size='sm'\r\n        dialogClassName='modal-90w'\r\n        show={dialpadOpen}\r\n        onHide={handleClose}\r\n        //centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Dialpad</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <Card bodyStyle={{ padding: 0 }}>\r\n                <h1>{dial}</h1>\r\n              </Card>\r\n            </Col>\r\n            <Col xs={12}>\r\n              <hr />\r\n            </Col>\r\n            <Col xs={4}>\r\n              <Button size='large' block onClick={handleDial}>\r\n                7\r\n              </Button>\r\n            </Col>\r\n            <Col xs={4}>\r\n              <Button size='large' block onClick={handleDial}>\r\n                8\r\n              </Button>\r\n            </Col>\r\n            <Col xs={4}>\r\n              <Button size='large' block onClick={handleDial}>\r\n                9\r\n              </Button>\r\n            </Col>\r\n            <Col xs={12}>\r\n              <hr />\r\n            </Col>\r\n            <Col xs={4}>\r\n              <Button size='large' block onClick={handleDial}>\r\n                4\r\n              </Button>\r\n            </Col>\r\n            <Col xs={4}>\r\n              <Button size='large' block onClick={handleDial}>\r\n                5\r\n              </Button>\r\n            </Col>\r\n            <Col xs={4}>\r\n              <Button size='large' block onClick={handleDial}>\r\n                6\r\n              </Button>\r\n            </Col>\r\n            <Col xs={12}>\r\n              <hr />\r\n            </Col>\r\n            <Col xs={4}>\r\n              <Button size='large' block onClick={handleDial}>\r\n                1\r\n              </Button>\r\n            </Col>\r\n            <Col xs={4}>\r\n              <Button size='large' block onClick={handleDial}>\r\n                2\r\n              </Button>\r\n            </Col>\r\n            <Col xs={4}>\r\n              <Button size='large' block onClick={handleDial}>\r\n                3\r\n              </Button>\r\n            </Col>\r\n            <Col xs={12}>\r\n              <hr />\r\n            </Col>\r\n            <Col xs={4}>\r\n              <Button size='large' block onClick={handleDial}>\r\n                +\r\n              </Button>\r\n            </Col>\r\n            <Col xs={4}>\r\n              <Button size='large' block onClick={handleDial}>\r\n                0\r\n              </Button>\r\n            </Col>\r\n            <Col xs={4}>\r\n              <Button size='large' block onClick={clearDial}>\r\n                Clear\r\n              </Button>\r\n            </Col>\r\n            <Col xs={12}>\r\n              <hr />\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Button size='large' block onClick={callNumber}>\r\n                CALL\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Modal.Body>\r\n      </Modal>\r\n      {/* <Row>\r\n        <Col md={4}>\r\n          <Row>\r\n            <Col md={8}>\r\n              <h5>\r\n                Outgoing Call <Badge status='error' />\r\n              </h5>\r\n              <h2>Derek</h2>\r\n              <Button>Scheduled Call</Button>\r\n            </Col>\r\n            <Col md={4}>\r\n              <PhoneControl label='Lead Details'>\r\n                <UnorderedListOutlined\r\n                  style={{ fontSize: 30, color: '#ccc' }}\r\n                />\r\n              </PhoneControl>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col md={1}>\r\n          <Divider type='vertical' />\r\n        </Col>\r\n        <Col md={3}>\r\n          <Row>\r\n            <Col>\r\n              <PhoneControl\r\n                label='Dial Pad'\r\n                onClick={() => setDialpadOpen(true)}\r\n              >\r\n                <TableOutlined style={{ fontSize: 30, color: '#ccc' }} />\r\n              </PhoneControl>\r\n            </Col>\r\n            <Col>\r\n              <PhoneControl label='Participant'>\r\n                <UserOutlined style={{ fontSize: 30, color: '#ccc' }} />\r\n              </PhoneControl>\r\n            </Col>\r\n            <Col>\r\n              <PhoneControl label='Add'>\r\n                <UserAddOutlined style={{ fontSize: 30, color: '#ccc' }} />\r\n              </PhoneControl>\r\n            </Col>\r\n            <Col>\r\n              <PhoneControl label='Hang Up'>\r\n                <PhoneOutlined style={{ fontSize: 30, color: '#ccc' }} />\r\n              </PhoneControl>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col md={1}>\r\n          <Divider type='vertical' />\r\n        </Col>\r\n        <Col md={3}>\r\n          <Row>\r\n            <Col>\r\n              <PhoneControl label='Send Bid'>\r\n                <SendOutlined style={{ fontSize: 30, color: '#ccc' }} />\r\n              </PhoneControl>\r\n            </Col>\r\n            <Col>\r\n              <PhoneControl label='Invoice'>\r\n                <MailOutlined style={{ fontSize: 30, color: '#ccc' }} />\r\n              </PhoneControl>\r\n            </Col>\r\n            <Col>\r\n              <PhoneControl label='Sale Ref'>\r\n                <AuditOutlined style={{ fontSize: 30, color: '#ccc' }} />\r\n              </PhoneControl>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row> */}\r\n      <Row>\r\n        <Col md={8}>\r\n          <div className='mt-3'>\r\n            <Card>\r\n              <h4>Lead Detail</h4>\r\n              <InputFieldsContainer getFormData={handleChange} />\r\n              <Button color='danger'>Save</Button>\r\n            </Card>\r\n          </div>\r\n        </Col>\r\n        <Col md={1}>\r\n          <Divider type='vertical' />\r\n        </Col>\r\n        <Col>\r\n          <h4>Files</h4>\r\n          <div className='mt-3'>\r\n            <Card>\r\n              image.jpg\r\n              <hr />\r\n              <Button>Upload files</Button>\r\n            </Card>\r\n          </div>\r\n          <br />\r\n          <h4>Call logs</h4>\r\n          <div className='mt-3'>\r\n            <Card>No Data</Card>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewScheduledCalls;\r\n","import axios from 'axios';\r\n\r\nexport const ROOT_URL = process.env.REACT_APP_API_URL;\r\nexport const TWILIO_CALL_API = 'api/twilio/voicecall';\r\n\r\nexport function sendVoiceMessage(phone, message) {\r\n  return axios.post(`${ROOT_URL}/${TWILIO_CALL_API}`, {\r\n    phoneNo: phone,\r\n    voiceMessage: message,\r\n  });\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport ViewScheduledCalls from './components/viewScheduledCalls';\r\n\r\nexport default function Accounts() {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact={true} from='/' to='/scheduled-calls' />\r\n      <Route path='/scheduled-calls' component={ViewScheduledCalls} />\r\n    </Switch>\r\n  );\r\n}\r\n"],"sourceRoot":""}