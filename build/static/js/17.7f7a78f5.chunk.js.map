{"version":3,"sources":["../node_modules/@material-ui/icons/Edit.js","app/services/leadStatus.service.js","app/pages/home/lead-status/components/LeadStatusInput.js","app/pages/home/lead-status/components/ViewLeadStatus.js","app/pages/home/lead-status/LeadStatus.js"],"names":["_interopRequireDefault","Object","defineProperty","exports","value","default","_react","_default","createElement","d","ROOT_URL","process","getLeadStatus","businessId","axios","get","addLeadStatus","data","post","updateLeadStatus","patch","deleteLeadStatus","id","delete","LeadStatusInput","props","onSubmit","handleSubmit","Container","Row","Col","xs","InputGroup","className","TextField","onChange","handleChange","label","leadStatusName","variant","fullWidth","InputLabelProps","shrink","size","FormControlLabel","control","Checkbox","checked","active","handleChangeActive","color","Button","type","onClick","e","connect","state","auth","user","mainRole","business","useState","setState","isModalOpen","setIsModalOpen","isUpdate","setIsUpdate","input","setInput","reRender","setRerender","useEffect","a","list","columns","title","field","width","render","rowData","dataIndex","row","length","getLeadSource","handleSubmitStatus","preventDefault","newInput","Modal","open","handleClose","target","dataSource","rowKey","LeadStatus","exact","from","to","path","component","ViewLeadStatus"],"mappings":"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","file":"static/js/17.7f7a78f5.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","import axios from 'axios';\r\n\r\nexport const ROOT_URL = process.env.REACT_APP_API_URL;\r\nexport const LEAD_STATUS_URL = 'api/config/leadstatus';\r\n\r\nexport function getLeadStatus(businessId) {\r\n  return axios.get(`${ROOT_URL}/${LEAD_STATUS_URL}/${businessId}`);\r\n}\r\n\r\nexport function addLeadStatus(data) {\r\n  return axios.post(`${ROOT_URL}/${LEAD_STATUS_URL}`, data);\r\n}\r\n\r\nexport function updateLeadStatus(data) {\r\n  return axios.patch(`${ROOT_URL}/${LEAD_STATUS_URL}`, data);\r\n}\r\n\r\nexport function deleteLeadStatus(id) {\r\n  return axios.delete(`${ROOT_URL}/${LEAD_STATUS_URL}/${id}`);\r\n}\r\n","import React from 'react';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  FormControlLabel,\r\n  Checkbox\r\n} from '@material-ui/core';\r\nimport { Container, InputGroup, Row, Col } from 'react-bootstrap';\r\n\r\nconst LeadStatusInput = props => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Container>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={props.handleChange}\r\n                id='leadStatusName'\r\n                label='Source Name'\r\n                className=''\r\n                value={props.data.leadStatusName}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs={4}>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={props.data.active}\r\n                  onChange={props.handleChangeActive}\r\n                  id='active'\r\n                  color='primary'\r\n                />\r\n              }\r\n              label='Active'\r\n            />\r\n          </Col>\r\n          <Col xs={12}>\r\n            <InputGroup>\r\n              <Button\r\n                type='submit'\r\n                size='large'\r\n                className='float-right'\r\n                variant='contained'\r\n                color='primary'\r\n                onClick={e => {\r\n                  props.handleSubmit(e);\r\n                }}\r\n              >\r\n                Confirm\r\n              </Button>\r\n            </InputGroup>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LeadStatusInput;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  getLeadStatus,\r\n  addLeadStatus,\r\n  updateLeadStatus,\r\n  deleteLeadStatus\r\n} from '../../../../services/leadStatus.service';\r\nimport { Table } from 'antd';\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport LeadStatusInput from './LeadStatusInput';\r\nimport { Button } from '@material-ui/core';\r\nimport Modal from '../../../shared/Modal';\r\nimport { connect } from 'react-redux';\r\n\r\nconst ViewLeadStatus = props => {\r\n  const [state, setState] = useState([]);\r\n  const initialInput = {\r\n    id: '',\r\n    leadStatusName: '',\r\n    active: true\r\n  };\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isUpdate, setIsUpdate] = useState(false);\r\n  const [input, setInput] = useState(initialInput);\r\n  const [reRender, setRerender] = useState(false); // Re render table after updating\r\n  useEffect(() => {\r\n    const getLeadSource = async () => {\r\n      const list = await getLeadStatus(props.businessId);\r\n      setState({\r\n        columns: [\r\n          {\r\n            title: 'Action',\r\n            field: 'actions',\r\n            width: 200,\r\n            render: rowData => {\r\n              return (\r\n                <Row>\r\n                  <Col>\r\n                    <Button\r\n                      variant='contained'\r\n                      color='secondary'\r\n                      size='small'\r\n                      title={rowData.id}\r\n                      onClick={() => {\r\n                        setInput(rowData);\r\n                        setIsUpdate(true);\r\n                        setIsModalOpen(true);\r\n                      }}\r\n                    >\r\n                      <EditIcon />\r\n                    </Button>\r\n                  </Col>\r\n                  <Col>\r\n                    <Button\r\n                      variant='contained'\r\n                      size='small'\r\n                      onClick={async () => {\r\n                        await deleteLeadStatus(rowData.id);\r\n                        setRerender(!reRender);\r\n                      }}\r\n                    >\r\n                      <DeleteIcon />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              );\r\n            }\r\n          },\r\n          { title: 'Lead Status Name', dataIndex: 'leadStatusName' },\r\n          {\r\n            title: 'Is Active?',\r\n            render: row => (row.active ? 'true' : 'false')\r\n          },\r\n          {\r\n            title: 'Assigned',\r\n            render: row => `${list.data.length}`\r\n          }\r\n        ],\r\n        data: list.data\r\n      });\r\n    };\r\n    getLeadSource();\r\n  }, [reRender, props.businessId]);\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setInput({\r\n      ...input,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleChangeActive = e => {\r\n    setInput({\r\n      ...input,\r\n      active: !input.active\r\n    });\r\n  };\r\n\r\n  const handleSubmitStatus = async e => {\r\n    e.preventDefault();\r\n    const newInput = { ...input, businessId: props.businessId };\r\n    if (isUpdate) {\r\n      try {\r\n        await updateLeadStatus(newInput);\r\n        //const usertype = await updateUserType(newInput);\r\n        //notify({ success: true, message: 'Success updating user type.' });\r\n      } catch (error) {}\r\n    }\r\n    if (!isUpdate) {\r\n      try {\r\n        await addLeadStatus(newInput);\r\n        //const usertype = await addUserType(newInput);\r\n        //notify({ success: true, message: 'Success adding user types.' });\r\n      } catch (error) {}\r\n    }\r\n    setIsModalOpen(false);\r\n    setRerender(!reRender);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        type='leadsource'\r\n        title='Lead Source'\r\n        open={isModalOpen}\r\n        handleClose={closeModal}\r\n      >\r\n        <LeadStatusInput\r\n          data={input}\r\n          handleChange={handleChange}\r\n          handleSubmit={handleSubmitStatus}\r\n          handleChangeActive={handleChangeActive}\r\n        />\r\n      </Modal>\r\n      <Table\r\n        columns={state.columns}\r\n        dataSource={state.data}\r\n        rowKey={row => row.id}\r\n        title={() => (\r\n          <>\r\n            <Button\r\n              className='mb-2'\r\n              variant='contained'\r\n              color='secondary'\r\n              size='large'\r\n              onClick={() => {\r\n                setIsModalOpen(true);\r\n                // setIsUpdate(false);\r\n                // setInput(initialInput);\r\n              }}\r\n            >\r\n              Add\r\n            </Button>\r\n            {/* <Button className='float-right' onClick={refreshTable}>\r\n          Refresh\r\n        </Button> */}\r\n          </>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    businessId: state.auth.user.mainRole.business.id\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ViewLeadStatus);\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport ViewLeadStatus from './components/ViewLeadStatus';\r\n\r\nexport default function LeadStatus() {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact={true} from='/' to='/lead-status' />\r\n      <Route path='/lead-status' component={ViewLeadStatus} />\r\n    </Switch>\r\n  );\r\n}\r\n"],"sourceRoot":""}