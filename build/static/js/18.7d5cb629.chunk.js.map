{"version":3,"sources":["app/pages/home/Modal.js","app/services/support.service.js","app/pages/home/support/components/tickets/TicketInput.js","app/pages/home/support/components/tickets/TicketsCloseComponent.js","app/pages/home/support/components/tickets/TicketsOpenComponent.js","app/services/aws.service.js","app/pages/home/support/components/tickets/TicketCreateComponent.js","app/pages/home/support/components/tickets/TicketAdd.js","app/pages/shared/Notify.js","app/pages/home/support/components/SupportViewComponent.js","app/partials/content/CustomDropdowns/SupportTicketDropdown.js","app/pages/home/support/components/TicketSupportAttachment.js","app/pages/home/support/components/TicketViewUpdateComponent.js","app/pages/home/support/SupportComponent.js"],"names":["ModalTable","props","size","dialogClassName","show","open","onHide","handleClose","centered","Header","closeButton","Title","title","Body","children","ROOT_URL","process","saveNewTicketSupport","ticket","axios","post","saveAttachment","file","getAttachment","id","get","deleteAttachment","delete","config","requestFileUpload","formData","FormData","url","append","ContactsInput","onSubmit","handleSubmit","Container","Row","Col","xs","InputGroup","className","TextField","onChange","handleChange","label","value","data","subject","variant","InputLabelProps","shrink","fullWidth","required","description","rows","multiline","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","Input","type","Button","color","TicketsCloseComponent","useState","state","setState","propsData","isModalOpen","setIsModalOpen","isUpdate","input","setInput","reRender","setRerender","useEffect","a","response","columns","render","rowData","onClick","editTicketSupport","EditOutlined","twoToneColor","dataIndex","moment","format","reverse","fetchData","history","push","pathname","handleSubmitTicket","e","preventDefault","newInput","businessId","error","TicketInput","target","dataSource","bordered","showHeader","loading","TicketsAllComponent","S3","bucketName","dirName","region","accessKeyId","secretAccessKey","fileUpload","console","log","classes","theme","root","flexGrow","paper","textAlign","wrapper","position","width","buttonProgress","green","top","left","marginTop","marginLeft","TicketCreateComponent","onChangeHandler","event","obj","name","files","selectedFile","loaded","isUploaded","isTemp","tempAttachment","user","message","class","descriptionHandler","bind","subjectHandler","saveTicket","this","saveTicketFunction","then","result","catch","err","setTimeout","saveTicketSupport","uploadToAws","upload","saveAttachmentToTicket","Promise","resolve","reject","userId","mainRole","business","supportTicketId","filePath","fileURL","fileName","getFileName","length","ListItem","Grid","container","spacing","justify","item","ListItemText","primary","Divider","light","map","key","href","IconButton","aria-label","fontSize","Form","Group","controlId","Label","Control","as","Typography","heading","style","display","htmlFor","component","startIcon","List","renderTempAttachment","Snackbar","anchorOrigin","vertical","horizontal","React","Component","connect","auth","TicketAdd","initialInput","attachments","attached","setAttached","ticketBtn","setTicketBtn","addFile","newParam","option","newAttached","notification","window","location","reload","disabled","TabContainer","dir","useStyles","makeStyles","backgroundColor","palette","background","SupportViewComponent","useTheme","setValue","AppBar","Tabs","newValue","indicatorColor","textColor","Tab","axis","direction","index","onChangeIndex","TicketsOpenComponent","SupportTicketDropdown","handleCloseEvent","Dropdown","drop","alignRight","Toggle","Menu","TicketSupportAttachment","deleteAttachmentHandler","deleteData","getdata","onAttachmentChanged","download","renderAttachments","TicketViewUpdateComponent","handleAttachment","options","status","patch","onchangeCommentHandler","comment","toggleForm","match","params","onUpload","geSupportTicketData","getSupportAttachment","getSupportCommentById","results","comments","responseData","firstName","lastName","dateCreated","textField","margin","marginRight","saveCommentHandler","ticketNumber","active","email","fontWeight","renderAttachment","CircularProgress","renderComment","commentForm","SupportComponent","exact","from","to","path"],"mappings":"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","file":"static/js/18.7d5cb629.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nconst ModalTable = props => {\r\n  return (\r\n    <div>\r\n      <Modal\r\n        size=\"lg\"\r\n        dialogClassName='modal-90w'\r\n        show={props.open}\r\n        onHide={props.handleClose}\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{props.title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{props.children}</Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalTable;\r\n","import axios from 'axios';\r\nimport React from 'react';\r\nimport { post } from 'axios';\r\n\r\nexport const ROOT_URL = process.env.REACT_APP_API_URL;\r\nexport const SUPPORT_TICKET = 'api/supportticket';\r\nexport const API_SUPPORT_TICKET = 'api/supportticket';\r\nexport const SUPPORT_TICKET_ATTACHMENT = 'attachment';\r\nexport const SUPPORT_COMMENT = 'comment';\r\n\r\nexport const FILE_UPLOAD_URL = 'api/fileupload';\r\n\r\n///api/SupportTicket/Attachment/{SupportTicketCommentId}\r\n\r\nexport function getAllSupportTicket() {\r\n  return axios.get(`${ROOT_URL}/${SUPPORT_TICKET}`);\r\n}\r\n\r\nexport function getOpenSupportTicket() {\r\n  return axios.get(`${ROOT_URL}/${SUPPORT_TICKET}/active`);\r\n}\r\n\r\nexport function getClosedSupportTicket() {\r\n  return axios.get(`${ROOT_URL}/${SUPPORT_TICKET}/closed`);\r\n}\r\n\r\nexport function getTicketById(id) {\r\n  return axios.get(`${ROOT_URL}/${SUPPORT_TICKET}/${id}`);\r\n}\r\n\r\nexport function saveNewTicketSupport(ticket) {\r\n  return axios.post(`${ROOT_URL}/${API_SUPPORT_TICKET}/`, ticket);\r\n}\r\n\r\nexport function addSupportTicket(option) {\r\n  return axios.post(`${ROOT_URL}/${SUPPORT_TICKET}`, option);\r\n}\r\n\r\nexport function closeSupportTicket(option) {\r\n  return axios.patch(`${ROOT_URL}/${SUPPORT_TICKET}`, option);\r\n}\r\n\r\n//attachment\r\n\r\nexport function saveAttachment(file) {\r\n  return axios.post(`${ROOT_URL}/${SUPPORT_TICKET_ATTACHMENT}`, file);\r\n}\r\n\r\nexport function getAttachment(id) {\r\n  return axios.get(`${ROOT_URL}/${SUPPORT_TICKET_ATTACHMENT}/${id}`);\r\n}\r\n\r\nexport function deleteAttachment(id) {\r\n  return axios.delete(\r\n    `${ROOT_URL}/${API_SUPPORT_TICKET}/${SUPPORT_TICKET_ATTACHMENT}/${id}`\r\n  );\r\n}\r\n\r\n//comment\r\n\r\nexport function getCommentById(id) {\r\n  return axios.get(`${ROOT_URL}/${SUPPORT_COMMENT}/${id}`);\r\n}\r\n\r\nexport function saveComment(comment) {\r\n  return axios.post(`${ROOT_URL}/${SUPPORT_COMMENT}`, comment);\r\n}\r\n\r\n// UPLOAD\r\nconst config = {\r\n  'content-type': 'multipart/form-data'\r\n};\r\n\r\nexport function requestFileUpload(file) {\r\n  var formData = new FormData();\r\n\r\n  const url = `${ROOT_URL}/${FILE_UPLOAD_URL}`;\r\n  formData.append('files', file);\r\n  return post(url, formData, config);\r\n}\r\n","import React from 'react';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  ExpansionPanel,\r\n  ExpansionPanelDetails,\r\n  ExpansionPanelSummary,\r\n  Input\r\n} from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Container, InputGroup, Row, Col } from 'react-bootstrap';\r\n\r\nconst ContactsInput = props => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Container>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={props.handleChange}\r\n                id='subject'\r\n                label='Subject'\r\n                className=''\r\n                value={props.data.subject}\r\n                variant='outlined'\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n                fullWidth={true}\r\n                required\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs={12}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={props.handleChange}\r\n                id='description'\r\n                label='Description'\r\n                className=''\r\n                value={props.data.description}\r\n                variant='outlined'\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n                fullWidth={true}\r\n                rows={4}\r\n                multiline\r\n                required\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs={12}>\r\n            <ExpansionPanel>\r\n              <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls='panel1bh-content'\r\n                id='panel1bh-header'\r\n              >\r\n                Attachments\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n                <Input type='file' />\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n          </Col>\r\n          <Col xs={12}>\r\n            <InputGroup>\r\n              <Button\r\n                type='submit'\r\n                size='large'\r\n                className='float-right mt-3'\r\n                variant='contained'\r\n                color='primary'\r\n              >\r\n                Confirm\r\n              </Button>\r\n            </InputGroup>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactsInput;\r\n","import React, { useState, useEffect } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport * as moment from 'moment';\r\nimport {\r\n  getOpenSupportTicket,\r\n  saveNewTicketSupport,\r\n  getClosedSupportTicket\r\n} from '../../../../../services/support.service';\r\nimport { Table } from 'antd';\r\nimport { EditOutlined } from '@ant-design/icons';\r\n\r\nimport { Button, CircularProgress } from '@material-ui/core';\r\nimport TableModal from '../../../Modal';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport TicketInput from './TicketInput';\r\n\r\nconst TicketsCloseComponent = (props) => {\r\n  const [state, setState] = useState(0);\r\n  const propsData = props.props;\r\n\r\n  const initialInput = {\r\n    id: '',\r\n    subject: '',\r\n    description: '',\r\n  };\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isUpdate, setIsUpdate] = useState(false);\r\n  const [input, setInput] = useState(initialInput);\r\n  const [reRender, setRerender] = useState(false); // Re render table after updating\r\n\r\n  useEffect(() => {\r\n    setState(0);\r\n    const fetchData = async () => {\r\n      const response = await getClosedSupportTicket();\r\n      setState({\r\n        columns: [\r\n          {\r\n            title: 'Action',\r\n            render: (rowData) => (\r\n              <a onClick={() => editTicketSupport(rowData)}>\r\n                <EditOutlined twoToneColor='#1a88d9' />\r\n              </a>\r\n            ),\r\n          },\r\n          { title: 'Status', dataIndex: 'status' },\r\n          { title: 'Ticket#', dataIndex: 'ticketNumber' },\r\n          { title: 'Subject', dataIndex: 'subject' },\r\n          {\r\n            title: 'Requested On',\r\n            dataIndex: 'dateCreated',\r\n            render: (rowData) => `${moment(rowData).format('LLL')}`,\r\n          },\r\n        ],\r\n        data: response.data.reverse(),\r\n      });\r\n    };\r\n    fetchData();\r\n  }, [reRender]);\r\n\r\n  const editTicketSupport = (data) => {\r\n    propsData.history.push({\r\n      pathname: `supports/${data.id}`,\r\n      data: data,\r\n    });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setInput({\r\n      ...input,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmitTicket = async (e) => {\r\n    e.preventDefault();\r\n    const newInput = {\r\n      ...input,\r\n      businessId: 'R2PPfBhpaLA.',\r\n    };\r\n\r\n    if (isUpdate) {\r\n      try {\r\n        //await addContacts(input);\r\n        //notify({ success: true, message: 'Success updating master Contact.' });\r\n      } catch (error) {}\r\n    }\r\n    if (!isUpdate) {\r\n      try {\r\n        //await updateContact(input);\r\n        saveNewTicketSupport(newInput);\r\n        //notify({ success: true, message: 'Success adding master Contact.' });\r\n      } catch (error) {}\r\n    }\r\n    setIsModalOpen(false);\r\n    setRerender(!reRender);\r\n  };\r\n\r\n  const refreshTable = () => {\r\n    setRerender(!reRender);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableModal\r\n        type='ticket'\r\n        title='Support Ticket'\r\n        open={isModalOpen}\r\n        handleClose={closeModal}\r\n      >\r\n        <TicketInput\r\n          data={input}\r\n          handleChange={handleChange}\r\n          handleSubmit={handleSubmitTicket}\r\n        />\r\n      </TableModal>\r\n\r\n      <Table\r\n        columns={state.columns}\r\n        dataSource={state.data}\r\n        title={() => ''}\r\n        // title={() => <Button onClick={refreshTable}>Refresh</Button>}\r\n        bordered\r\n        size='small'\r\n        showHeader\r\n        loading={!state.data ? true : false}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TicketsCloseComponent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport * as moment from 'moment';\r\nimport {\r\n  getOpenSupportTicket,\r\n  saveNewTicketSupport,\r\n} from '../../../../../services/support.service';\r\nimport { Table } from 'antd';\r\nimport { EditOutlined } from '@ant-design/icons';\r\n\r\nimport { Button, CircularProgress } from '@material-ui/core';\r\nimport TableModal from '../../../Modal';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport TicketInput from './TicketInput';\r\n\r\nconst TicketsAllComponent = (props) => {\r\n  const [state, setState] = useState(0);\r\n  const propsData = props.props;\r\n\r\n  const initialInput = {\r\n    id: '',\r\n    subject: '',\r\n    description: '',\r\n  };\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isUpdate, setIsUpdate] = useState(false);\r\n  const [input, setInput] = useState(initialInput);\r\n  const [reRender, setRerender] = useState(false); // Re render table after updating\r\n\r\n  useEffect(() => {\r\n    setState(0);\r\n    const fetchData = async () => {\r\n      const response = await getOpenSupportTicket();\r\n      setState({\r\n        columns: [\r\n          {\r\n            title: 'Action',\r\n            render: (rowData) => (\r\n              <a onClick={() => editTicketSupport(rowData)}>\r\n                <EditOutlined twoToneColor='#1a88d9' />\r\n              </a>\r\n            ),\r\n          },\r\n          { title: 'Status', dataIndex: 'status' },\r\n          { title: 'Ticket#', dataIndex: 'ticketNumber' },\r\n          { title: 'Subject', dataIndex: 'subject' },\r\n          {\r\n            title: 'Requested On',\r\n            dataIndex: 'dateCreated',\r\n            render: (rowData) => `${moment(rowData).format('LLL')}`,\r\n          },\r\n        ],\r\n        data: response.data.reverse(),\r\n      });\r\n    };\r\n    fetchData();\r\n  }, [reRender]);\r\n\r\n  const editTicketSupport = (data) => {\r\n    propsData.history.push({\r\n      pathname: `supports/${data.id}`,\r\n      data: data,\r\n    });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setInput({\r\n      ...input,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmitTicket = async (e) => {\r\n    e.preventDefault();\r\n    const newInput = {\r\n      ...input,\r\n      businessId: 'R2PPfBhpaLA.',\r\n    };\r\n\r\n    if (isUpdate) {\r\n      try {\r\n        //await addContacts(input);\r\n        //notify({ success: true, message: 'Success updating master Contact.' });\r\n      } catch (error) {}\r\n    }\r\n    if (!isUpdate) {\r\n      try {\r\n        //await updateContact(input);\r\n        saveNewTicketSupport(newInput);\r\n        //notify({ success: true, message: 'Success adding master Contact.' });\r\n      } catch (error) {}\r\n    }\r\n    setIsModalOpen(false);\r\n    setRerender(!reRender);\r\n  };\r\n\r\n  const refreshTable = () => {\r\n    setRerender(!reRender);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableModal\r\n        type='ticket'\r\n        title='Support Ticket'\r\n        open={isModalOpen}\r\n        handleClose={closeModal}\r\n      >\r\n        <TicketInput\r\n          data={input}\r\n          handleChange={handleChange}\r\n          handleSubmit={handleSubmitTicket}\r\n        />\r\n      </TableModal>\r\n\r\n      <Table\r\n        columns={state.columns}\r\n        dataSource={state.data}\r\n        title={() => ''}\r\n        // title={() => <Button onClick={refreshTable}>Refresh</Button>}\r\n        bordered\r\n        size='small'\r\n        showHeader\r\n        loading={!state.data ? true : false}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TicketsAllComponent;\r\n","import S3 from 'react-aws-s3';\r\nimport axios from 'axios';\r\n\r\nconst config = {\r\n  bucketName: process.env.REACT_APP_BUCKET,\r\n  dirName: 'support/attachment',\r\n  region: process.env.REACT_APP_REGION,\r\n  accessKeyId: process.env.REACT_APP_ACCESS_KEY_ID,\r\n  secretAccessKey: process.env.REACT_APP_AWS_SECRET_KEY\r\n};\r\n\r\nconst ReactS3Client = new S3(config);\r\n\r\nexport function awsServices(file) {\r\n  return new Promise((resolve, reject) => {\r\n    let newFileName = `${Date.now()}-support-attachment`;\r\n    ReactS3Client.uploadFile(file, newFileName)\r\n      .then(data => resolve(data))\r\n      .catch(err => reject(err));\r\n  });\r\n}\r\n\r\nexport const ROOT_URL = process.env.REACT_APP_API_URL;\r\n\r\nexport function fileUpload(file) {\r\n  console.log(`${ROOT_URL}/api/fileupload`, file);\r\n  return axios.post(`${ROOT_URL}/api/fileupload`, file);\r\n}\r\n","import React from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  Grid,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails,\r\n  CircularProgress,\r\n  Divider,\r\n  List,\r\n  Typography,\r\n  IconButton,\r\n  Button,\r\n  Snackbar,\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { getFileName } from '../../../../../../_metronic/utils/utils';\r\nimport { awsServices } from '../../../../../services/aws.service';\r\nimport {\r\n  saveAttachment,\r\n  getAttachment,\r\n  getCommentById,\r\n  saveComment,\r\n  saveNewTicketSupport,\r\n  requestFileUpload,\r\n} from '../../../../../services/support.service';\r\n\r\nconst classes = (theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    textAlign: 'center',\r\n  },\r\n  wrapper: {\r\n    position: 'relative',\r\n    width: '100%',\r\n  },\r\n  buttonProgress: {\r\n    color: green[500],\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n});\r\n\r\nclass TicketCreateComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tempAttachment: [],\r\n      loading: false,\r\n      isUploaded: false,\r\n      description: '',\r\n      subject: '',\r\n      user: this.props.user,\r\n      open: false,\r\n      message: '',\r\n    };\r\n    this.class = classes();\r\n    // this.onUpload = this.onUpload.bind(this);\r\n    this.descriptionHandler = this.descriptionHandler.bind(this);\r\n    this.subjectHandler = this.subjectHandler.bind(this);\r\n    this.saveTicket = this.saveTicket.bind(this);\r\n  }\r\n\r\n  descriptionHandler(event) {\r\n    this.setState({ description: event.target.value });\r\n  }\r\n\r\n  subjectHandler(event) {\r\n    this.setState({ subject: event.target.value });\r\n  }\r\n\r\n  saveTicket() {\r\n    this.saveTicketFunction()\r\n      .then((result) => {\r\n        this.setState({\r\n          description: '',\r\n          subject: '',\r\n          tempAttachment: [],\r\n          open: true,\r\n          message: 'Ticket Saved',\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    setTimeout(() => this.setState({ open: false, message: '' }), 5000);\r\n  }\r\n\r\n  async saveTicketFunction() {\r\n    let ticket = await this.saveTicketSupport();\r\n    let upload = await this.uploadToAws();\r\n    if (upload.data[0]) {\r\n      let attachments = await this.saveAttachmentToTicket({ upload, ticket });\r\n    }\r\n    return true;\r\n  }\r\n\r\n  saveTicketSupport() {\r\n    return new Promise((resolve, reject) => {\r\n      let obj = {\r\n        businessId: this.state.user.id,\r\n        userId: this.state.user.mainRole.business.id,\r\n        subject: this.state.subject,\r\n        description: this.state.description,\r\n      };\r\n      saveNewTicketSupport(obj)\r\n        .then((result) => resolve(result.data))\r\n        .catch((err) => reject(err));\r\n    });\r\n  }\r\n\r\n  uploadToAws() {\r\n    return new Promise((resolve, reject) => {\r\n      if (this.state.selectedFile) {\r\n        let fileData = this.state.selectedFile;\r\n        requestFileUpload(fileData)\r\n          .then((response) => resolve(response))\r\n          .catch((err) => reject(err));\r\n      } else {\r\n        resolve(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  saveAttachmentToTicket(data) {\r\n    return new Promise((resolve, reject) => {\r\n      let upload = data.upload.data[0];\r\n      let file = {\r\n        supportTicketId: data.ticket.id,\r\n        filePath: upload.fileURL,\r\n        fileName: getFileName(upload.fileURL),\r\n        userId: this.state.user.id,\r\n      };\r\n      saveAttachment(file)\r\n        .then((response) => resolve(response))\r\n        .catch((err) => reject(err));\r\n    });\r\n  }\r\n\r\n  onChangeHandler = (event) => {\r\n    let obj = {\r\n      name: event.target.files[0].name,\r\n    };\r\n    this.setState({\r\n      selectedFile: event.target.files[0],\r\n      loaded: 0,\r\n      isUploaded: true,\r\n      isTemp: true,\r\n      tempAttachment: [...this.state.tempAttachment, obj],\r\n    });\r\n  };\r\n\r\n  renderTempAttachment() {\r\n    if (this.state.tempAttachment.length >= 1) {\r\n      return (\r\n        <>\r\n          <ListItem>\r\n            <Grid container spacing={3} justify='space-between'>\r\n              <Grid item xs={6}>\r\n                <ListItemText primary='Filename' />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ListItemText primary='Action' />\r\n              </Grid>\r\n            </Grid>\r\n          </ListItem>\r\n          <Divider light />\r\n          {this.state.tempAttachment.map((item, key) => (\r\n            <ListItem key={key}>\r\n              <Grid container spacing={3} justify='space-between'>\r\n                <Grid item xs={6}>\r\n                  <ListItemText primary={item.name} />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <a href='javascript_void(0)'>\r\n                    <IconButton aria-label='download'>\r\n                      <GetAppIcon fontSize='small' />\r\n                    </IconButton>\r\n                  </a>\r\n                  <IconButton aria-label='Delete'>\r\n                    <DeleteIcon fontSize='small' />\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            </ListItem>\r\n          ))}\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <ListItem>No Attachments</ListItem>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='kt-portlet kt-portlet--height-fluid'>\r\n        <div className='kt-portlet__head'>\r\n          <div className='kt-portlet__head-label'>\r\n            <h3 className='kt-portlet__head-title'>Create New Ticket</h3>\r\n          </div>\r\n          {/* <SupportTicketDropdown handleClose={this.handleCloseEvent}/> */}\r\n        </div>\r\n        <div className='kt-portlet__body'>\r\n          <div className='kt-widget4'>\r\n            <Form>\r\n              <Form.Group controlId='subject'>\r\n                <Form.Label>Subject</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  onChange={this.subjectHandler}\r\n                  value={this.state.subject}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId='description'>\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control\r\n                  as='textarea'\r\n                  rows='3'\r\n                  onChange={this.descriptionHandler}\r\n                  value={this.state.description}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId='attachment'>\r\n                <Grid container spacing={3} justify='center'>\r\n                  <Grid item xs={12}>\r\n                    <ExpansionPanel>\r\n                      <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls='panel1a-content'\r\n                        id='panel1a-header'\r\n                      >\r\n                        <Typography className={classes.heading}>\r\n                          Attachments\r\n                        </Typography>\r\n                      </ExpansionPanelSummary>\r\n                      <ExpansionPanelDetails>\r\n                        <Grid container spacing={3} justify='space-between'>\r\n                          <Grid item xs={12}>\r\n                            <Typography>\r\n                              Note:Upload attachment extension allow:.pdf,\r\n                              .xlsx, .xls, .png, .doc, .docx, .jpg, .jpeg, .csv,\r\n                              .txt\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            <input\r\n                              style={{ display: 'none' }}\r\n                              id='contained-button-file'\r\n                              type='file'\r\n                              onChange={this.onChangeHandler}\r\n                            />\r\n                            <label htmlFor='contained-button-file'>\r\n                              <Button\r\n                                variant='contained'\r\n                                color='default'\r\n                                component='span'\r\n                                startIcon={<CloudUploadIcon />}\r\n                              >\r\n                                Upload\r\n                              </Button>\r\n                            </label>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            <List\r\n                              component='nav'\r\n                              className={classes.root}\r\n                              aria-label='Mailbox folders'\r\n                            >\r\n                              {this.renderTempAttachment()}\r\n                            </List>\r\n                          </Grid>\r\n                          {/* <Grid item xs={12}>\r\n                                            <div style={this.class.wrapper}>\r\n                                                { this.state.isUploaded &&\r\n                                                    <Button \r\n                                                        variant=\"contained\"\r\n                                                        color=\"primary\"\r\n                                                        disableElevation\r\n                                                        style={this.class.wrapper}\r\n                                                        disabled={this.state.loading}\r\n                                                        onClick={this.onUpload}>\r\n                                                        Save\r\n                                                    </Button>\r\n                                                }\r\n                                                {this.state.loading && <CircularProgress size={24} style={this.class.buttonProgress}/>}\r\n                                            </div>\r\n                                        </Grid> */}\r\n                        </Grid>\r\n                      </ExpansionPanelDetails>\r\n                    </ExpansionPanel>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form.Group>\r\n              <Form.Group controlId='savebtn'>\r\n                <Button\r\n                  variant='contained'\r\n                  color='primary'\r\n                  onClick={this.saveTicket}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </Form.Group>\r\n            </Form>\r\n            <Snackbar\r\n              anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              open={this.state.open}\r\n              message={this.state.message}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.auth.user,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TicketCreateComponent);\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  addSupportTicket,\r\n  saveAttachment,\r\n} from '../../../../../services/support.service';\r\nimport { fileUpload } from '../../../../../services/aws.service';\r\n\r\nimport {\r\n  TextField,\r\n  Button,\r\n  ExpansionPanel,\r\n  ExpansionPanelDetails,\r\n  ExpansionPanelSummary,\r\n  Input,\r\n} from '@material-ui/core';\r\nimport { Container, InputGroup, Row, Col } from 'react-bootstrap';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { notify } from '../../../../shared/Notify';\r\n\r\nconst TicketAdd = () => {\r\n  const initialInput = {\r\n    id: '',\r\n    subject: '',\r\n    description: '',\r\n    attachments: '',\r\n  };\r\n  const [input, setInput] = useState(initialInput);\r\n  const [attached, setAttached] = useState({ fileName: '', filePath: '' });\r\n  const [ticketBtn, setTicketBtn] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setInput({\r\n      ...input,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const addFile = async (e) => {\r\n    var formData = new FormData();\r\n    formData.append('files', e.target.files[0]);\r\n    const file = await fileUpload(formData);\r\n    setAttached({\r\n      fileName: file.data[0].fileName,\r\n      filePath: file.data[0].fileURL,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setTicketBtn(true);\r\n    const newParam = {\r\n      ...input,\r\n      businessId: 'R2PPfBhpaLA.',\r\n    };\r\n\r\n    const ticket = await addSupportTicket(newParam);\r\n\r\n    const newAttached = { ...attached, supportTicketId: ticket.data.id };\r\n    const attachAdmin = await saveAttachment(newAttached);\r\n\r\n    setInput(initialInput);\r\n    setAttached({ fileName: '', filePath: '' });\r\n    setTicketBtn(false);\r\n    notify('Ticket submitted.');\r\n    window.location.reload(false);\r\n  };\r\n\r\n  return (\r\n    <div className='mt-5'>\r\n      <form onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={handleChange}\r\n                id='subject'\r\n                label='Subject'\r\n                className=''\r\n                value={input.subject}\r\n                variant='outlined'\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                size='small'\r\n                fullWidth={true}\r\n                // required\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs={12}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={handleChange}\r\n                id='description'\r\n                label='Description'\r\n                className=''\r\n                value={input.description}\r\n                variant='outlined'\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                size='small'\r\n                fullWidth={true}\r\n                rows={8}\r\n                multiline\r\n                // required\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs={12}>\r\n            <ExpansionPanel>\r\n              <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls='panel1bh-content'\r\n                id='panel1bh-header'\r\n              >\r\n                Attachments\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n                <Input id='attachments' type='file' onChange={addFile} />\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n          </Col>\r\n          <Col xs={12}>\r\n            <InputGroup>\r\n              <Button\r\n                type='submit'\r\n                size='large'\r\n                className='float-right mt-3'\r\n                variant='contained'\r\n                color='secondary'\r\n                disabled={ticketBtn}\r\n              >\r\n                Confirm\r\n              </Button>\r\n            </InputGroup>\r\n          </Col>\r\n        </Row>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TicketAdd;\r\n","import { notification } from 'antd';\r\n\r\nexport const notify = props => {\r\n  notification.open({\r\n    message: 'Notification',\r\n    description: `${props}`,\r\n    onClick: () => {}\r\n  });\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\n//components\r\nimport TicketsCloseComponent from './tickets/TicketsCloseComponent';\r\nimport TicketsOpenComponent from './tickets/TicketsOpenComponent';\r\nimport TicketCreateComponent from './tickets/TicketCreateComponent';\r\nimport TicketAdd from './tickets/TicketAdd';\r\n\r\nfunction TabContainer({ children, dir }) {\r\n  return (\r\n    <Typography component='div' dir={dir}>\r\n      {children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  dir: PropTypes.string.isRequired\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: '100%'\r\n  }\r\n}));\r\n\r\nexport default function SupportViewComponent(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  function handleChange(event, newValue) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  function handleChangeIndex(index) {\r\n    setValue(index);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position='static' color='default'>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor='secondary'\r\n          textColor='secondary'\r\n          variant='fullWidth'\r\n        >\r\n          <Tab label='Open' />\r\n          <Tab label='Closed' />\r\n          {/* <Tab label='Create Ticket' /> */}\r\n          <Tab label='Open a Ticket' />\r\n        </Tabs>\r\n      </AppBar>\r\n      <SwipeableViews\r\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n        <TabContainer dir={theme.direction}>\r\n          <TicketsOpenComponent props={props} />\r\n        </TabContainer>\r\n        <TabContainer dir={theme.direction}>\r\n          <TicketsCloseComponent props={props} />\r\n        </TabContainer>\r\n        {/* <TabContainer dir={theme.direction}>\r\n          <TicketCreateComponent props={props} />\r\n        </TabContainer> */}\r\n        <TabContainer dir={theme.direction}>\r\n          <TicketAdd props={props} />\r\n        </TabContainer>\r\n      </SwipeableViews>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nclass SupportTicketDropdown extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleCloseEvent = this.handleCloseEvent.bind(this);\r\n  }\r\n\r\n  handleCloseEvent() {\r\n    this.props.handleClose(true);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Dropdown className='kt-portlet__head-toolbar' drop='down' alignRight>\r\n        <Dropdown.Toggle\r\n          variant='transparent'\r\n          className='btn btn-label-success btn-sm btn-bold dropdown-toggle'\r\n          id='dropdown-toggle-top'\r\n        >\r\n          Action\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu className='dropdown-menu-fit dropdown-menu-right'>\r\n          <ul className='kt-nav'>\r\n            <li className='kt-nav__item'>\r\n              <a\r\n                href='#'\r\n                className='kt-nav__link'\r\n                onClick={this.handleCloseEvent}\r\n              >\r\n                <i className='kt-nav__link-icon flaticon-close' />\r\n                <span className='kt-nav__link-text'>Cancel</span>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SupportTicketDropdown;\r\n","import React from 'react';\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  Divider,\r\n  Grid,\r\n  IconButton\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport { getFileName } from '../../../../../_metronic/utils/utils';\r\nimport {\r\n  deleteAttachment,\r\n  getAttachment\r\n} from '../../../../services/support.service';\r\n\r\nclass TicketSupportAttachment extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null\r\n    };\r\n    this.deleteAttachmentHandler = this.deleteAttachmentHandler.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ data: this.props.data });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps() {\r\n    this.setState({ data: this.props.data });\r\n  }\r\n\r\n  downloadFile(file) {\r\n    const response = {\r\n      file: file\r\n    };\r\n    window.location.href = response.file;\r\n  }\r\n\r\n  async deleteAttachmentHandler(id) {\r\n    let deleteData = await deleteAttachment(id);\r\n    let getdata = await getAttachment(deleteData.data.id);\r\n    this.props.onAttachmentChanged(getdata.data);\r\n  }\r\n\r\n  renderAttachments() {\r\n    if (this.state.data) {\r\n      return (\r\n        <>\r\n          <ListItem>\r\n            <Grid container spacing={3} justify='space-between'>\r\n              <Grid item xs={6}>\r\n                <ListItemText\r\n                  primary={\r\n                    this.state.data.fileName\r\n                      ? this.state.data.fileName\r\n                      : getFileName(this.state.data.filePath)\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <a\r\n                  href={this.state.data.filePath}\r\n                  download={this.state.data.filePath}\r\n                  target='_blank'\r\n                >\r\n                  <IconButton aria-label='download'>\r\n                    <GetAppIcon fontSize='small' />\r\n                  </IconButton>\r\n                </a>\r\n                <IconButton\r\n                  aria-label='Delete'\r\n                  onClick={() =>\r\n                    this.deleteAttachmentHandler(this.state.data.id)\r\n                  }\r\n                >\r\n                  <DeleteIcon fontSize='small' />\r\n                </IconButton>\r\n              </Grid>\r\n            </Grid>\r\n          </ListItem>\r\n          <Divider light />\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <>{this.renderAttachments()}</>;\r\n  }\r\n}\r\n\r\nexport default TicketSupportAttachment;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport SupportTicketDropdown from '../../../../partials/content/CustomDropdowns/SupportTicketDropdown';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { getTicketById } from '../../../../services/support.service';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport * as moment from 'moment';\r\nimport { connect } from 'react-redux';\r\nimport { getFileName } from '../../../../../_metronic/utils/utils';\r\nimport { awsServices } from '../../../../services/aws.service';\r\nimport {\r\n  saveAttachment,\r\n  getAttachment,\r\n  getCommentById,\r\n  saveComment,\r\n  requestFileUpload,\r\n  closeSupportTicket,\r\n} from '../../../../services/support.service';\r\nimport TicketSupportAttachment from './TicketSupportAttachment';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nconst classes = (theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    textAlign: 'center',\r\n  },\r\n  wrapper: {\r\n    position: 'relative',\r\n    width: '100%',\r\n  },\r\n  buttonProgress: {\r\n    color: green[500],\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n});\r\n\r\nclass TicketViewUpdateComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedFile: null,\r\n      isUploaded: false,\r\n      toggleForm: false,\r\n      isTemp: true,\r\n      tempAttachment: [],\r\n      loading: false,\r\n      open: false,\r\n      id: this.props.match.params.id,\r\n    };\r\n    this.onChangeHandler = this.onChangeHandler.bind(this);\r\n    this.handleAttachment = this.handleAttachment.bind(this);\r\n    this.onchangeCommentHandler = this.onchangeCommentHandler.bind(this);\r\n    this.onUpload = this.onUpload.bind(this);\r\n    this.class = classes();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.geSupportTicketData();\r\n    this.getSupportAttachment();\r\n    this.getSupportCommentById();\r\n  }\r\n\r\n  handleAttachment = (data) => {\r\n    this.setState({ attachments: data });\r\n    // getAttachment(attachments.id)\r\n    //     .then(results => this.setState({attachments: results.data}))\r\n    //     .catch(err => console.log(err))\r\n  };\r\n\r\n  geSupportTicketData() {\r\n    getTicketById(this.state.id)\r\n      .then((results) => this.setState({ ticket: results.data }))\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  getSupportAttachment() {\r\n    getAttachment(this.state.id)\r\n      .then((results) => this.setState({ attachments: results.data }))\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  getSupportCommentById() {\r\n    getCommentById(this.state.id)\r\n      .then((results) => this.setState({ comments: results.data }))\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  onChangeHandler = (event) => {\r\n    let obj = {\r\n      name: event.target.files[0].name,\r\n    };\r\n    this.setState({\r\n      selectedFile: event.target.files[0],\r\n      loaded: 0,\r\n      isUploaded: true,\r\n      isTemp: true,\r\n      tempAttachment: [...this.state.tempAttachment, obj],\r\n    });\r\n  };\r\n\r\n  handleCloseEvent = async (event) => {\r\n    const options = {\r\n      id: this.state.id,\r\n      businessId: this.state.ticket.businessId,\r\n      //   subject: this.state.ticket.subject,\r\n      //   description: this.state.ticket.description,\r\n      status: 'Cancelled',\r\n    };\r\n    const ticket = await closeSupportTicket(options);\r\n    window.location.href = '/supports';\r\n  };\r\n\r\n  onchangeCommentHandler = (event) => {\r\n    this.setState({ comment: event.target.value });\r\n  };\r\n\r\n  onUpload() {\r\n    this.setState({ loading: true });\r\n    requestFileUpload(this.state.selectedFile)\r\n      .then((response) => {\r\n        this.saveAttachment(response)\r\n          .then((responseData) => {\r\n            this.setState({\r\n              loading: false,\r\n              open: true,\r\n              isTemp: false,\r\n              isUploaded: false,\r\n              message: 'Upload complete',\r\n              responseData: responseData,\r\n            });\r\n            setTimeout(() => this.setState({ open: false }), 4000);\r\n          })\r\n          .catch((err) => console.log(err));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  saveAttachment(data) {\r\n    return new Promise((resolve, reject) => {\r\n      let upload = data.data[0];\r\n      let file = {\r\n        supportTicketId: this.state.ticket.id,\r\n        filePath: upload.fileURL,\r\n        fileName: getFileName(upload.fileURL),\r\n        userId: this.props.user.id,\r\n      };\r\n      saveAttachment(file)\r\n        .then((results) => {\r\n          this.getSupportAttachment();\r\n          resolve(results);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    });\r\n  }\r\n\r\n  async saveCommentHandler() {\r\n    let data = {\r\n      supportTicketId: this.state.id,\r\n      userId: this.props.user.id,\r\n      comment: this.state.comment,\r\n    };\r\n    let comments = await saveComment(data);\r\n    this.getSupportCommentById();\r\n    this.setState({ comment: '' });\r\n  }\r\n\r\n  renderTempAttachment() {\r\n    if (this.state.tempAttachment && this.state.isTemp) {\r\n      let attachments = this.state.tempAttachment.map((item, key) => (\r\n        <ListItem key={key}>\r\n          <Grid container spacing={3} justify='space-between'>\r\n            <Grid item xs={6}>\r\n              <ListItemText primary={item.name} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <a href='javascript_void(0)'>\r\n                <IconButton aria-label='download'>\r\n                  <GetAppIcon fontSize='small' />\r\n                </IconButton>\r\n              </a>\r\n              <IconButton aria-label='Delete'>\r\n                <DeleteIcon fontSize='small' />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </ListItem>\r\n      ));\r\n      return attachments;\r\n    }\r\n  }\r\n\r\n  renderAttachment() {\r\n    if (this.state.attachments) {\r\n      let attachments = this.state.attachments.map((item, key) => (\r\n        <TicketSupportAttachment\r\n          key={key}\r\n          data={item}\r\n          onAttachmentChanged={this.handleAttachment}\r\n        />\r\n      ));\r\n      return attachments;\r\n    } else {\r\n      return (\r\n        <>\r\n          <ListItem>No Attachments</ListItem>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderComment() {\r\n    if (this.state.comments) {\r\n      let comment = this.state.comments.map((item, key) => (\r\n        <List\r\n          key={`comment-${key}`}\r\n          component='nav'\r\n          className={classes.root}\r\n          aria-label='Mailbox folders'\r\n        >\r\n          <ListItem>\r\n            <Typography>\r\n              {item.user.firstName} {item.user.lastName} added a comment -{' '}\r\n              {moment(item.dateCreated).format('LLL')}\r\n            </Typography>\r\n          </ListItem>\r\n          <ListItem>\r\n            <Typography>{item.comment}</Typography>\r\n          </ListItem>\r\n          <Divider light />\r\n        </List>\r\n      ));\r\n      return comment;\r\n    }\r\n  }\r\n\r\n  commentForm() {\r\n    if (this.state.toggleForm) {\r\n      return (\r\n        <>\r\n          <Grid item xs={12}>\r\n            <List\r\n              component='nav'\r\n              className={classes.root}\r\n              aria-label='Mailbox folders'\r\n            >\r\n              <ListItem>\r\n                <TextField\r\n                  id='outlined-multiline-static'\r\n                  label='Comment'\r\n                  multiline\r\n                  rows='4'\r\n                  className={classes.textField}\r\n                  margin='normal'\r\n                  variant='outlined'\r\n                  onChange={this.onchangeCommentHandler}\r\n                  value={this.state.comment}\r\n                />\r\n              </ListItem>\r\n            </List>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <ListItem>\r\n              <Button\r\n                variant='contained'\r\n                color='default'\r\n                style={{ marginRight: '20px' }}\r\n                onClick={() => this.setState({ toggleForm: false })}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                variant='contained'\r\n                color='primary'\r\n                onClick={() => this.saveCommentHandler()}\r\n              >\r\n                Save\r\n              </Button>\r\n            </ListItem>\r\n          </Grid>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className='kt-portlet'>\r\n          <div className='kt-portlet__head'>\r\n            <div className='kt-portlet__head-label'>\r\n              <h3 className='kt-portlet__head-title'>Support Request</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='kt-portlet kt-portlet--height-fluid'>\r\n          <div className='kt-portlet__head'>\r\n            <div className='kt-portlet__head-label'>\r\n              <h3 className='kt-portlet__head-title'>\r\n                # {this.state.ticket ? this.state.ticket.ticketNumber : ''} /{' '}\r\n                {this.state.ticket ? this.state.ticket.subject : ''}\r\n              </h3>\r\n            </div>\r\n            {this.state.ticket?.active ? (\r\n              <SupportTicketDropdown handleClose={this.handleCloseEvent} />\r\n            ) : null}\r\n          </div>\r\n          <div className='kt-portlet__body'>\r\n            <div className='kt-widget4'>\r\n              <List\r\n                component='nav'\r\n                className={classes.root}\r\n                aria-label='Mailbox folders'\r\n              >\r\n                <ListItem>\r\n                  <Grid container spacing={3} justify='space-between'>\r\n                    <Grid item xs={4}>\r\n                      <PersonIcon />{' '}\r\n                      {this.state.ticket\r\n                        ? this.state.ticket.user.firstName\r\n                        : ''}{' '}\r\n                      {this.state.ticket ? this.state.ticket.user.lastName : ''}\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <MailOutlineIcon />{' '}\r\n                      {this.state.ticket ? this.state.ticket.user.email : ''}\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <div>\r\n                        {' '}\r\n                        {this.state.ticket ? this.state.ticket.status : ''}{' '}\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </ListItem>\r\n                <Divider light />\r\n              </List>\r\n              <Grid container spacing={3} justify='center'>\r\n                <Grid item xs={12}>\r\n                  <Typography className={classes.heading}>\r\n                    Description\r\n                  </Typography>\r\n                  <hr />\r\n                  <Grid container spacing={3} justify='space-between'>\r\n                    <Grid item xs={12}>\r\n                      <Typography style={{ fontWeight: 'bold', fontSize: 20 }}>\r\n                        {this.state.ticket?.description}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container spacing={3} justify='center'>\r\n                <Grid item xs={12}>\r\n                  <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                      expandIcon={<ExpandMoreIcon />}\r\n                      aria-controls='panel1a-content'\r\n                      id='panel1a-header'\r\n                    >\r\n                      <Typography className={classes.heading}>\r\n                        Attachments\r\n                      </Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                      <Grid container spacing={3} justify='space-between'>\r\n                        <Grid item xs={12}>\r\n                          <Typography>\r\n                            Note:Upload attachment extension allow:.pdf, .xlsx,\r\n                            .xls, .png, .doc, .docx, .jpg, .jpeg, .csv, .txt\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <input\r\n                            style={{ display: 'none' }}\r\n                            id='contained-button-file'\r\n                            type='file'\r\n                            onChange={this.onChangeHandler}\r\n                          />\r\n                          <label htmlFor='contained-button-file'>\r\n                            <Button\r\n                              variant='contained'\r\n                              color='default'\r\n                              component='span'\r\n                              startIcon={<CloudUploadIcon />}\r\n                            >\r\n                              Upload\r\n                            </Button>\r\n                          </label>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <List\r\n                            component='nav'\r\n                            className={classes.root}\r\n                            aria-label='Mailbox folders'\r\n                          >\r\n                            <ListItem>\r\n                              <Grid\r\n                                container\r\n                                spacing={3}\r\n                                justify='space-between'\r\n                              >\r\n                                <Grid item xs={6}>\r\n                                  <ListItemText primary='Filename' />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                  <ListItemText primary='Action' />\r\n                                </Grid>\r\n                              </Grid>\r\n                            </ListItem>\r\n                            <Divider light />\r\n                            {this.renderAttachment()}\r\n                            {this.renderTempAttachment()}\r\n                          </List>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <div style={this.class.wrapper}>\r\n                            {this.state.isUploaded && (\r\n                              <Button\r\n                                variant='contained'\r\n                                color='primary'\r\n                                //disableElevation\r\n                                style={this.class.wrapper}\r\n                                disabled={this.state.loading}\r\n                                onClick={this.onUpload}\r\n                              >\r\n                                Save\r\n                              </Button>\r\n                            )}\r\n                            {this.state.loading && (\r\n                              <CircularProgress\r\n                                size={24}\r\n                                style={this.class.buttonProgress}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </ExpansionPanelDetails>\r\n                  </ExpansionPanel>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid container spacing={3} justify='center'>\r\n                <Grid item xs={12}></Grid>\r\n              </Grid>\r\n              <Grid container spacing={3} justify='center'>\r\n                <Grid item xs={12}>\r\n                  <Grid item xs={12}>\r\n                    <ExpansionPanel>\r\n                      <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls='panel1a-content'\r\n                        id='panel1a-header'\r\n                      >\r\n                        <Typography className={classes.heading}>\r\n                          Comments\r\n                        </Typography>\r\n                      </ExpansionPanelSummary>\r\n                      <ExpansionPanelDetails>\r\n                        <Grid container spacing={3} justify='center'>\r\n                          <Grid item xs={12}>\r\n                            {this.renderComment()}\r\n                          </Grid>\r\n                          {!this.state.toggleForm && (\r\n                            <Grid item xs={12}>\r\n                              <List\r\n                                component='nav'\r\n                                className={classes.root}\r\n                                aria-label='Mailbox folders'\r\n                              >\r\n                                <ListItem>\r\n                                  <Button\r\n                                    variant='contained'\r\n                                    color='primary'\r\n                                    // disableElevation\r\n                                    onClick={() =>\r\n                                      this.setState({ toggleForm: true })\r\n                                    }\r\n                                  >\r\n                                    Comment\r\n                                  </Button>\r\n                                </ListItem>\r\n                              </List>\r\n                            </Grid>\r\n                          )}\r\n                          {this.commentForm()}\r\n                        </Grid>\r\n                      </ExpansionPanelDetails>\r\n                    </ExpansionPanel>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Snackbar\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={this.state.open}\r\n                message={this.state.message}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.auth.user,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TicketViewUpdateComponent);\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport SupportViewComponent from './components/SupportViewComponent';\r\nimport TicketViewUpdateComponent from './components/TicketViewUpdateComponent';\r\nexport default function SupportComponent() {\r\n    return (\r\n        <Switch>\r\n            <Redirect exact={true} from=\"/\" to=\"/supports\"/>\r\n            <Route path=\"/supports/:id\" component={TicketViewUpdateComponent} />\r\n            <Route path=\"/supports\" component={SupportViewComponent} />\r\n        </Switch>\r\n    )\r\n}"],"sourceRoot":""}