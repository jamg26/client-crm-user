{"version":3,"sources":["app/pages/home/Modal.js","app/services/support.service.js","app/pages/home/support/components/tickets/TicketInput.js","app/pages/home/support/components/tickets/TicketsCloseComponent.js","app/pages/home/support/components/tickets/TicketsOpenComponent.js","app/services/aws.service.js","app/pages/home/support/components/tickets/TicketAdd.js","app/pages/shared/Notify.js","app/pages/home/support/components/SupportViewComponent.js","app/partials/content/CustomDropdowns/SupportTicketDropdown.js","app/pages/home/support/components/TicketSupportAttachment.js","app/pages/home/support/components/TicketViewUpdateComponent.js","app/pages/home/support/SupportComponent.js"],"names":["ModalTable","props","size","dialogClassName","show","open","onHide","handleClose","centered","Header","closeButton","Title","title","Body","children","ROOT_URL","process","saveNewTicketSupport","ticket","axios","post","saveAttachment","file","getAttachment","id","get","deleteAttachment","delete","config","ContactsInput","onSubmit","handleSubmit","Container","Row","Col","xs","InputGroup","className","TextField","onChange","handleChange","label","value","data","subject","variant","InputLabelProps","shrink","fullWidth","required","description","rows","multiline","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","Input","type","Button","color","TicketsCloseComponent","useState","state","setState","propsData","isModalOpen","setIsModalOpen","input","setInput","reRender","setRerender","useEffect","a","response","columns","render","rowData","href","onClick","history","push","pathname","EditOutlined","twoToneColor","dataIndex","moment","format","reverse","fetchData","handleSubmitTicket","e","preventDefault","newInput","businessId","TicketInput","target","dataSource","bordered","showHeader","loading","TicketsAllComponent","editTicketSupport","S3","bucketName","dirName","region","accessKeyId","secretAccessKey","fileUpload","console","log","TicketAdd","initialInput","attachments","fileName","filePath","attached","setAttached","ticketBtn","setTicketBtn","addFile","formData","FormData","append","files","fileURL","newParam","option","newAttached","supportTicketId","notification","message","window","location","reload","disabled","TabContainer","dir","Typography","component","useStyles","makeStyles","theme","root","backgroundColor","palette","background","paper","width","SupportViewComponent","classes","useTheme","React","setValue","AppBar","position","Tabs","event","newValue","indicatorColor","textColor","Tab","axis","direction","index","onChangeIndex","TicketsOpenComponent","SupportTicketDropdown","handleCloseEvent","bind","this","Dropdown","drop","alignRight","Toggle","Menu","Component","TicketSupportAttachment","deleteAttachmentHandler","deleteData","getdata","onAttachmentChanged","ListItem","Grid","container","spacing","justify","item","ListItemText","primary","getFileName","download","rel","IconButton","aria-label","fontSize","Divider","light","renderAttachments","flexGrow","textAlign","wrapper","buttonProgress","green","top","left","marginTop","marginLeft","TicketViewUpdateComponent","handleAttachment","onChangeHandler","obj","name","selectedFile","loaded","isUploaded","isTemp","tempAttachment","options","status","patch","onchangeCommentHandler","comment","toggleForm","match","params","onUpload","class","geSupportTicketData","getSupportAttachment","getSupportCommentById","then","results","catch","err","comments","url","requestFileUpload","responseData","setTimeout","Promise","resolve","reject","upload","userId","user","map","key","List","firstName","lastName","dateCreated","textField","margin","style","marginRight","saveCommentHandler","ticketNumber","active","email","heading","fontWeight","display","htmlFor","startIcon","renderAttachment","renderTempAttachment","CircularProgress","renderComment","commentForm","Snackbar","anchorOrigin","vertical","horizontal","connect","auth","SupportComponent","exact","from","to","path"],"mappings":"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","file":"static/js/18.c46ce89f.chunk.js","sourcesContent":["import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nconst ModalTable = props => {\r\n  return (\r\n    <div>\r\n      <Modal\r\n        size='lg'\r\n        dialogClassName='modal-90w'\r\n        show={props.open}\r\n        onHide={props.handleClose}\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{props.title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{props.children}</Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalTable;\r\n","import axios from 'axios';\r\nimport { post } from 'axios';\r\n\r\nexport const ROOT_URL = process.env.REACT_APP_API_URL;\r\nexport const SUPPORT_TICKET = 'api/supportticket';\r\nexport const API_SUPPORT_TICKET = 'api/supportticket';\r\nexport const SUPPORT_TICKET_ATTACHMENT = 'attachment';\r\nexport const SUPPORT_COMMENT = 'comment';\r\n\r\nexport const FILE_UPLOAD_URL = 'api/fileupload';\r\n\r\n///api/SupportTicket/Attachment/{SupportTicketCommentId}\r\n\r\nexport function getAllSupportTicket() {\r\n  return axios.get(`${ROOT_URL}/${SUPPORT_TICKET}`);\r\n}\r\n\r\nexport function getOpenSupportTicket() {\r\n  return axios.get(`${ROOT_URL}/${SUPPORT_TICKET}/active`);\r\n}\r\n\r\nexport function getClosedSupportTicket() {\r\n  return axios.get(`${ROOT_URL}/${SUPPORT_TICKET}/closed`);\r\n}\r\n\r\nexport function getTicketById(id) {\r\n  return axios.get(`${ROOT_URL}/${SUPPORT_TICKET}/${id}`);\r\n}\r\n\r\nexport function saveNewTicketSupport(ticket) {\r\n  return axios.post(`${ROOT_URL}/${API_SUPPORT_TICKET}/`, ticket);\r\n}\r\n\r\nexport function addSupportTicket(option) {\r\n  return axios.post(`${ROOT_URL}/${SUPPORT_TICKET}`, option);\r\n}\r\n\r\nexport function closeSupportTicket(option) {\r\n  return axios.patch(`${ROOT_URL}/${SUPPORT_TICKET}`, option);\r\n}\r\n\r\n//attachment\r\n\r\nexport function saveAttachment(file) {\r\n  return axios.post(`${ROOT_URL}/${SUPPORT_TICKET_ATTACHMENT}`, file);\r\n}\r\n\r\nexport function getAttachment(id) {\r\n  return axios.get(`${ROOT_URL}/${SUPPORT_TICKET_ATTACHMENT}/${id}`);\r\n}\r\n\r\nexport function deleteAttachment(id) {\r\n  return axios.delete(\r\n    `${ROOT_URL}/${API_SUPPORT_TICKET}/${SUPPORT_TICKET_ATTACHMENT}/${id}`\r\n  );\r\n}\r\n\r\n//comment\r\n\r\nexport function getCommentById(id) {\r\n  return axios.get(`${ROOT_URL}/${SUPPORT_COMMENT}/${id}`);\r\n}\r\n\r\nexport function saveComment(comment) {\r\n  return axios.post(`${ROOT_URL}/${SUPPORT_COMMENT}`, comment);\r\n}\r\n\r\n// UPLOAD\r\nconst config = {\r\n  'content-type': 'multipart/form-data'\r\n};\r\n\r\nexport function requestFileUpload(file) {\r\n  var formData = new FormData();\r\n\r\n  const url = `${ROOT_URL}/${FILE_UPLOAD_URL}`;\r\n  formData.append('files', file);\r\n  return post(url, formData, config);\r\n}\r\n","import React from 'react';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  ExpansionPanel,\r\n  ExpansionPanelDetails,\r\n  ExpansionPanelSummary,\r\n  Input\r\n} from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Container, InputGroup, Row, Col } from 'react-bootstrap';\r\n\r\nconst ContactsInput = props => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Container>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={props.handleChange}\r\n                id='subject'\r\n                label='Subject'\r\n                className=''\r\n                value={props.data.subject}\r\n                variant='outlined'\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n                fullWidth={true}\r\n                required\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs={12}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={props.handleChange}\r\n                id='description'\r\n                label='Description'\r\n                className=''\r\n                value={props.data.description}\r\n                variant='outlined'\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n                fullWidth={true}\r\n                rows={4}\r\n                multiline\r\n                required\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs={12}>\r\n            <ExpansionPanel>\r\n              <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls='panel1bh-content'\r\n                id='panel1bh-header'\r\n              >\r\n                Attachments\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n                <Input type='file' />\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n          </Col>\r\n          <Col xs={12}>\r\n            <InputGroup>\r\n              <Button\r\n                type='submit'\r\n                size='large'\r\n                className='float-right mt-3'\r\n                variant='contained'\r\n                color='primary'\r\n              >\r\n                Confirm\r\n              </Button>\r\n            </InputGroup>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactsInput;\r\n","import React, { useState, useEffect } from 'react';\r\n// import MaterialTable from 'material-table';\r\nimport * as moment from 'moment';\r\nimport {\r\n  //getOpenSupportTicket,\r\n  saveNewTicketSupport,\r\n  getClosedSupportTicket\r\n} from '../../../../../services/support.service';\r\nimport { Table } from 'antd';\r\nimport { EditOutlined } from '@ant-design/icons';\r\n\r\n// import { Button, CircularProgress } from '@material-ui/core';\r\nimport TableModal from '../../../Modal';\r\n// import { Row, Col } from 'react-bootstrap';\r\nimport TicketInput from './TicketInput';\r\n\r\nconst TicketsCloseComponent = props => {\r\n  const [state, setState] = useState(0);\r\n  const propsData = props.props;\r\n\r\n  const initialInput = {\r\n    id: '',\r\n    subject: '',\r\n    description: ''\r\n  };\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  // const [isUpdate, setIsUpdate] = useState(false);\r\n  const [input, setInput] = useState(initialInput);\r\n  const [reRender, setRerender] = useState(false); // Re render table after updating\r\n\r\n  const editTicketSupport = data => {\r\n    propsData.history.push({\r\n      pathname: `supports/${data.id}`,\r\n      data: data\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setState(0);\r\n    const fetchData = async () => {\r\n      const response = await getClosedSupportTicket();\r\n      setState({\r\n        columns: [\r\n          {\r\n            title: 'Action',\r\n            render: rowData => (\r\n              <a href='/#' onClick={() => editTicketSupport(rowData)}>\r\n                <EditOutlined twoToneColor='#1a88d9' />\r\n              </a>\r\n            )\r\n          },\r\n          { title: 'Status', dataIndex: 'status' },\r\n          { title: 'Ticket#', dataIndex: 'ticketNumber' },\r\n          { title: 'Subject', dataIndex: 'subject' },\r\n          {\r\n            title: 'Requested On',\r\n            dataIndex: 'dateCreated',\r\n            render: rowData => `${moment(rowData).format('LLL')}`\r\n          }\r\n        ],\r\n        data: response.data.reverse()\r\n      });\r\n    };\r\n    fetchData();\r\n  }, [reRender]);\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setInput({\r\n      ...input,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmitTicket = async e => {\r\n    e.preventDefault();\r\n    const newInput = {\r\n      ...input,\r\n      businessId: 'R2PPfBhpaLA.'\r\n    };\r\n\r\n    // if (isUpdate) {\r\n    //   try {\r\n    //     //await addContacts(input);\r\n    //     //notify({ success: true, message: 'Success updating master Contact.' });\r\n    //   } catch (error) {}\r\n    // }\r\n    // if (!isUpdate) {\r\n    //   try {\r\n    //     //await updateContact(input);\r\n    //     await saveNewTicketSupport(newInput);\r\n    //     //notify({ success: true, message: 'Success adding master Contact.' });\r\n    //   } catch (error) {}\r\n    // }\r\n    await saveNewTicketSupport(newInput);\r\n    setIsModalOpen(false);\r\n    setRerender(!reRender);\r\n  };\r\n\r\n  // const refreshTable = () => {\r\n  //   setRerender(!reRender);\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <TableModal\r\n        type='ticket'\r\n        title='Support Ticket'\r\n        open={isModalOpen}\r\n        handleClose={closeModal}\r\n      >\r\n        <TicketInput\r\n          data={input}\r\n          handleChange={handleChange}\r\n          handleSubmit={handleSubmitTicket}\r\n        />\r\n      </TableModal>\r\n\r\n      <Table\r\n        columns={state.columns}\r\n        dataSource={state.data}\r\n        title={() => ''}\r\n        // title={() => <Button onClick={refreshTable}>Refresh</Button>}\r\n        bordered\r\n        size='small'\r\n        showHeader\r\n        loading={!state.data ? true : false}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TicketsCloseComponent;\r\n","import React, { useState, useEffect } from 'react';\r\n// import MaterialTable from 'material-table';\r\nimport * as moment from 'moment';\r\nimport {\r\n  getOpenSupportTicket,\r\n  saveNewTicketSupport\r\n} from '../../../../../services/support.service';\r\nimport { Table } from 'antd';\r\nimport { EditOutlined } from '@ant-design/icons';\r\n\r\n// import { Button, CircularProgress } from '@material-ui/core';\r\nimport TableModal from '../../../Modal';\r\n// import { Row, Col } from 'react-bootstrap';\r\nimport TicketInput from './TicketInput';\r\n\r\nconst TicketsAllComponent = props => {\r\n  const [state, setState] = useState(0);\r\n  const propsData = props.props;\r\n\r\n  const initialInput = {\r\n    id: '',\r\n    subject: '',\r\n    description: ''\r\n  };\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  // const [isUpdate, setIsUpdate] = useState(false);\r\n  const [input, setInput] = useState(initialInput);\r\n  const [reRender, setRerender] = useState(false); // Re render table after updating\r\n\r\n  useEffect(() => {\r\n    setState(0);\r\n    const fetchData = async () => {\r\n      const response = await getOpenSupportTicket();\r\n      setState({\r\n        columns: [\r\n          {\r\n            title: 'Action',\r\n            render: rowData => (\r\n              <a href='/#' onClick={() => editTicketSupport(rowData)}>\r\n                <EditOutlined twoToneColor='#1a88d9' />\r\n              </a>\r\n            )\r\n          },\r\n          { title: 'Status', dataIndex: 'status' },\r\n          { title: 'Ticket#', dataIndex: 'ticketNumber' },\r\n          { title: 'Subject', dataIndex: 'subject' },\r\n          {\r\n            title: 'Requested On',\r\n            dataIndex: 'dateCreated',\r\n            render: rowData => `${moment(rowData).format('LLL')}`\r\n          }\r\n        ],\r\n        data: response.data.reverse()\r\n      });\r\n    };\r\n    fetchData();\r\n  }, [reRender]);\r\n\r\n  const editTicketSupport = data => {\r\n    propsData.history.push({\r\n      pathname: `supports/${data.id}`,\r\n      data: data\r\n    });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setInput({\r\n      ...input,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmitTicket = async e => {\r\n    e.preventDefault();\r\n    const newInput = {\r\n      ...input,\r\n      businessId: 'R2PPfBhpaLA.'\r\n    };\r\n\r\n    // if (isUpdate) {\r\n    //   try {\r\n    //     //await addContacts(input);\r\n    //     //notify({ success: true, message: 'Success updating master Contact.' });\r\n    //   } catch (error) {}\r\n    // }\r\n    // if (!isUpdate) {\r\n    //   try {\r\n    //     //await updateContact(input);\r\n    //     await saveNewTicketSupport(newInput);\r\n    //     //notify({ success: true, message: 'Success adding master Contact.' });\r\n    //   } catch (error) {}\r\n    // }\r\n    await saveNewTicketSupport(newInput);\r\n    setIsModalOpen(false);\r\n    setRerender(!reRender);\r\n  };\r\n\r\n  // const refreshTable = () => {\r\n  //   setRerender(!reRender);\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <TableModal\r\n        type='ticket'\r\n        title='Support Ticket'\r\n        open={isModalOpen}\r\n        handleClose={closeModal}\r\n      >\r\n        <TicketInput\r\n          data={input}\r\n          handleChange={handleChange}\r\n          handleSubmit={handleSubmitTicket}\r\n        />\r\n      </TableModal>\r\n\r\n      <Table\r\n        columns={state.columns}\r\n        dataSource={state.data}\r\n        title={() => ''}\r\n        // title={() => <Button onClick={refreshTable}>Refresh</Button>}\r\n        bordered\r\n        size='small'\r\n        showHeader\r\n        loading={!state.data ? true : false}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TicketsAllComponent;\r\n","import S3 from 'react-aws-s3';\r\nimport axios from 'axios';\r\n\r\nconst config = {\r\n  bucketName: process.env.REACT_APP_BUCKET,\r\n  dirName: 'support/attachment',\r\n  region: process.env.REACT_APP_REGION,\r\n  accessKeyId: process.env.REACT_APP_ACCESS_KEY_ID,\r\n  secretAccessKey: process.env.REACT_APP_AWS_SECRET_KEY\r\n};\r\n\r\nconst ReactS3Client = new S3(config);\r\n\r\nexport function awsServices(file) {\r\n  return new Promise((resolve, reject) => {\r\n    let newFileName = `${Date.now()}-support-attachment`;\r\n    ReactS3Client.uploadFile(file, newFileName)\r\n      .then(data => resolve(data))\r\n      .catch(err => reject(err));\r\n  });\r\n}\r\n\r\nexport const ROOT_URL = process.env.REACT_APP_API_URL;\r\n\r\nexport function fileUpload(file) {\r\n  console.log(`${ROOT_URL}/api/fileupload`, file);\r\n  return axios.post(`${ROOT_URL}/api/fileupload`, file);\r\n}\r\n","import React, { useState } from 'react';\r\nimport {\r\n  addSupportTicket,\r\n  saveAttachment\r\n} from '../../../../../services/support.service';\r\nimport { fileUpload } from '../../../../../services/aws.service';\r\n\r\nimport {\r\n  TextField,\r\n  Button,\r\n  ExpansionPanel,\r\n  ExpansionPanelDetails,\r\n  ExpansionPanelSummary,\r\n  Input\r\n} from '@material-ui/core';\r\nimport { InputGroup, Row, Col } from 'react-bootstrap';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { notify } from '../../../../shared/Notify';\r\n\r\nconst TicketAdd = () => {\r\n  const initialInput = {\r\n    id: '',\r\n    subject: '',\r\n    description: '',\r\n    attachments: ''\r\n  };\r\n  const [input, setInput] = useState(initialInput);\r\n  const [attached, setAttached] = useState({ fileName: '', filePath: '' });\r\n  const [ticketBtn, setTicketBtn] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    setInput({\r\n      ...input,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  const addFile = async e => {\r\n    var formData = new FormData();\r\n    formData.append('files', e.target.files[0]);\r\n    const file = await fileUpload(formData);\r\n    setAttached({\r\n      fileName: file.data[0].fileName,\r\n      filePath: file.data[0].fileURL\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setTicketBtn(true);\r\n    const newParam = {\r\n      ...input,\r\n      businessId: 'R2PPfBhpaLA.'\r\n    };\r\n\r\n    const ticket = await addSupportTicket(newParam);\r\n\r\n    const newAttached = { ...attached, supportTicketId: ticket.data.id };\r\n    await saveAttachment(newAttached);\r\n\r\n    setInput(initialInput);\r\n    setAttached({ fileName: '', filePath: '' });\r\n    setTicketBtn(false);\r\n    notify('Ticket submitted.');\r\n    window.location.reload(false);\r\n  };\r\n\r\n  return (\r\n    <div className='mt-5'>\r\n      <form onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={handleChange}\r\n                id='subject'\r\n                label='Subject'\r\n                className=''\r\n                value={input.subject}\r\n                variant='outlined'\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n                fullWidth={true}\r\n                // required\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs={12}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={handleChange}\r\n                id='description'\r\n                label='Description'\r\n                className=''\r\n                value={input.description}\r\n                variant='outlined'\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n                fullWidth={true}\r\n                rows={8}\r\n                multiline\r\n                // required\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs={12}>\r\n            <ExpansionPanel>\r\n              <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls='panel1bh-content'\r\n                id='panel1bh-header'\r\n              >\r\n                Attachments\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n                <Input id='attachments' type='file' onChange={addFile} />\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n          </Col>\r\n          <Col xs={12}>\r\n            <InputGroup>\r\n              <Button\r\n                type='submit'\r\n                size='large'\r\n                className='float-right mt-3'\r\n                variant='contained'\r\n                color='secondary'\r\n                disabled={ticketBtn}\r\n              >\r\n                Confirm\r\n              </Button>\r\n            </InputGroup>\r\n          </Col>\r\n        </Row>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TicketAdd;\r\n","import { notification } from 'antd';\r\n\r\nexport const notify = props => {\r\n  notification.open({\r\n    message: 'Notification',\r\n    description: `${props}`,\r\n    onClick: () => {}\r\n  });\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\n//components\r\nimport TicketsCloseComponent from './tickets/TicketsCloseComponent';\r\nimport TicketsOpenComponent from './tickets/TicketsOpenComponent';\r\n// import TicketCreateComponent from './tickets/TicketCreateComponent';\r\nimport TicketAdd from './tickets/TicketAdd';\r\n\r\nfunction TabContainer({ children, dir }) {\r\n  return (\r\n    <Typography component='div' dir={dir}>\r\n      {children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  dir: PropTypes.string.isRequired\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: '100%'\r\n  }\r\n}));\r\n\r\nexport default function SupportViewComponent(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  function handleChange(event, newValue) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  function handleChangeIndex(index) {\r\n    setValue(index);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position='static' color='default'>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor='secondary'\r\n          textColor='secondary'\r\n          variant='fullWidth'\r\n        >\r\n          <Tab label='Open' />\r\n          <Tab label='Closed' />\r\n          {/* <Tab label='Create Ticket' /> */}\r\n          <Tab label='Open a Ticket' />\r\n        </Tabs>\r\n      </AppBar>\r\n      <SwipeableViews\r\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n        <TabContainer dir={theme.direction}>\r\n          <TicketsOpenComponent props={props} />\r\n        </TabContainer>\r\n        <TabContainer dir={theme.direction}>\r\n          <TicketsCloseComponent props={props} />\r\n        </TabContainer>\r\n        {/* <TabContainer dir={theme.direction}>\r\n          <TicketCreateComponent props={props} />\r\n        </TabContainer> */}\r\n        <TabContainer dir={theme.direction}>\r\n          <TicketAdd props={props} />\r\n        </TabContainer>\r\n      </SwipeableViews>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nclass SupportTicketDropdown extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleCloseEvent = this.handleCloseEvent.bind(this);\r\n  }\r\n\r\n  handleCloseEvent() {\r\n    this.props.handleClose(true);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Dropdown className='kt-portlet__head-toolbar' drop='down' alignRight>\r\n        <Dropdown.Toggle\r\n          variant='transparent'\r\n          className='btn btn-label-success btn-sm btn-bold dropdown-toggle'\r\n          id='dropdown-toggle-top'\r\n        >\r\n          Action\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu className='dropdown-menu-fit dropdown-menu-right'>\r\n          <ul className='kt-nav'>\r\n            <li className='kt-nav__item'>\r\n              <a\r\n                href='#'\r\n                className='kt-nav__link'\r\n                onClick={this.handleCloseEvent}\r\n              >\r\n                <i className='kt-nav__link-icon flaticon-close' />\r\n                <span className='kt-nav__link-text'>Cancel</span>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SupportTicketDropdown;\r\n","import React from 'react';\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  Divider,\r\n  Grid,\r\n  IconButton\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport { getFileName } from '../../../../../_metronic/utils/utils';\r\nimport {\r\n  deleteAttachment,\r\n  getAttachment\r\n} from '../../../../services/support.service';\r\n\r\nclass TicketSupportAttachment extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null\r\n    };\r\n    this.deleteAttachmentHandler = this.deleteAttachmentHandler.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ data: this.props.data });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps() {\r\n    this.setState({ data: this.props.data });\r\n  }\r\n\r\n  downloadFile(file) {\r\n    const response = {\r\n      file: file\r\n    };\r\n    window.location.href = response.file;\r\n  }\r\n\r\n  async deleteAttachmentHandler(id) {\r\n    let deleteData = await deleteAttachment(id);\r\n    let getdata = await getAttachment(deleteData.data.id);\r\n    this.props.onAttachmentChanged(getdata.data);\r\n  }\r\n\r\n  renderAttachments() {\r\n    if (this.state.data) {\r\n      return (\r\n        <>\r\n          <ListItem>\r\n            <Grid container spacing={3} justify='space-between'>\r\n              <Grid item xs={6}>\r\n                <ListItemText\r\n                  primary={\r\n                    this.state.data.fileName\r\n                      ? this.state.data.fileName\r\n                      : getFileName(this.state.data.filePath)\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <a\r\n                  href={this.state.data.filePath}\r\n                  download={this.state.data.filePath}\r\n                  target='_blank'\r\n                  rel='noopener noreferrer'\r\n                >\r\n                  <IconButton aria-label='download'>\r\n                    <GetAppIcon fontSize='small' />\r\n                  </IconButton>\r\n                </a>\r\n                <IconButton\r\n                  aria-label='Delete'\r\n                  onClick={() =>\r\n                    this.deleteAttachmentHandler(this.state.data.id)\r\n                  }\r\n                >\r\n                  <DeleteIcon fontSize='small' />\r\n                </IconButton>\r\n              </Grid>\r\n            </Grid>\r\n          </ListItem>\r\n          <Divider light />\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <>{this.renderAttachments()}</>;\r\n  }\r\n}\r\n\r\nexport default TicketSupportAttachment;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport SupportTicketDropdown from '../../../../partials/content/CustomDropdowns/SupportTicketDropdown';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { getTicketById } from '../../../../services/support.service';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\n//import PhoneIcon from '@material-ui/icons/Phone';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport * as moment from 'moment';\r\nimport { connect } from 'react-redux';\r\nimport { getFileName } from '../../../../../_metronic/utils/utils';\r\n//import { awsServices } from '../../../../services/aws.service';\r\nimport {\r\n  saveAttachment,\r\n  getAttachment,\r\n  getCommentById,\r\n  saveComment,\r\n  requestFileUpload,\r\n  closeSupportTicket\r\n} from '../../../../services/support.service';\r\nimport TicketSupportAttachment from './TicketSupportAttachment';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nconst classes = theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    textAlign: 'center'\r\n  },\r\n  wrapper: {\r\n    position: 'relative',\r\n    width: '100%'\r\n  },\r\n  buttonProgress: {\r\n    color: green[500],\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12\r\n  }\r\n});\r\n\r\nclass TicketViewUpdateComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedFile: null,\r\n      isUploaded: false,\r\n      toggleForm: false,\r\n      isTemp: true,\r\n      tempAttachment: [],\r\n      loading: false,\r\n      open: false,\r\n      id: this.props.match.params.id\r\n    };\r\n    this.onChangeHandler = this.onChangeHandler.bind(this);\r\n    this.handleAttachment = this.handleAttachment.bind(this);\r\n    this.onchangeCommentHandler = this.onchangeCommentHandler.bind(this);\r\n    this.onUpload = this.onUpload.bind(this);\r\n    this.class = classes();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.geSupportTicketData();\r\n    this.getSupportAttachment();\r\n    this.getSupportCommentById();\r\n  }\r\n\r\n  handleAttachment = data => {\r\n    this.setState({ attachments: data });\r\n    // getAttachment(attachments.id)\r\n    //     .then(results => this.setState({attachments: results.data}))\r\n    //     .catch(err => console.log(err))\r\n  };\r\n\r\n  geSupportTicketData() {\r\n    getTicketById(this.state.id)\r\n      .then(results => this.setState({ ticket: results.data }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  getSupportAttachment() {\r\n    getAttachment(this.state.id)\r\n      .then(results => this.setState({ attachments: results.data }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  getSupportCommentById() {\r\n    getCommentById(this.state.id)\r\n      .then(results => this.setState({ comments: results.data }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  onChangeHandler = event => {\r\n    let obj = {\r\n      name: event.target.files[0].name\r\n    };\r\n    this.setState({\r\n      selectedFile: event.target.files[0],\r\n      loaded: 0,\r\n      isUploaded: true,\r\n      isTemp: true,\r\n      tempAttachment: [...this.state.tempAttachment, obj]\r\n    });\r\n  };\r\n\r\n  handleCloseEvent = async event => {\r\n    const options = {\r\n      id: this.state.id,\r\n      businessId: this.state.ticket.businessId,\r\n      //   subject: this.state.ticket.subject,\r\n      //   description: this.state.ticket.description,\r\n      status: 'Cancelled'\r\n    };\r\n    await closeSupportTicket(options);\r\n    window.location.href = '/supports';\r\n  };\r\n\r\n  onchangeCommentHandler = event => {\r\n    this.setState({ comment: event.target.value });\r\n  };\r\n\r\n  onUpload() {\r\n    this.setState({ loading: true });\r\n    requestFileUpload(this.state.selectedFile)\r\n      .then(response => {\r\n        this.saveAttachment(response)\r\n          .then(responseData => {\r\n            this.setState({\r\n              loading: false,\r\n              open: true,\r\n              isTemp: false,\r\n              isUploaded: false,\r\n              message: 'Upload complete',\r\n              responseData: responseData\r\n            });\r\n            setTimeout(() => this.setState({ open: false }), 4000);\r\n          })\r\n          .catch(err => console.log(err));\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  saveAttachment(data) {\r\n    return new Promise((resolve, reject) => {\r\n      let upload = data.data[0];\r\n      let file = {\r\n        supportTicketId: this.state.ticket.id,\r\n        filePath: upload.fileURL,\r\n        fileName: getFileName(upload.fileURL),\r\n        userId: this.props.user.id\r\n      };\r\n      saveAttachment(file)\r\n        .then(results => {\r\n          this.getSupportAttachment();\r\n          resolve(results);\r\n        })\r\n        .catch(err => console.log(err));\r\n    });\r\n  }\r\n\r\n  async saveCommentHandler() {\r\n    let data = {\r\n      supportTicketId: this.state.id,\r\n      userId: this.props.user.id,\r\n      comment: this.state.comment\r\n    };\r\n    await saveComment(data);\r\n    this.getSupportCommentById();\r\n    this.setState({ comment: '' });\r\n  }\r\n\r\n  renderTempAttachment() {\r\n    if (this.state.tempAttachment && this.state.isTemp) {\r\n      let attachments = this.state.tempAttachment.map((item, key) => (\r\n        <ListItem key={key}>\r\n          <Grid container spacing={3} justify='space-between'>\r\n            <Grid item xs={6}>\r\n              <ListItemText primary={item.name} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <a href='javascript_void(0)'>\r\n                <IconButton aria-label='download'>\r\n                  <GetAppIcon fontSize='small' />\r\n                </IconButton>\r\n              </a>\r\n              <IconButton aria-label='Delete'>\r\n                <DeleteIcon fontSize='small' />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </ListItem>\r\n      ));\r\n      return attachments;\r\n    }\r\n  }\r\n\r\n  renderAttachment() {\r\n    if (this.state.attachments) {\r\n      let attachments = this.state.attachments.map((item, key) => (\r\n        <TicketSupportAttachment\r\n          key={key}\r\n          data={item}\r\n          onAttachmentChanged={this.handleAttachment}\r\n        />\r\n      ));\r\n      return attachments;\r\n    } else {\r\n      return (\r\n        <>\r\n          <ListItem>No Attachments</ListItem>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderComment() {\r\n    if (this.state.comments) {\r\n      let comment = this.state.comments.map((item, key) => (\r\n        <List\r\n          key={`comment-${key}`}\r\n          component='nav'\r\n          className={classes.root}\r\n          aria-label='Mailbox folders'\r\n        >\r\n          <ListItem>\r\n            <Typography>\r\n              {item.user.firstName} {item.user.lastName} added a comment -{' '}\r\n              {moment(item.dateCreated).format('LLL')}\r\n            </Typography>\r\n          </ListItem>\r\n          <ListItem>\r\n            <Typography>{item.comment}</Typography>\r\n          </ListItem>\r\n          <Divider light />\r\n        </List>\r\n      ));\r\n      return comment;\r\n    }\r\n  }\r\n\r\n  commentForm() {\r\n    if (this.state.toggleForm) {\r\n      return (\r\n        <>\r\n          <Grid item xs={12}>\r\n            <List\r\n              component='nav'\r\n              className={classes.root}\r\n              aria-label='Mailbox folders'\r\n            >\r\n              <ListItem>\r\n                <TextField\r\n                  id='outlined-multiline-static'\r\n                  label='Comment'\r\n                  multiline\r\n                  rows='4'\r\n                  className={classes.textField}\r\n                  margin='normal'\r\n                  variant='outlined'\r\n                  onChange={this.onchangeCommentHandler}\r\n                  value={this.state.comment}\r\n                />\r\n              </ListItem>\r\n            </List>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <ListItem>\r\n              <Button\r\n                variant='contained'\r\n                color='default'\r\n                style={{ marginRight: '20px' }}\r\n                onClick={() => this.setState({ toggleForm: false })}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                variant='contained'\r\n                color='primary'\r\n                onClick={() => this.saveCommentHandler()}\r\n              >\r\n                Save\r\n              </Button>\r\n            </ListItem>\r\n          </Grid>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className='kt-portlet'>\r\n          <div className='kt-portlet__head'>\r\n            <div className='kt-portlet__head-label'>\r\n              <h3 className='kt-portlet__head-title'>Support Request</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='kt-portlet kt-portlet--height-fluid'>\r\n          <div className='kt-portlet__head'>\r\n            <div className='kt-portlet__head-label'>\r\n              <h3 className='kt-portlet__head-title'>\r\n                # {this.state.ticket ? this.state.ticket.ticketNumber : ''} /{' '}\r\n                {this.state.ticket ? this.state.ticket.subject : ''}\r\n              </h3>\r\n            </div>\r\n            {this.state.ticket?.active ? (\r\n              <SupportTicketDropdown handleClose={this.handleCloseEvent} />\r\n            ) : null}\r\n          </div>\r\n          <div className='kt-portlet__body'>\r\n            <div className='kt-widget4'>\r\n              <List\r\n                component='nav'\r\n                className={classes.root}\r\n                aria-label='Mailbox folders'\r\n              >\r\n                <ListItem>\r\n                  <Grid container spacing={3} justify='space-between'>\r\n                    <Grid item xs={4}>\r\n                      <PersonIcon />{' '}\r\n                      {this.state.ticket\r\n                        ? this.state.ticket.user.firstName\r\n                        : ''}{' '}\r\n                      {this.state.ticket ? this.state.ticket.user.lastName : ''}\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <MailOutlineIcon />{' '}\r\n                      {this.state.ticket ? this.state.ticket.user.email : ''}\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <div>\r\n                        {' '}\r\n                        {this.state.ticket ? this.state.ticket.status : ''}{' '}\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </ListItem>\r\n                <Divider light />\r\n              </List>\r\n              <Grid container spacing={3} justify='center'>\r\n                <Grid item xs={12}>\r\n                  <Typography className={classes.heading}>\r\n                    Description\r\n                  </Typography>\r\n                  <hr />\r\n                  <Grid container spacing={3} justify='space-between'>\r\n                    <Grid item xs={12}>\r\n                      <Typography style={{ fontWeight: 'bold', fontSize: 20 }}>\r\n                        {this.state.ticket?.description}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container spacing={3} justify='center'>\r\n                <Grid item xs={12}>\r\n                  <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                      expandIcon={<ExpandMoreIcon />}\r\n                      aria-controls='panel1a-content'\r\n                      id='panel1a-header'\r\n                    >\r\n                      <Typography className={classes.heading}>\r\n                        Attachments\r\n                      </Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                      <Grid container spacing={3} justify='space-between'>\r\n                        <Grid item xs={12}>\r\n                          <Typography>\r\n                            Note:Upload attachment extension allow:.pdf, .xlsx,\r\n                            .xls, .png, .doc, .docx, .jpg, .jpeg, .csv, .txt\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <input\r\n                            style={{ display: 'none' }}\r\n                            id='contained-button-file'\r\n                            type='file'\r\n                            onChange={this.onChangeHandler}\r\n                          />\r\n                          <label htmlFor='contained-button-file'>\r\n                            <Button\r\n                              variant='contained'\r\n                              color='default'\r\n                              component='span'\r\n                              startIcon={<CloudUploadIcon />}\r\n                            >\r\n                              Upload\r\n                            </Button>\r\n                          </label>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <List\r\n                            component='nav'\r\n                            className={classes.root}\r\n                            aria-label='Mailbox folders'\r\n                          >\r\n                            <ListItem>\r\n                              <Grid\r\n                                container\r\n                                spacing={3}\r\n                                justify='space-between'\r\n                              >\r\n                                <Grid item xs={6}>\r\n                                  <ListItemText primary='Filename' />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                  <ListItemText primary='Action' />\r\n                                </Grid>\r\n                              </Grid>\r\n                            </ListItem>\r\n                            <Divider light />\r\n                            {this.renderAttachment()}\r\n                            {this.renderTempAttachment()}\r\n                          </List>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <div style={this.class.wrapper}>\r\n                            {this.state.isUploaded && (\r\n                              <Button\r\n                                variant='contained'\r\n                                color='primary'\r\n                                //disableElevation\r\n                                style={this.class.wrapper}\r\n                                disabled={this.state.loading}\r\n                                onClick={this.onUpload}\r\n                              >\r\n                                Save\r\n                              </Button>\r\n                            )}\r\n                            {this.state.loading && (\r\n                              <CircularProgress\r\n                                size={24}\r\n                                style={this.class.buttonProgress}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </ExpansionPanelDetails>\r\n                  </ExpansionPanel>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid container spacing={3} justify='center'>\r\n                <Grid item xs={12}></Grid>\r\n              </Grid>\r\n              <Grid container spacing={3} justify='center'>\r\n                <Grid item xs={12}>\r\n                  <Grid item xs={12}>\r\n                    <ExpansionPanel>\r\n                      <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls='panel1a-content'\r\n                        id='panel1a-header'\r\n                      >\r\n                        <Typography className={classes.heading}>\r\n                          Comments\r\n                        </Typography>\r\n                      </ExpansionPanelSummary>\r\n                      <ExpansionPanelDetails>\r\n                        <Grid container spacing={3} justify='center'>\r\n                          <Grid item xs={12}>\r\n                            {this.renderComment()}\r\n                          </Grid>\r\n                          {!this.state.toggleForm && (\r\n                            <Grid item xs={12}>\r\n                              <List\r\n                                component='nav'\r\n                                className={classes.root}\r\n                                aria-label='Mailbox folders'\r\n                              >\r\n                                <ListItem>\r\n                                  <Button\r\n                                    variant='contained'\r\n                                    color='primary'\r\n                                    // disableElevation\r\n                                    onClick={() =>\r\n                                      this.setState({ toggleForm: true })\r\n                                    }\r\n                                  >\r\n                                    Comment\r\n                                  </Button>\r\n                                </ListItem>\r\n                              </List>\r\n                            </Grid>\r\n                          )}\r\n                          {this.commentForm()}\r\n                        </Grid>\r\n                      </ExpansionPanelDetails>\r\n                    </ExpansionPanel>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Snackbar\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right'\r\n                }}\r\n                open={this.state.open}\r\n                message={this.state.message}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.auth.user\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TicketViewUpdateComponent);\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport SupportViewComponent from './components/SupportViewComponent';\r\nimport TicketViewUpdateComponent from './components/TicketViewUpdateComponent';\r\nexport default function SupportComponent() {\r\n    return (\r\n        <Switch>\r\n            <Redirect exact={true} from=\"/\" to=\"/supports\"/>\r\n            <Route path=\"/supports/:id\" component={TicketViewUpdateComponent} />\r\n            <Route path=\"/supports\" component={SupportViewComponent} />\r\n        </Switch>\r\n    )\r\n}"],"sourceRoot":""}