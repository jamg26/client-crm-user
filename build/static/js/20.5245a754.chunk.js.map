{"version":3,"sources":["app/services/account.service.js","app/pages/home/business/components/RegisterComponent.js","app/pages/home/business/components/BusinessProfileComponents.js","app/pages/home/business/components/businessLocations/InputBusinessLocation.js","app/pages/home/business/components/businessLocations/BusinessLocationCards.js","app/pages/home/business/components/BusinessLocationsComponents.js","app/pages/home/business/components/ViewComponent.js","app/pages/home/business/Business.js"],"names":["ROOT_URL","process","getAccountList","axios","get","registerAccount","accounts","post","updateAccount","patch","deleteAccount","id","delete","getIndustry","getAccountType","getParentAccount","industryIdVal","injectIntl","props","intl","useStyles","makeStyles","theme","formControl","marginTop","marginBottom","minWidth","selectIndustryHandleChange","event","target","value","setIndustry","selectParentAccountHandleChange","setParentAccount","selectCountryHandleChange","setCountry","selectCityHandleChange","setCity","selectStateHandleChange","setState","selectAccountTypeHandleChange","setAccountType","React","useState","industryId","country","city","state","parentAccountId","accountType","classes","className","initialValues","accountName","phone","website","addressLine","zipCode","validate","values","errors","formatMessage","onSubmit","setStatus","setSubmitting","then","accessToken","data","register","catch","status","touched","handleChange","handleBlur","handleSubmit","isSubmitting","noValidate","autoComplete","role","TextField","margin","label","name","onBlur","onChange","helperText","error","Boolean","FormControl","InputLabel","Select","labelId","MenuItem","disabled","acceptTerms","BusinessProfileComponents","getBusinessDetails","a","getBusiness","business","openNotification","message","notification","open","description","onClick","console","log","handleChangeLogo","e","persist","fileReaderInstance","FileReader","readAsDataURL","files","onload","base64data","result","idBlob","formData","FormData","append","updateBusinessLogo","handleChangeBanner","updateBusinessBanner","triggerBanner","banner","click","triggerLogo","logo","clearLogo","removeBusinessLogo","clearBanner","removeBusinessBanner","businessName","email","processing","onProcessing","bannerBlob","logoBlob","bind","this","newFormData","onUpdateProfile","Row","Col","xs","src","bannerUrl","alt","style","width","border","padding","ref","fileInput","type","hidden","Button","logoUrl","variant","required","Component","connect","user","auth","mainRole","InputBusinessLocation","Container","InputGroup","FormControlLabel","control","Switch","businessLocationName","fullWidth","InputLabelProps","shrink","size","color","BusinessLocationCards","cardStyle","showDeleteModal","showEditModal","currentTarget","dataset","onDeleteBusinessLoc","onEditBusinessLoc","map","Card","root","CardContent","Typography","component","pos","CardActions","IconButton","aria-label","data-id","data-two","fontSize","container","maxWidth","marginLeft","title","containerCard","display","BusinessLocationsComponents","userData","useSelector","notify","success","toast","isModalOpen","setIsModalOpen","isUpdate","setIsUpdate","reRender","setRerender","initialInput","isMainAddress","businessId","input","setInput","useEffect","getBusinessLocationList","businessLocation","responseLocation","dataLocation","fetchData","handleSubmitButton","preventDefault","updateBusinessLocation","saveBusinessLocation","locationData","getBusinessLocationData","response","upBusinessLocation","locationId","deleteBusinessLocation","handleClose","displayBusinessLocation","TabPanel","children","index","other","aria-labelledby","Box","p","a11yProps","flexGrow","backgroundColor","palette","background","paper","ViewComponent","setValue","processupdateBusinessProfile","setProcessupdateBusinessProfile","getUserByToken","HandleUpdateBusinessProfile","formDataBusinessProfile","updateBusinessProfile","err","AppBar","position","Tabs","newValue","scrollButtons","indicatorColor","textColor","Tab","icon","profileContainer","Business","exact","from","to","path","CreateBusiness","viewBusiness"],"mappings":"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","file":"static/js/20.5245a754.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const ROOT_URL = process.env.REACT_APP_API_URL;\r\nexport const ACCOUNT_URL = 'api/account';\r\nexport const ACCOUNT_INDUSTRY = 'api/config/industry';\r\nexport const ACCOUNT_TYPE = 'api/config/accounttype';\r\nexport const ACCOUNT_PARENT = 'api/Lead/TableView/Business';\r\n\r\nexport function getAccountList() {\r\n  return axios.get(`${ROOT_URL}/${ACCOUNT_URL}`);\r\n}\r\n\r\nexport function registerAccount(accounts) {\r\n  return axios.post(`${ROOT_URL}/${ACCOUNT_URL}`, accounts);\r\n}\r\n\r\nexport function updateAccount(accounts) {\r\n  return axios.patch(`${ROOT_URL}/${ACCOUNT_URL}`, accounts);\r\n}\r\n\r\nexport function deleteAccount(id) {\r\n  return axios.delete(`${ROOT_URL}/${ACCOUNT_URL}/${id}`);\r\n}\r\n\r\nexport function getIndustry() {\r\n  return axios.get(`${ROOT_URL}/${ACCOUNT_INDUSTRY}`);\r\n}\r\n\r\nexport function getAccountType() {\r\n  return axios.get(`${ROOT_URL}/${ACCOUNT_INDUSTRY}`);\r\n}\r\n\r\nexport function getParentAccount(id) {\r\n  return axios.get(`${ROOT_URL}/${ACCOUNT_PARENT}/${id}`);\r\n}\r\n","\r\nimport React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Checkbox, FormControlLabel, TextField, Select, MenuItem, InputLabel, FormControl } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport * as auth from \"../../../../store/ducks/auth.duck\";\r\nimport { registerAccount } from \"../../../../services/account.service\";\r\n\r\nvar industryIdVal = '';\r\nfunction RegisterComponent(props) {\r\n  const { intl } = props;\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n      marginTop: 16,\r\n      marginBottom: 8,\r\n      minWidth: '100%',\r\n    },\r\n  }));\r\n\r\n  \r\n  const selectIndustryHandleChange = event => {\r\n    industryIdVal = event.target.value;\r\n    setIndustry(event.target.value);\r\n  };\r\n\r\n   const selectParentAccountHandleChange = event => {\r\n    setParentAccount(event.target.value);\r\n  };\r\n\r\n  const selectCountryHandleChange = event => {\r\n    setCountry(event.target.value);\r\n  };\r\n\r\n  const selectCityHandleChange = event => {\r\n    setCity(event.target.value);\r\n  };\r\n\r\n  const selectStateHandleChange = event => {\r\n    setState(event.target.value);\r\n  };\r\n\r\n  const selectAccountTypeHandleChange = event => {\r\n    setAccountType(event.target.value);\r\n  };\r\n\r\n  const [industryId, setIndustry] = React.useState('');\r\n  const [country, setCountry] = React.useState('');\r\n  const [city, setCity] = React.useState('');\r\n  const [state, setState] = React.useState('');\r\n  const [parentAccountId, setParentAccount] = React.useState('');\r\n  const [accountType, setAccountType] = React.useState('');\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-6\">\r\n        <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n          <div className=\"kt-portlet\">\r\n            <div className=\"kt-portlet__head\">\r\n              <div className=\"kt-portlet__head-label\">\r\n                <h3 className=\"kt-portlet__head-title\">\r\n                  Account Details\r\n                </h3>\r\n              </div>\r\n            </div>\r\n\r\n            <Formik\r\n              initialValues={{\r\n                accountName: \"\",\r\n                phone: \"\",\r\n                website: \"\",\r\n                addressLine: \"\",\r\n                zipCode: \"\",\r\n                industryId: \"\"\r\n              }}\r\n              validate={values => {\r\n                const errors = {};\r\n\r\n                if (!values.accountName) {\r\n                  errors.accountName = intl.formatMessage({\r\n                    id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n                  });\r\n                }\r\n\r\n                if (!industryIdVal) {\r\n                  errors.industryId = intl.formatMessage({\r\n                    id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n                  });\r\n                }\r\n\r\n                if (!values.phone) {\r\n                  errors.phone = intl.formatMessage({\r\n                    id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n                  });\r\n                }\r\n\r\n                if (!values.website) {\r\n                  errors.website = intl.formatMessage({\r\n                    id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n                  });\r\n                }\r\n\r\n                if (!values.addressLine) {\r\n                  errors.addressLine = intl.formatMessage({\r\n                    id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n                  });\r\n                }\r\n\r\n                if (!values.zipCode) {\r\n                  errors.zipCode = intl.formatMessage({\r\n                    id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n                  });\r\n                }\r\n                return errors;\r\n              }}\r\n              onSubmit={(values, { setStatus, setSubmitting }) => {\r\n                registerAccount(\r\n                  {/*values.email,\r\n                  values.fullname,\r\n                  values.businessName,\r\n                  values.username,\r\n                  values.password*/}\r\n                )\r\n                  .then(({ data: { accessToken } }) => {\r\n                    props.register(accessToken);\r\n                  })\r\n                  .catch(() => {\r\n                    setSubmitting(false);\r\n                    setStatus(\r\n                        \"Invalid Registration\"\r\n                    );\r\n                  });\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                status,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                isSubmitting\r\n              }) => (\r\n                <form className=\"kt-form kt-form--label-right\" onSubmit={handleSubmit} noValidate autoComplete=\"off\">\r\n                  <div className=\"form-body\">\r\n\r\n                    <div className=\"kt-portlet__body\">\r\n                      {status && (\r\n                        <div className=\"form-group form-group-last\">\r\n                          <div className=\"alert alert-secondary\" role=\"alert\">\r\n                            <div className=\"alert-icon\"><i className=\"flaticon-warning kt-font-brand\"></i></div>\r\n                            <div className=\"alert-text\">{status}</div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    <div className=\"kt-portlet__head\">\r\n                      <div className=\"kt-portlet__head-label\">\r\n                        <h3 className=\"kt-portlet__head-title\">\r\n                          Account Info\r\n                        </h3>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6\">\r\n                        <div className=\"form-group mb-0\">\r\n                          <TextField\r\n                            margin=\"normal\"\r\n                            label=\"Account Name\"\r\n                            className=\"kt-width-full\"\r\n                            name=\"accountName\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            value={values.accountName}\r\n                            helperText={touched.accountName && errors.accountName}\r\n                            error={Boolean(touched.accountName && errors.accountName)}\r\n                          />\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-0\">\r\n                          <TextField\r\n                            margin=\"normal\"\r\n                            label=\"Phone Number\"\r\n                            className=\"kt-width-full\"\r\n                            name=\"phone\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            value={values.phone}\r\n                            helperText={touched.phone && errors.phone}\r\n                            error={Boolean(touched.phone && errors.phone)}\r\n                          />\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-0\">\r\n                          <TextField\r\n                            margin=\"normal\"\r\n                            label=\"Website\"\r\n                            className=\"kt-width-full\"\r\n                            name=\"website\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            value={values.website}\r\n                            helperText={touched.website && errors.website}\r\n                            error={Boolean(touched.website && errors.website)}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"col-md-6\">\r\n                        <div className=\"form-group mb-0\">\r\n                          <FormControl className={classes.formControl}>\r\n                            <InputLabel id=\"labelIndustry\" onBlur={handleBlur} error={Boolean(touched.industryId && errors.industryId)}>Industry</InputLabel>\r\n                            <Select\r\n                              labelId=\"labelIndustry\"\r\n                              name=\"industryId\"\r\n                              value={industryId}\r\n                              onChange={selectIndustryHandleChange}\r\n                              onBlur={handleBlur}\r\n                              error={Boolean(touched.industryId && errors.industryId)}\r\n                            >\r\n                              <MenuItem value=\"\">\r\n                                <em>Select Parent Account</em>\r\n                              </MenuItem>\r\n                              <MenuItem value='investor'>Investor</MenuItem>\r\n                              <MenuItem value='other'>Other</MenuItem>\r\n                              <MenuItem value='partner'>Partner</MenuItem>\r\n                              <MenuItem value='press'>Press</MenuItem>\r\n                              <MenuItem value='prospect'>Prospect</MenuItem>\r\n                              <MenuItem value='reseller'>Reseller</MenuItem>\r\n                              \r\n                            </Select>\r\n                          </FormControl>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-0\">\r\n                          <FormControl className={classes.formControl}>\r\n                            <InputLabel id=\"labelParentAccount\">Parent Account</InputLabel>\r\n                            <Select\r\n                              labelId=\"labelParentAccount\"\r\n                              name=\"parentAccountId\"\r\n                              value={parentAccountId}\r\n                              onChange={selectParentAccountHandleChange}\r\n                            >\r\n                              <MenuItem value=\"\">\r\n                                <em>Select Industry</em>\r\n                              </MenuItem>\r\n                              \r\n                            </Select>\r\n                          </FormControl>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-0\">\r\n                          <FormControl className={classes.formControl}>\r\n                            <InputLabel id=\"labelAccountType\">Account Type</InputLabel>\r\n                            <Select\r\n                              labelId=\"labelAccountType\"\r\n                              value={accountType}\r\n                              onChange={selectAccountTypeHandleChange}\r\n                            >\r\n                              <MenuItem value=\"\">\r\n                                <em>Select Account Type</em>\r\n                              </MenuItem>\r\n                              <MenuItem value='analyst'>Analyst</MenuItem>\r\n                              <MenuItem value='competitor'>Competitor</MenuItem>\r\n                              <MenuItem value='customer'>Customer</MenuItem>\r\n                              <MenuItem value='distribtor'>Distribtor</MenuItem>\r\n                              <MenuItem value='integrator'>Integrator</MenuItem>\r\n                            </Select>\r\n                          </FormControl>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"kt-portlet__head\">\r\n                      <div className=\"kt-portlet__head-label\">\r\n                        <h3 className=\"kt-portlet__head-title\">\r\n                          Address Info\r\n                        </h3>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-group mb-0\">\r\n                      <TextField\r\n                        margin=\"normal\"\r\n                        label=\"Address Line\"\r\n                        className=\"kt-width-full\"\r\n                        name=\"addressLine\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.addressLine}\r\n                        helperText={touched.addressLine && errors.addressLine}\r\n                        error={Boolean(touched.addressLine && errors.addressLine)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6\">\r\n                        \r\n                        <FormControl className={classes.formControl}>\r\n                          <InputLabel id=\"labelCountry\">Country</InputLabel>\r\n                          <Select\r\n                            labelId=\"labelCountry\"\r\n                            name=\"country\"\r\n                            value={country}\r\n                            onChange={selectCountryHandleChange}\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>Select Country</em>\r\n                            </MenuItem>\r\n                            \r\n                          </Select>\r\n                        </FormControl>\r\n\r\n                        <FormControl className={classes.formControl}>\r\n                          <InputLabel id=\"labelState\">State</InputLabel>\r\n                          <Select\r\n                            labelId=\"labelState\"\r\n                            name=\"state\"\r\n                            value={state}\r\n                            onChange={selectStateHandleChange}\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>Select State</em>\r\n                            </MenuItem>\r\n                            \r\n                          </Select>\r\n                        </FormControl>\r\n                      </div>\r\n\r\n                      <div className=\"col-md-6\">\r\n                        <div className=\"form-group mb-0\">\r\n                          <FormControl className={classes.formControl}>\r\n                            <InputLabel id=\"labelCity\">City</InputLabel>\r\n                            <Select\r\n                              labelId=\"labelCity\"\r\n                              name=\"city\"\r\n                              value={city}\r\n                              onChange={selectCityHandleChange}\r\n                            >\r\n                              <MenuItem value=\"\">\r\n                                <em>Select City</em>\r\n                              </MenuItem>\r\n                              \r\n                            </Select>\r\n                          </FormControl>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-0\">\r\n                          <TextField\r\n                            margin=\"normal\"\r\n                            label=\"Zip Code\"\r\n                            className=\"kt-width-full\"\r\n                            name=\"zipCode\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            value={values.zipCode}\r\n                            helperText={touched.zipCode && errors.zipCode}\r\n                            error={Boolean(touched.zipCode && errors.zipCode)}\r\n                          />\r\n                        </div>\r\n\r\n                        \r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"kt-portlet__body\">\r\n                    <div className=\"form-actions\">\r\n                      <button\r\n                        disabled={isSubmitting || !values.acceptTerms}\r\n                        className=\"btn btn-primary btn-elevate\"\r\n                      >\r\n                        Register\r\n                      </button>\r\n                    </div>\r\n                      \r\n                  </div>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default injectIntl(\r\n  RegisterComponent\r\n);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Checkbox,\r\n  FormControlLabel,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { notification } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  updateBusinessLogo,\r\n  updateBusinessBanner,\r\n  getBusiness,\r\n  removeBusinessBanner,\r\n  removeBusinessLogo,\r\n} from '../../../../services/business.service';\r\n\r\nclass BusinessProfileComponents extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formData: {\r\n        businessName: this.props.data.businessName,\r\n        email: this.props.data.email,\r\n        id: this.props.data.id,\r\n      },\r\n      processing: this.props.onProcessing,\r\n      banner: [],\r\n      logo: [],\r\n      bannerBlob: '',\r\n      logoBlob: '',\r\n      business: {},\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  getBusinessDetails = async () => {\r\n    const business = await getBusiness();\r\n    this.setState({\r\n      business: business.data,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getBusinessDetails();\r\n  }\r\n\r\n  handleChange(event) {\r\n    let newFormData = this.state.formData;\r\n    let keyName = event.target.name;\r\n    newFormData[keyName] = event.target.value;\r\n    this.setState({ formData: newFormData });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    // this.setState({processing: true})\r\n    this.props.onUpdateProfile(this.state.formData);\r\n  }\r\n\r\n  openNotification = (message) => {\r\n    notification.open({\r\n      message: 'Notification',\r\n      description: `${message}`,\r\n      onClick: () => {\r\n        console.log('Notification Clicked!');\r\n      },\r\n    });\r\n  };\r\n\r\n  handleChangeLogo = (e) => {\r\n    e.persist();\r\n    const fileReaderInstance = new FileReader();\r\n    fileReaderInstance.readAsDataURL(e.target.files[0]);\r\n    fileReaderInstance.onload = async () => {\r\n      var base64data = fileReaderInstance.result;\r\n      var id = e.target.id;\r\n      var idBlob = `${e.target.id}Blob`;\r\n      this.setState({\r\n        [id]: e.target.files[0],\r\n        [idBlob]: base64data,\r\n      });\r\n      var formData = new FormData();\r\n      formData.append('file', e.target.files[0]);\r\n      const res = await updateBusinessLogo(this.props.data.id, formData);\r\n      this.openNotification('Logo updated.');\r\n    };\r\n  };\r\n\r\n  handleChangeBanner = (e) => {\r\n    e.persist();\r\n    const fileReaderInstance = new FileReader();\r\n    fileReaderInstance.readAsDataURL(e.target.files[0]);\r\n    fileReaderInstance.onload = async () => {\r\n      var base64data = fileReaderInstance.result;\r\n      var id = e.target.id;\r\n      var idBlob = `${e.target.id}Blob`;\r\n      this.setState({\r\n        [id]: e.target.files[0],\r\n        [idBlob]: base64data,\r\n      });\r\n      var formData = new FormData();\r\n      formData.append('file', e.target.files[0]);\r\n      const res = await updateBusinessBanner(this.props.data.id, formData);\r\n\r\n      this.openNotification('Banner updated.');\r\n    };\r\n  };\r\n\r\n  triggerBanner = () => this.banner.click();\r\n  triggerLogo = () => this.logo.click();\r\n\r\n  clearLogo = async () => {\r\n    const logo = await removeBusinessLogo(this.props.data.id);\r\n  };\r\n\r\n  clearBanner = async () => {\r\n    const logo = await removeBusinessBanner(this.props.data.id);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <div className='kt-container  kt-container--fluid  kt-grid__item kt-grid__item'>\r\n            <div className='kt-portlet'>\r\n              <div className='kt-portlet__body'>\r\n                <Row>\r\n                  <Col xs={3}>\r\n                    <div>\r\n                      <p>Click to set banner image.</p>\r\n                      <img\r\n                        onClick={this.triggerBanner}\r\n                        src={\r\n                          this.state.bannerBlob ||\r\n                          this.state.business.bannerUrl ||\r\n                          '/media/logos/logo-thecrmnetwork-dark.png'\r\n                        }\r\n                        alt='banner'\r\n                        style={{ width: 100, border: '1px solid',padding:'5px' }}\r\n                      />\r\n                    </div>\r\n                    <input\r\n                      ref={(fileInput) => (this.banner = fileInput)}\r\n                      id='banner'\r\n                      type='file'\r\n                      onChange={this.handleChangeBanner}\r\n                      hidden\r\n                    />\r\n                    <Button onClick={this.clearBanner}>Clear Banner</Button>\r\n                    <hr />\r\n                    <div>\r\n                      <p>Click to set logo image.</p>\r\n                      <img\r\n                        onClick={this.triggerLogo}\r\n                        src={\r\n                          this.state.logoBlob ||\r\n                          this.state.business.logoUrl ||\r\n                          '/media/logos/logo-thecrmnetwork-dark.png'\r\n                        }\r\n                        style={{ width: 100, border: '1px solid', padding:'5px' }}\r\n                        alt='logo'\r\n                      />\r\n                    </div>\r\n                    <input\r\n                      ref={(fileInput) => (this.logo = fileInput)}\r\n                      id='logo'\r\n                      type='file'\r\n                      onChange={this.handleChangeLogo}\r\n                      hidden\r\n                    />\r\n                    <Button onClick={this.clearLogo}>Clear logo</Button>\r\n                  </Col>\r\n                  <Col>\r\n                    <div className='form-group mb-0'>\r\n                      <TextField\r\n                        margin='normal'\r\n                        label='Business Name'\r\n                        variant='outlined'\r\n                        className='kt-width-full'\r\n                        name='businessName'\r\n                        required\r\n                        value={this.state.formData.businessName}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </div>\r\n                    <div className='form-group mb-0'>\r\n                      <TextField\r\n                        margin='normal'\r\n                        label='Email'\r\n                        variant='outlined'\r\n                        className='kt-width-full'\r\n                        name='email'\r\n                        required\r\n                        value={this.state.formData.email}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </div>\r\n                    <div className='form-group mb-0'>\r\n                      <button\r\n                        className='btn btn-primary btn-elevate'\r\n                        onClick={this.handleSubmit}\r\n                        //disableelevation\r\n                        disabled={this.state.processing}\r\n                      >\r\n                        Update\r\n                      </button>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n              <div className='kt-portlet__footer'></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.auth.user,\r\n    business: state.auth.user.mainRole.business,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(BusinessProfileComponents);\r\n","import React from 'react';\r\nimport { Container, InputGroup, Row, Col } from 'react-bootstrap';\r\nimport { Checkbox, Button, FormControlLabel, Switch, TextField, Select, MenuItem, InputLabel, FormControl } from \"@material-ui/core\";\r\n\r\nconst InputBusinessLocation = props => {\r\n  return (\r\n\r\n          <Container>\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <InputGroup className='mb-4'>\r\n                        <div className=\"form-group mb-0\">\r\n                          \r\n                            <FormControlLabel\r\n                                control={<Switch name =\"isMainAddress\" onChange={props.handleChange} />}\r\n                                label=\"Defaul Main Address\"\r\n                            />\r\n                          \r\n                        </div>\r\n                    </InputGroup>\r\n                </Col>\r\n\r\n                <Col xs={12}>\r\n                    <InputGroup className='mb-4'>\r\n                        <TextField\r\n                        onChange={props.handleChange}\r\n                        id='businessLocationName'\r\n                        label='Business Location Name'\r\n                        className=''\r\n                        value={props.data.businessLocationName}\r\n                        variant='outlined'\r\n                        fullWidth={true}\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                        size='small'\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n                <Col xs={6}>\r\n                    <InputGroup className='mb-4'>\r\n                        <TextField\r\n                        onChange={props.handleChange}\r\n                        id='country'\r\n                        label='Country'\r\n                        className=''\r\n                        value={props.data.country}\r\n                        variant='outlined'\r\n                        fullWidth={true}\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                        size='small'\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n                <Col xs={6}>\r\n                    <InputGroup className='mb-4'>\r\n                        <TextField\r\n                        onChange={props.handleChange}\r\n                        id='state'\r\n                        label='State'\r\n                        className=''\r\n                        value={props.data.state}\r\n                        variant='outlined'\r\n                        fullWidth={true}\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                        size='small'\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n                <Col xs={6}>\r\n                    <InputGroup className='mb-4'>\r\n                        <TextField\r\n                        onChange={props.handleChange}\r\n                        id='city'\r\n                        label='City'\r\n                        className=''\r\n                        value={props.data.city}\r\n                        variant='outlined'\r\n                        fullWidth={true}\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                        size='small'\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n                <Col xs={6}>\r\n                    <InputGroup className='mb-4'>\r\n                        <TextField\r\n                        onChange={props.handleChange}\r\n                        id='zipCode'\r\n                        label='zipCode'\r\n                        className=''\r\n                        value={props.data.zipCode}\r\n                        variant='outlined'\r\n                        fullWidth={true}\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                        size='small'\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n                <Col xs={12}>\r\n                <InputGroup>\r\n                    <Button\r\n                        type='submit'\r\n                        size='large'\r\n                        className='float-right'\r\n                        variant='contained'\r\n                        color='primary'\r\n                        onClick={props.handleSubmit}\r\n                    >\r\n                        Confirm\r\n                    </Button>\r\n                    </InputGroup>\r\n                </Col>\r\n                \r\n            </Row>\r\n\r\n        </Container>\r\n     \r\n  );\r\n};\r\n\r\nexport default InputBusinessLocation;\r\n","import React from 'react';\r\nimport { Select, MenuItem, InputLabel, FormControl } from \"@material-ui/core\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ReactDOM from 'react-dom';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\n\r\nclass BusinessLocationCards extends React.Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data : props.data,\r\n            classes : props.cardStyle\r\n        } \r\n        this.showDeleteModal = this.showDeleteModal.bind(this)\r\n        this.showEditModal = this.showEditModal.bind(this)\r\n    }\r\n\r\n    showDeleteModal (event) {\r\n       let id = event.currentTarget.dataset.id\r\n       this.props.onDeleteBusinessLoc(id);\r\n       debugger;\r\n    }\r\n\r\n    showEditModal (event) {\r\n       let data = event.currentTarget.dataset.id\r\n       this.props.onEditBusinessLoc(data);\r\n\r\n    }\r\n\r\n    handleUpdate (event) {\r\n      let id = {id:event.currentTarget.dataset.id}\r\n\r\n    }\r\n    debugger;\r\n    render(){\r\n\r\n        return (\r\n          <Row>\r\n            \r\n            { this.state.data.map(value => \r\n                \r\n                  <Card  variant=\"outlined\" className={this.state.classes.root}>\r\n                      <CardContent>\r\n                          <Typography variant=\"h5\" component=\"h2\">\r\n                            {value.businessLocationName}\r\n                          </Typography>\r\n                          <Typography  color=\"textSecondary\" className={this.state.classes.pos}>\r\n                            {value.addressLine}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" component=\"p\">\r\n                             {value.city} {value.state} {value.country} {value.zipCode}\r\n                          </Typography>\r\n                      </CardContent>\r\n                      <CardActions>\r\n\r\n                            <IconButton aria-label=\"edit\" data-id={value.id}  onClick={this.showEditModal.bind(value)} data-two={value.name}>\r\n                                <EditIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                            \r\n                            <IconButton aria-label=\"delete\" data-id={value.id} onClick={this.showDeleteModal.bind(this)}>\r\n                                <DeleteIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                      </CardActions>\r\n                  </Card>\r\n\r\n                ) \r\n            }\r\n\r\n          </Row>\r\n            \r\n          )\r\n    }\r\n\r\n}\r\n\r\nexport default BusinessLocationCards;","import React, {useState, useEffect} from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport TableModal from '../../../shared/Modal';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport InputBusinessLocation from './businessLocations/InputBusinessLocation';\r\nimport BusinessLocationCards from './businessLocations/BusinessLocationCards';\r\nimport { getBusinessLocationList, saveBusinessLocation, deleteBusinessLocation, updateBusinessLocation, getBusinessLocationData } from '../../../../services/business.service';\r\nimport { Checkbox, FormControlLabel, Switch, TextField, Select, MenuItem, InputLabel, FormControl } from \"@material-ui/core\";\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { useSelector } from 'react-redux';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    maxWidth: '100%'\r\n  },\r\n  root: {\r\n    minWidth: 275,\r\n    width:'19%',\r\n    marginLeft: 10,\r\n    marginBottom: 10\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  containerCard: {\r\n    display:'flex',\r\n\r\n  }\r\n}));\r\n\r\n\r\nconst BusinessLocationsComponents = (props) => {\r\n  const userData = useSelector(state => state.auth.user);\r\n  const notify = data => {\r\n    if (data.success) {\r\n      toast.success(data.message);\r\n    } else {\r\n      toast.error(data.message);\r\n    }\r\n  }\r\n\r\n  const classes = useStyles();\r\n  const [state, setState] = useState(0);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isUpdate, setIsUpdate] = useState(false);\r\n  const [reRender, setRerender] = useState(false);\r\n  \r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [alert, setAlert] = useState('');\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n\r\n   const initialInput = {\r\n    id: '',\r\n    isMainAddress: false,\r\n    businessLocationName: '',\r\n    businessId: userData.mainRole.business.id,\r\n    country: '',\r\n    state: '',\r\n    city: '',\r\n    zipCode: '',\r\n  };\r\n\r\n  const [input, setInput] = useState(initialInput);\r\n\r\n  useEffect(() => {\r\n    setState({}); \r\n    const responseLocation = {}\r\n      const fetchData = async () => {\r\n        const responseLocation = await getBusinessLocationList(props.data.businessLocation.businessId);\r\n        setState({\r\n            dataLocation : responseLocation.data\r\n         });   \r\n\r\n      }\r\n      fetchData();\r\n    }, [reRender]);\r\n\r\n\r\n    const handleSubmitButton = async e => {\r\n\r\n      e.preventDefault();\r\n      input.businessId = userData.mainRole.business.id;\r\n      if (isUpdate) {\r\n        try {\r\n          await updateBusinessLocation(input);\r\n          notify({ success: true, message: 'Success updating Business Location.' });\r\n        } catch (error) {}\r\n      }\r\n      if (!isUpdate) {\r\n        debugger;\r\n        try {\r\n          await saveBusinessLocation(input);\r\n          notify({ success: true, message: 'Success adding Business Location.' });\r\n        } catch (error) {}\r\n      }\r\n      setIsModalOpen(false);\r\n      setRerender(!reRender);\r\n    };\r\n\r\n\r\n    const handleChange = (e) => {\r\n      setInput({\r\n      ...input,\r\n      [e.target.id]: e.target.value\r\n    });\r\n\r\n\r\n    }\r\n\r\n  const showEditModal = (locationData) => {\r\n      const response = {};\r\n       const fetchData = async () => {\r\n        const response = await getBusinessLocationData(locationData);\r\n            setIsUpdate(true);\r\n            upBusinessLocation(response.data);\r\n        }\r\n    fetchData();\r\n\r\n  }\r\n\r\n\r\n   const showDeleteModal = async locationId => {\r\n      await deleteBusinessLocation(locationId);\r\n      notify({ success: true, message: 'Success Deleting Business Location.' });\r\n      setRerender(!reRender);\r\n\r\n  }\r\n\r\n  const upBusinessLocation = data => {\r\n    setInput({\r\n        id: data.id,\r\n        isMainAddress: data.isMainAddress,\r\n        businessLocationName: data.businessLocationName,\r\n        businessId: data.businessId,\r\n        country: data.country,\r\n        state: data.state,\r\n        city: data.city,\r\n        zipCode: data.zipCode,\r\n    });\r\n\r\n    setIsModalOpen(true);\r\n    setRerender(!reRender);\r\n  };\r\n\r\n  function displayBusinessLocation () {\r\n    if (state.dataLocation)   {\r\n        return (<BusinessLocationCards data={state.dataLocation} cardStyle={classes} onDeleteBusinessLoc={showDeleteModal} onEditBusinessLoc={showEditModal}  />)\r\n    }\r\n        \r\n  }\r\n\r\n  return (\r\n      <>\r\n          <TableModal\r\n            type='BusinessLocation'\r\n            title='Business Location'\r\n            open={isModalOpen}\r\n            handleClose={closeModal}\r\n          >\r\n            <InputBusinessLocation\r\n              data={input}\r\n              handleChange={handleChange}\r\n              handleSubmit={handleSubmitButton}\r\n            />\r\n          </TableModal>\r\n         <Container className={classes.container}>\r\n            <Button\r\n              className='mb-2'\r\n              variant='contained'\r\n              color='primary'\r\n              size='large'\r\n              onClick={() => {\r\n                setIsModalOpen(true);\r\n                setIsUpdate(false);\r\n                setInput(initialInput);\r\n              }}\r\n            >\r\n              Add\r\n            </Button>\r\n            {displayBusinessLocation ()}\r\n\r\n        </Container>\r\n    </>\r\n  );\r\n}\r\nexport default BusinessLocationsComponents;","import React, { useState, useEffect } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { getUserByToken} from '../../../../services/user.service';\r\nimport { getBusinessLocationList, updateBusinessProfile } from '../../../../services/business.service';\r\nimport BusinessProfile  from './BusinessProfileComponents';\r\nimport BusinessLocations  from './BusinessLocationsComponents'; \r\nimport { Checkbox, FormControlLabel, TextField, Select, MenuItem, InputLabel, FormControl } from \"@material-ui/core\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport ProfileIcon from '@material-ui/icons/Person';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport LocationIcon from '@material-ui/icons/Room';\r\nimport ShipAddressIcon from '@material-ui/icons/LocalShipping';\r\nimport TermsConditionIcon from '@material-ui/icons/ConfirmationNumber';\r\nimport LicenseIcon from '@material-ui/icons/Subtitles';\r\nimport InvoicingIcon from '@material-ui/icons/Receipt';\r\nimport Avatar from 'react-avatar-edit'\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from 'prop-types';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-force-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-force-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst notify = data => {\r\n    if (data.success) {\r\n      toast.success(data.message);\r\n    } else {\r\n      toast.error(data.message);\r\n    }\r\n  }\r\n\r\n\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-force-tab-${index}`,\r\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst ViewComponent = () => {\r\n\tconst classes = useStyles();\r\n\tconst [reRender, setRerender] = useState(false);\r\n\r\n  \tconst [value, setValue] = useState(0);\r\n  \tconst [processupdateBusinessProfile, setProcessupdateBusinessProfile] = useState(false);\r\n \tconst [state, setState] = useState(0);\r\n \t\r\n\tconst handleChange = (event, newValue) => {\r\n\t    setValue(newValue);\r\n\t};\r\n\r\n\t\r\n\tuseEffect(() => {\r\n\t    const fetchData = async () => {\r\n\t    const response = await getUserByToken();\r\n\t      setState({\r\n\t        data : response.data.mainRole.business\r\n\t      });\r\n\t    }\r\n\t    fetchData();\r\n\t  }, [reRender]);\r\n\r\n\r\n\t\tconst HandleUpdateBusinessProfile = (formDataBusinessProfile) => {\r\n\t\t\tupdateBusinessProfile(formDataBusinessProfile)\r\n\t\t        .then(result => {\r\n\t\t          \tsetRerender(!reRender);\r\n\t\t          \tnotify({ success: true, message: 'Success Updating Business Profile.' });\r\n\t\t\t\t\tsetProcessupdateBusinessProfile(false)\t          \r\n\t\t    }).catch(err => console.log(err));\r\n\r\n\t\t}\r\n\r\n\t\tconst  profileContainer = (props) => {\r\n\t\t\tif (props !== 0) {\r\n\t\t\t\t\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<BusinessProfile data={props.data} onUpdateProfile={HandleUpdateBusinessProfile} onProcessing={processupdateBusinessProfile}/>\r\n\t\t\t\t\t)\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst LocationsContainer = (props) => {\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<BusinessLocations data={props.data} />\r\n\t\t\t\t)\r\n\t\t\t\r\n\t\t}\r\n\r\n\t  \treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<ToastContainer />\r\n\t\t\t<AppBar position=\"static\" color=\"default\">\r\n\t\t        <Tabs\r\n\t\t\t        value={value}\r\n\t\t\t        onChange={handleChange}\r\n\t\t\t        id=\"BusinessProfileTab\"\r\n\t\t\t        variant=\"scrollable\"\r\n\t\t\t        scrollButtons=\"on\"\r\n\t\t\t        indicatorColor=\"secondary\"\r\n\t\t\t        textColor=\"secondary\"\r\n\t\t\t        aria-label=\"scrollable force tabs example\"\r\n\t\t        >\r\n\t\t\t        <Tab label=\"Profile\" icon={<ProfileIcon />} {...a11yProps(0)} />\r\n\t\t\t        <Tab label=\"Payment Gateway\" icon={<PaymentIcon />} {...a11yProps(1)} />\r\n\t\t\t        <Tab label=\"Locations\" icon={<LocationIcon />} {...a11yProps(2)} />\r\n\t\t\t        <Tab label=\"Shipping Address\" icon={<ShipAddressIcon />} {...a11yProps(3)} />\r\n\t\t\t        <Tab label=\"Terms & Conditions\" icon={<TermsConditionIcon />} {...a11yProps(4)} />\r\n\t\t\t        <Tab label=\"License\" icon={<LicenseIcon />} {...a11yProps(5)} />\r\n\t\t\t        <Tab label=\"Invoicing\" icon={<InvoicingIcon />} {...a11yProps(6)} />\r\n\t\t        </Tabs>\r\n\t\t    </AppBar>\r\n\t\t    <TabPanel value={value} index={0}>\r\n\t\t    \t{profileContainer(state)}\r\n\t\t     </TabPanel>\r\n\t\t    <TabPanel value={value} index={1}>\r\n\t\t        Payment Gateway\r\n\t\t    </TabPanel>\r\n\t\t    <TabPanel value={value} index={2}>\r\n\t\t        {LocationsContainer(state)}\r\n\t\t    </TabPanel>\r\n\t\t    <TabPanel value={value} index={3}>\r\n\t\t        Shipping Address\r\n\t\t    </TabPanel>\r\n\t\t    <TabPanel value={value} index={4}>\r\n\t\t        Terms and Conditions\r\n\t\t    </TabPanel>\r\n\t\t    <TabPanel value={value} index={5}>\r\n\t\t        License\r\n\t\t    </TabPanel>\r\n\t\t    <TabPanel value={value} index={6}>\r\n\t\t        Invoicing\r\n\t\t    </TabPanel>\r\n\t    </div>\r\n\r\n\t  )\r\n\r\n}\r\n\r\nexport default ViewComponent;","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport CreateBusiness from './components/RegisterComponent';\r\nimport viewBusiness from './components/ViewComponent';\r\nexport default function Business() {\r\n    return (\r\n        <Switch>\r\n\r\n            <Redirect exact={true} from=\"/\" to=\"/business\"/>\r\n            <Route path=\"/business/register\" component={CreateBusiness} />\r\n            <Route path=\"/business/\" component={viewBusiness} />\r\n\r\n        </Switch>\r\n    )\r\n}"],"sourceRoot":""}