{"version":3,"sources":["app/services/products.service.js","app/pages/home/product-services/components/PointOfSale/multiform/SelectProductForm.js","app/pages/home/product-services/components/PointOfSale/multiform/CustomerDetailsForm.js","app/pages/home/product-services/components/PointOfSale/multiform/BillingAddressForm.js","app/pages/home/product-services/components/PointOfSale/multiform/ShippingAddressForm.js","app/pages/home/product-services/components/PointOfSale/multiform/PaymentMethodForm.js","app/pages/home/product-services/components/PointOfSale/multiform/TermsConditionForm.js","app/pages/home/product-services/components/PointOfSale/multiform/AttachedDocumentForm.js","app/services/businessSale.service.js","app/pages/home/product-services/components/PointOfSale/ViewPointOfSaleComponents.js","app/pages/home/product-services/PointOfSaleComponents.js"],"names":["ROOT_URL","process","getProductList","businessId","axios","get","getProducts","addProduct","data","post","connect","state","business","auth","user","mainRole","props","useState","products","setProducts","Option","Select","useEffect","a","id","prods","className","placeholder","onChange","value","setState","productKey","businessKey","console","log","map","productName","push","defaultValue","e","count","CustomerDetailsForm","Container","Row","Col","xs","InputGroup","TextField","label","custFirstName","variant","fullWidth","InputLabelProps","shrink","size","custLastName","custEmail","custPhone","BillingAddressForm","handleChange","target","addressLine1","addressLine2","city","country","zipCode","ShippingAddressForm","addressLine12","PaymentMethodForm","form","termsConditions","TermsConditionForm","multiline","rows","useStyles","makeStyles","theme","root","margin","spacing","input","display","AttachedDocumentForm","classes","accept","multiple","type","htmlFor","Button","color","component","Typography","gutterBottom","createOrder","height","alignItems","active","circle","width","borderRadius","backgroundColor","completed","zIndex","fontSize","ColorlibConnector","withStyles","alternativeLabel","top","backgroundImage","line","border","StepConnector","useColorlibStepIconStyles","justifyContent","boxShadow","ColorlibStepIcon","icons","1","2","3","4","5","6","7","clsx","String","icon","button","marginRight","instructions","marginTop","marginBottom","ViewPointOfSaleComponents","React","activeStep","setActiveStep","steps","productDetails","setProductDetails","customerDetails","setCustomerDetails","billingAddress","setBillingAddress","shippingAddress","setShippingAddress","handleChange2ndStep","handleNext","productOrders","custAddress","order","prevActiveStep","Stepper","connector","Step","key","StepLabel","StepIconComponent","length","onClick","step","getStepContent","disabled","hidden","PointOfSaleComponents","exact","from","to","path"],"mappings":"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","file":"static/js/21.1487cfc5.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const ROOT_URL = process.env.REACT_APP_API_URL;\r\nexport const PRODUCT_URL = 'api/Product/GetAllProductByBusinessId';\r\nexport const ADD_PRODUCT_URL = 'api/product/addnewproduct';\r\nexport const GET_PRODUCT_URL = 'api/Product/Info/Active';\r\n\r\nexport function getProductList(businessId) {\r\n  return axios.get(`${ROOT_URL}/${PRODUCT_URL}/${businessId}`);\r\n}\r\n\r\nexport function getProducts(businessId) {\r\n  return axios.get(`${ROOT_URL}/${GET_PRODUCT_URL}/${businessId}`);\r\n}\r\n\r\nexport function addProduct(data) {\r\n  return axios.post(`${ROOT_URL}/${ADD_PRODUCT_URL}`, data);\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getProducts } from '../../../../../../services/products.service';\r\nimport { Select, Card, InputNumber, Row, Col } from 'antd';\r\n\r\nconst SelectProductForm = (props) => {\r\n  const [products, setProducts] = useState([]);\r\n  const { Option } = Select;\r\n  useEffect(() => {\r\n    const products = async () => {\r\n      const prods = await getProducts(props.business.id);\r\n      setProducts(prods.data);\r\n    };\r\n    products();\r\n  }, []);\r\n\r\n  const handleChange = (value) => {\r\n    props.setState({\r\n      ...props.state,\r\n      productKey: value,\r\n      businessKey: props.business.id,\r\n    });\r\n    console.log(value);\r\n  };\r\n\r\n  const handleCountChange = (e) => {\r\n    props.setState({\r\n      ...props.state,\r\n      count: e,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className='mb-2'>\r\n        <Row>\r\n          <Col>\r\n            <Select placeholder='Select Product' onChange={handleChange}>\r\n              {products.map((data) => {\r\n                return <Option value={data.id}>{data.productName}</Option>;\r\n              })}\r\n            </Select>\r\n          </Col>\r\n          <Col push={1}>\r\n            Count: <InputNumber defaultValue={0} onChange={handleCountChange} />\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    business: state.auth.user.mainRole.business,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(SelectProductForm);\r\n","import React from 'react';\r\nimport { TextField } from '@material-ui/core';\r\nimport { Container, InputGroup, Row, Col } from 'react-bootstrap';\r\n\r\n// const defaultValidation = {\r\n//   error: false,\r\n//   errorMessage: ''\r\n// };\r\n\r\n// const form = {\r\n//   firstName: '',\r\n//   lastName: '',\r\n//   email: '',\r\n//   phoneNumber: '',\r\n// };\r\n\r\nconst CustomerDetailsForm = props => {\r\n  // const [formValiation, setFormValidation] = useState(defaultValidation);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row>\r\n          <Col xs={6}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={props.onChange}\r\n                id='custFirstName'\r\n                label='First name'\r\n                className=''\r\n                value={props.data.custFirstName}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs={6}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={props.onChange}\r\n                id='custLastName'\r\n                label='Last name'\r\n                className=''\r\n                value={props.data.custLastName}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs={6}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={props.onChange}\r\n                id='custEmail'\r\n                label='Email'\r\n                className=''\r\n                value={props.data.custEmail}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n                //error={validate?.email?.error}\r\n                //helperText={validate?.email?.errorMessage}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs={6}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={props.onChange}\r\n                id='custPhone'\r\n                label='Phone number'\r\n                className=''\r\n                value={props.data.custPhone}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomerDetailsForm;\r\n","import React from 'react';\r\nimport { TextField } from '@material-ui/core';\r\nimport { Container, InputGroup, Row, Col } from 'react-bootstrap';\r\n\r\n// const defaultValidation = {\r\n//   error: false,\r\n//   errorMessage: ''\r\n// };\r\n\r\n// const form = {\r\n//   addressLine1: '',\r\n//   addressLine12: '',\r\n//   city: '',\r\n//   state: '',\r\n//   country: '',\r\n//   zipCode: ''\r\n// };\r\n\r\nconst BillingAddressForm = props => {\r\n  // const [formValiation, setFormValidation] = useState(defaultValidation);\r\n  // const [state, setState] = useState(form);\r\n\r\n  const handleChange = e => {\r\n    props.setState({ ...props.state, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row>\r\n          <Col xs={6}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={handleChange}\r\n                id='addressLine1'\r\n                label='Address Line 1'\r\n                className=''\r\n                value={props.state.addressLine1}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs={6}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={handleChange}\r\n                id='addressLine2'\r\n                label='Address Line2'\r\n                className=''\r\n                value={props.state.addressLine2}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs={6}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={handleChange}\r\n                id='city'\r\n                label='City'\r\n                className=''\r\n                value={props.state.city}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n                //error={validate?.email?.error}\r\n                //helperText={validate?.email?.errorMessage}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs={6}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={handleChange}\r\n                id='state'\r\n                label='State'\r\n                className=''\r\n                value={props.state.state}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n                //error={validate?.email?.error}\r\n                //helperText={validate?.email?.errorMessage}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs={6}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={handleChange}\r\n                id='country'\r\n                label='Country'\r\n                className=''\r\n                value={props.state.country}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs={6}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={handleChange}\r\n                id='zipCode'\r\n                label='Zip Code'\r\n                className=''\r\n                value={props.state.zipCode}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BillingAddressForm;\r\n","import React from 'react';\r\nimport { TextField } from '@material-ui/core';\r\nimport { Container, InputGroup, Row, Col } from 'react-bootstrap';\r\n\r\n// const defaultValidation = {\r\n//   error: false,\r\n//   errorMessage: ''\r\n// };\r\n\r\n// const form = {\r\n//   addressLine1: '',\r\n//   addressLine12: '',\r\n//   city: '',\r\n//   state: '',\r\n//   country: '',\r\n//   zipCode: ''\r\n// };\r\n\r\nconst ShippingAddressForm = props => {\r\n  // const [formValiation, setFormValidation] = useState(defaultValidation);\r\n  // const [state, setState] = useState(form);\r\n\r\n  const handleChange = e => {\r\n    props.setState({ ...props.state, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row>\r\n          <Col xs={6}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={handleChange}\r\n                id='addressLine1'\r\n                label='Address Line 1'\r\n                className=''\r\n                value={props.state.addressLine1}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs={6}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={handleChange}\r\n                id='addressLine2'\r\n                label='Address Line2'\r\n                className=''\r\n                value={props.state.addressLine12}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs={6}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={handleChange}\r\n                id='city'\r\n                label='City'\r\n                className=''\r\n                value={props.state.city}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n                //error={validate?.email?.error}\r\n                //helperText={validate?.email?.errorMessage}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs={6}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={handleChange}\r\n                id='state'\r\n                label='State'\r\n                className=''\r\n                value={props.state.state}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n                //error={validate?.email?.error}\r\n                //helperText={validate?.email?.errorMessage}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs={6}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={handleChange}\r\n                id='country'\r\n                label='Country'\r\n                className=''\r\n                value={props.state.country}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs={6}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={handleChange}\r\n                id='zipCode'\r\n                label='Zip Code'\r\n                className=''\r\n                value={props.state.zipCode}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                size='small'\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShippingAddressForm;\r\n","import React from 'react';\r\n\r\nconst PaymentMethodForm = () => {\r\n    return (\r\n        <div>\r\n            <p>Coming soon</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentMethodForm","import React, { useState } from 'react';\r\nimport { TextField } from '@material-ui/core';\r\nimport { Container, InputGroup, Row, Col } from 'react-bootstrap';\r\n\r\n// const defaultValidation = {\r\n//   error: false,\r\n//   errorMessage: ''\r\n// };\r\n\r\nconst form = {\r\n  termsConditions: ''\r\n};\r\n\r\nconst TermsConditionForm = () => {\r\n  // const [formValiation, setFormValidation] = useState(defaultValidation);\r\n  const [state, setState] = useState(form);\r\n\r\n  const handleChange = e => {\r\n    setState({ ...state, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <InputGroup className='mb-4'>\r\n              <TextField\r\n                onChange={handleChange}\r\n                multiline\r\n                variant='outlined'\r\n                rows='4'\r\n                id='termsConditions'\r\n                label='Terms and Condition'\r\n                className=''\r\n                value={state.termsConditions}\r\n                fullWidth={true}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TermsConditionForm;\r\n","import React from 'react';\r\nimport { Button, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import { Container, InputGroup, Row, Col } from 'react-bootstrap';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  input: {\r\n    display: 'none'\r\n  }\r\n}));\r\n\r\n// const defaultValidation = {\r\n//   error: false,\r\n//   errorMessage: ''\r\n// };\r\n\r\n// const form = {\r\n//   termsConditions: ''\r\n// };\r\n\r\nconst AttachedDocumentForm = () => {\r\n  // const [formValiation, setFormValidation] = useState(defaultValidation);\r\n  // const [state, setState] = useState(form);\r\n\r\n  const classes = useStyles();\r\n\r\n  // const handleChange = (e) => {\r\n  //     setState({...state,[e.target.id]: e.target.value});\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <div className='kt-portlet kt-portlet--height-fluid'>\r\n        <div className='kt-portlet__head'>\r\n          <div className='kt-portlet__head-label'>\r\n            <h3 className='kt-portlet__head-title'>Attachments</h3>\r\n          </div>\r\n          <input\r\n            accept='*'\r\n            className={classes.input}\r\n            id='contained-button-file'\r\n            multiple\r\n            type='file'\r\n          />\r\n          <label htmlFor='contained-button-file'>\r\n            <Button variant='contained' color='secondary' component='span'>\r\n              Upload\r\n            </Button>\r\n          </label>\r\n        </div>\r\n        <div className='kt-portlet__body'>\r\n          <div className='kt-widget4'>\r\n            <Typography variant='subtitle1' gutterBottom>\r\n              File Types Allowed:{' '}\r\n            </Typography>\r\n            <Typography variant='body1' gutterBottom>\r\n              pdf, .xlsx, .xls, .png, .doc, .docx, .jpg, .jpeg, .csv, .txt\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AttachedDocumentForm;\r\n","import axios from 'axios';\r\n\r\nexport const ROOT_URL = process.env.REACT_APP_API_URL;\r\nexport const BUSINESS_CREATE_ORDER_URL = 'api/BusinessSale/CreateOrder';\r\n\r\nexport function createOrder(data) {\r\n  return axios.post(`${ROOT_URL}/${BUSINESS_CREATE_ORDER_URL}`, data);\r\n}\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Check from '@material-ui/icons/Check';\r\nimport StepConnector from '@material-ui/core/StepConnector';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n//icons\r\nimport ShoppingCart from '@material-ui/icons/ShoppingCart';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Home from '@material-ui/icons/Home';\r\nimport LocationOn from '@material-ui/icons/LocationOn';\r\nimport Payment from '@material-ui/icons/Payment';\r\nimport Description from '@material-ui/icons/Description';\r\nimport Attachment from '@material-ui/icons/Attachment';\r\n//multiform\r\nimport SelectProductForm from './multiform/SelectProductForm';\r\nimport CustomerDetailsForm from './multiform/CustomerDetailsForm';\r\nimport BillingAddressForm from './multiform/BillingAddressForm';\r\nimport ShippingAddressForm from './multiform/ShippingAddressForm';\r\nimport PaymentMethodForm from './multiform/PaymentMethodForm';\r\nimport TermsConditionForm from './multiform/TermsConditionForm';\r\nimport AttachedDocumentForm from './multiform/AttachedDocumentForm';\r\n\r\nimport { createOrder } from '../../../../../services/businessSale.service';\r\n\r\n// const QontoConnector = withStyles({\r\n//   alternativeLabel: {\r\n//     top: 10,\r\n//     left: 'calc(-50% + 16px)',\r\n//     right: 'calc(50% + 16px)',\r\n//   },\r\n//   active: {\r\n//     '& $line': {\r\n//       borderColor: '#784af4',\r\n//     },\r\n//   },\r\n//   completed: {\r\n//     '& $line': {\r\n//       borderColor: '#784af4',\r\n//     },\r\n//   },\r\n//   line: {\r\n//     borderColor: '#eaeaf0',\r\n//     borderTopWidth: 3,\r\n//     borderRadius: 1,\r\n//   },\r\n// })(StepConnector);\r\n\r\nconst useQontoStepIconStyles = makeStyles({\r\n  root: {\r\n    color: '#eaeaf0',\r\n    display: 'flex',\r\n    height: 22,\r\n    alignItems: 'center'\r\n  },\r\n  active: {\r\n    color: '#784af4'\r\n  },\r\n  circle: {\r\n    width: 8,\r\n    height: 8,\r\n    borderRadius: '50%',\r\n    backgroundColor: 'currentColor'\r\n  },\r\n  completed: {\r\n    color: '#784af4',\r\n    zIndex: 1,\r\n    fontSize: 18\r\n  }\r\n});\r\n\r\nfunction QontoStepIcon(props) {\r\n  const classes = useQontoStepIconStyles();\r\n  const { active, completed } = props;\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, {\r\n        [classes.active]: active\r\n      })}\r\n    >\r\n      {completed ? (\r\n        <Check className={classes.completed} />\r\n      ) : (\r\n        <div className={classes.circle} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nQontoStepIcon.propTypes = {\r\n  active: PropTypes.bool,\r\n  completed: PropTypes.bool\r\n};\r\n\r\nconst ColorlibConnector = withStyles({\r\n  alternativeLabel: {\r\n    top: 22\r\n  },\r\n  active: {\r\n    '& $line': {\r\n      backgroundImage:\r\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)'\r\n    }\r\n  },\r\n  completed: {\r\n    '& $line': {\r\n      backgroundImage:\r\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)'\r\n    }\r\n  },\r\n  line: {\r\n    height: 3,\r\n    border: 0,\r\n    backgroundColor: '#eaeaf0',\r\n    borderRadius: 1\r\n  }\r\n})(StepConnector);\r\n\r\nconst useColorlibStepIconStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: '#ccc',\r\n    zIndex: 1,\r\n    color: '#fff',\r\n    width: 50,\r\n    height: 50,\r\n    display: 'flex',\r\n    borderRadius: '50%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  active: {\r\n    backgroundImage:\r\n      'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)'\r\n  },\r\n  completed: {\r\n    backgroundImage:\r\n      'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)'\r\n  }\r\n});\r\n\r\nfunction ColorlibStepIcon(props) {\r\n  const classes = useColorlibStepIconStyles();\r\n  const { active, completed } = props;\r\n\r\n  const icons = {\r\n    1: <ShoppingCart />,\r\n    2: <AccountCircle />,\r\n    3: <Home />,\r\n    4: <LocationOn />,\r\n    5: <Payment />,\r\n    6: <Description />,\r\n    7: <Attachment />\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, {\r\n        [classes.active]: active,\r\n        [classes.completed]: completed\r\n      })}\r\n    >\r\n      {icons[String(props.icon)]}\r\n    </div>\r\n  );\r\n}\r\n\r\nColorlibStepIcon.propTypes = {\r\n  active: PropTypes.bool,\r\n  completed: PropTypes.bool,\r\n  icon: PropTypes.node\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%'\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nfunction getSteps() {\r\n  return [\r\n    'Select Product',\r\n    'Customer Details',\r\n    'Billing Address',\r\n    'Shipping Address',\r\n    'Payment Method',\r\n    'Terms & Condition',\r\n    'Attached Document'\r\n  ];\r\n}\r\n\r\nexport default function ViewPointOfSaleComponents() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  //1st step data\r\n  const [productDetails, setProductDetails] = useState({});\r\n\r\n  //2nd step data\r\n  // const form = {\r\n  //   firstName: '',\r\n  //   lastName: '',\r\n  //   email: '',\r\n  //   phoneNumber: '',\r\n  // };\r\n  const [customerDetails, setCustomerDetails] = useState({});\r\n\r\n  //3rd step data\r\n  const [billingAddress, setBillingAddress] = useState({});\r\n\r\n  //4th step\r\n  const [shippingAddress, setShippingAddress] = useState({});\r\n\r\n  const handleChange2ndStep = e => {\r\n    setCustomerDetails({ ...customerDetails, [e.target.id]: e.target.value });\r\n  };\r\n  //\r\n\r\n  function getStepContent(step) {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <SelectProductForm\r\n            setState={setProductDetails}\r\n            state={productDetails}\r\n          />\r\n        );\r\n      case 1:\r\n        return (\r\n          <CustomerDetailsForm\r\n            onChange={handleChange2ndStep}\r\n            data={customerDetails}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <BillingAddressForm\r\n            setState={setBillingAddress}\r\n            state={billingAddress}\r\n          />\r\n        );\r\n      case 3:\r\n        return (\r\n          <ShippingAddressForm\r\n            setState={setShippingAddress}\r\n            state={shippingAddress}\r\n          />\r\n        );\r\n      case 4:\r\n        return <PaymentMethodForm />;\r\n      case 5:\r\n        return <TermsConditionForm />;\r\n      case 6:\r\n        return <AttachedDocumentForm />;\r\n      default:\r\n        return 'Unknown step';\r\n    }\r\n  }\r\n\r\n  const handleNext = async () => {\r\n    if (activeStep === 6) {\r\n      let data = {};\r\n      data = {\r\n        ...data,\r\n        ...customerDetails,\r\n        productOrders: [{ ...productDetails }],\r\n        custAddress: `${billingAddress.addressLine1} ${billingAddress.addressLine2} ${billingAddress.city} ${billingAddress.state} ${billingAddress.country}, ${billingAddress.zipCode}`,\r\n        billingAddress: `${billingAddress.addressLine1} ${billingAddress.addressLine2} ${billingAddress.city} ${billingAddress.state} ${billingAddress.country}, ${billingAddress.zipCode}`,\r\n        shippingAddress: `${shippingAddress.addressLine1} ${shippingAddress.addressLine2} ${shippingAddress.city} ${shippingAddress.state} ${shippingAddress.country}, ${shippingAddress.zipCode}`,\r\n        country: billingAddress.country\r\n      };\r\n      const order = await createOrder(data);\r\n      console.log(order);\r\n    }\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper\r\n        alternativeLabel\r\n        activeStep={activeStep}\r\n        connector={<ColorlibConnector />}\r\n      >\r\n        {steps.map(label => (\r\n          <Step key={label}>\r\n            <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n            <Button onClick={handleReset} className={classes.button}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            {getStepContent(activeStep)}\r\n            <div>\r\n              <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                className={classes.button}\r\n                hidden={activeStep === 0 ? true : false}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Button\r\n                variant='contained'\r\n                color='secondary'\r\n                onClick={handleNext}\r\n                className={classes.button}\r\n              >\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport ViewPointOfSaleComponents from './components/PointOfSale/ViewPointOfSaleComponents';\r\n\r\nexport default function PointOfSaleComponents() {\r\n    return (\r\n        <Switch>\r\n            <Redirect exact={true} from=\"/\" to=\"/point-of-sale\"/>\r\n            <Route path=\"/point-of-sale\" component={ViewPointOfSaleComponents} />\r\n        </Switch>\r\n    )\r\n}"],"sourceRoot":""}